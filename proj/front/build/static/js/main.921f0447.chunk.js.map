{"version":3,"sources":["components/Booking/images/hotel.jpg","assets/LOGO.png","components/Booking/images/transport.png","components/HotelsPage/hotel.jpg","components/HotelsPage/hotel1.jpg","components/HotelsPage/hotel2.jpg","components/HotelsPage/hotel3.jpg","components/HotelsPage/hotel4.jpg","components/HotelsPage/hotel5.jpeg","components/HotelsPage/hotel6.jpg","components/HotelsPage/hotel7.jpg","components/HotelsPage/hotel8.jpeg","components/HotelsPage/hotel9.jpg","components/HotelsPage/hotel10.jpg","components/HotelsPage/hotel11.jpeg","components/HotelsPage/hotel12.jpg","components/HotelsPage/hotel13.jpg","components/HotelsPage/hotel14.jpg","components/HotelsPage/hotel15.jpeg","components/RestaurantsPage/restaurant.jpg","components/RestaurantsPage/restaurant1.jpg","components/RestaurantsPage/restaurant2.jpg","components/RestaurantsPage/restaurant3.jpg","components/RestaurantsPage/restaurant4.jpg","components/RestaurantsPage/restaurant5.jpg","components/RestaurantsPage/restaurant6.jpg","components/RestaurantsPage/restaurant7.jpg","components/RestaurantsPage/restaurant8.jpg","components/RestaurantsPage/restaurant9.jpg","components/RestaurantsPage/restaurant10.jpg","components/RestaurantsPage/restaurant11.jpg","components/NavBar/Navbar.js","components/LoginForm/Login.js","components/SignupForm/Signup.js","components/HomePage/HeroSection.js","components/HomePage/PreplannedTrip/packagedata.js","components/HomePage/PreplannedTrip/similarity.js","components/HomePage/PreplannedTrip/ToursSection.js","components/HomePage/PopularDestinations.js","components/HomePage/AiBanner.js","components/HomePage/Challenges.js","components/HomePage/Homepage.js","components/CityPage/City.js","components/CityPage/Hero.js","components/CityPage/TopAttractions.js","components/CityPage/HotelsSection.js","components/CityPage/RestaurantsSection.js","components/CityPage/panoramadata.js","components/CityPage/panorama.js","components/CityPage/CityPage.js","components/CityPage/Footer.js","components/HomePage/PlanSelection.js","components/ChatbotPage/MiloChatbot.js","components/HomePage/crosswordData.js","components/HomePage/CrosswordGrid.js","components/HomePage/Option.js","components/HomePage/Question.js","components/HomePage/QuestionBank.js","components/HomePage/Score.js","components/HomePage/quiz.js","components/RecommendationForm/ItineraryForm.js","components/CheckoutPage/CheckoutPage.js","components/HomePage/PreplannedTrip/Tripdetail.js","components/HomePage/PreplannedTrip/AllTrips.js","components/Booking/UserCustomization/UserCustomization.js","components/Booking/BookingOptions.js","components/Booking/BookHotel.js","components/Booking/BookTransport.js","components/HotelsPage/Hotels.js","components/RestaurantsPage/Restaurants.js","components/Cart/Cart.js","components/ChekoutPage/ChekoutPage.js","components/Confirmation/Confirmation.js","components/UserProfile/Profile.js","components/CheckoutPage/Checkout2.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","CITIES","Navbar","isAuthenticated","setIsAuthenticated","useState","searchQuery","setSearchQuery","searchResults","setSearchResults","searchOpen","setSearchOpen","error","setError","backgroundGray","setBackgroundGray","dropdownVisible","setDropdownVisible","points","setPoints","navigate","useNavigate","useEffect","token","localStorage","getItem","fetchUserPoints","async","user","JSON","parse","email","console","response","axios","get","headers","Authorization","concat","X-User-Email","data","checkAuthentication","window","addEventListener","removeEventListener","handleSectionClick","cityName","section","toLowerCase","state","scrollTo","React","createElement","className","Link","to","src","logo","alt","onClick","FaSearch","handleProfileClick","FaUser","signOut","removeItem","type","placeholder","value","onChange","e","query","length","matchedCity","find","city","includes","params","name","path","hotels","restaurants","thingsToDo","attractions","handleSearch","target","handleCityClick","FaMapMarkerAlt","FaWalking","FaHotel","FaUtensils","LoginForm","formData","setFormData","password","touched","setTouched","errors","setErrors","isSubmitting","setIsSubmitting","validateField","prev","[object Object]","onBlur","FaPlane","submit","FaExclamationCircle","onSubmit","preventDefault","emailError","passwordError","res","post","setItem","stringify","dispatchEvent","Event","err","FaLock","disabled","SignupForm","firstName","lastName","phoneNumber","confirmPassword","touchedFields","setTouchedFields","trim","emailRegex","test","phoneRegex","handleBlur","errorMessage","newErrors","Object","keys","forEach","key","reduce","acc","alert","_err$response","message","MdOutlineAlternateEmail","BsTelephone","href","citiesInPakistan","images","HeroSection","startingPoint","setStartingPoint","destination","setDestination","startDate","setStartDate","endDate","setEndDate","guests","setGuests","currentImageIndex","setCurrentImageIndex","isLoggedIn","setIsLoggedIn","setEmail","interval","setInterval","prevIndex","clearInterval","today","Date","todayStr","toISOString","split","next7Days","setDate","getDate","next7DaysStr","style","fontWeight","textAlign","fontSize","marginTop","marginBottom","setHours","tripStart","tripEnd","isNaN","minStartDate","tripDuration","sessionStorage","customizationData","status","_error$response","handleSaveCustomization","map","index","min","max","Number","color","trips","id","title","description","image","cities","days","cosineSimilarity","vecA","vecB","categories","Set","dotProduct","magA","magB","category","valA","valB","Math","sqrt","ToursSection","loading","setLoading","setAttractions","setRestaurants","setHotels","userPastTrips","setUserPastTrips","userEmail","setUserEmail","recommendedTrips","setRecommendedTrips","restaurantReviews","setRestaurantReviews","storedUser","fetch","ok","Error","statusText","text","cleanedData","Papa","header","skipEmptyLines","item","address","availability","rating","parseFloat","image1","image2","image3","filter","Boolean","fetchAttractions","cleanedRestaurants","json","restaurant","_restaurant$_id","restaurant_id","_id","$oid","phone_number","service","openHour","Open_hour","Array","isArray","fetchRestaurants","log","slice","latestTrips","sort","a","b","cityVectors","attr","mostSimilarCities","trip","destinationVector","similarityScores","similarity","sim","add","topTrips","matchedCities","has","matchCount","fetchPastTrips","fetchHotels","handleViewAll","enrichedTrips","cityData","cityAttractions","cityRestaurants","cityHotels","hotel","allAttractions","allRestaurants","allHotels","tripTitle","tripImage","handleViewDetails","PopularDestinations","country","dest","_","i","AiBanner","ChallengeCard","_ref","detailsLink","onRedirect","earned","onCheckConsecutiveLogins","challengeId","onShowLoginModal","isLiked","setIsLiked","FontAwesomeIcon","icon","faAward","faChevronRight","Challenges","earnedChallenges","setEarnedChallenges","consecutiveLogins","setConsecutiveLogins","loginMessage","setLoginMessage","showLoginModal","setShowLoginModal","location","useLocation","_location$state","fetchAllChallengeStatuses","statuses","completedChallengeIds","redirectedFromChallengeId","checkConsecutiveLogins","consecutiveLoginDays","lastLoginDate","toDateString","handleShowLoginModal","redirectToLogin","challenge","assign","stopPropagation","Homepage","NavBar","cityImages","Islamabad","Lahore","Karachi","Kashmir","Murree","Hunza","Skardu","Chitral","Gilgit","Multan","Abbottabad","Quetta","Naran","Batakundi","Peshawar","Faisalabad","City","getUniqueCities","hotelData","Hero","backgroundImage","TopAttractions","selectedAttraction","setSelectedAttraction","complete","result","filteredAttractions","attraction","_attraction$name","_attraction$descripti","_attraction$category","_attraction$address","_attraction$city","_attraction$availabil","_attraction$image","_attraction$image2","_attraction$image3","closeAttractionDetails","openAttractionDetails","floor","toFixed","prevImage","nextImage","HotelsSection","_selectedHotel$images","_selectedHotel$review","_selectedHotel$review2","hotelReviewsData","setHotelReviewsData","selectedHotel","setSelectedHotel","popupActive","setPopupActive","currentHotelImageIndex","setCurrentRestaurantImageIndex","fetchHotelReviews","filteredReviews","review","hotelIds","hotel_id","_review$_id","username","review_text","filteredHotels","_hotel$city","getHotelRating","hotelId","hotelReviews","totalReviews","averageRating","sum","_hotel$images","reviews","handleHotelClick","round","closePopup","setTimeout","handlePrevHotelImage","handleNextHotelImage","facilities","idx","User","repeat","RestaurantsSection","_selectedRestaurant$i","_selectedRestaurant$r","_selectedRestaurant$r2","reviewsData","setReviewsData","selectedRestaurant","setSelectedRestaurant","currentRestaurantImageIndex","fetchReviews","restaurantIds","r","getRestaurantRating","restaurantId","handleRestaurantClick","closeDetailCard","img","panoramaData","PanoramaViewer","showPanorama","onClose","panoramaRef","useRef","pannellumCSS","document","rel","head","appendChild","pannellumJS","onload","current","pannellum","viewer","panorama","autoLoad","autoRotate","showZoomCtrl","showFullscreenCtrl","body","removeChild","ref","CityPage","setShowPanorama","showTooltip","setShowTooltip","onMouseEnter","onMouseLeave","process","handlePanoramaClick","closePanorama","Footer","SelectionCard","route","iconMain","features","buttonText","handleCardClick","feature","PlanSelection","isLoaded","setIsLoaded","MessageCircle","Zap","size","ClipboardList","MiloChatbot","messages","setMessages","input","setInput","welcomeVisible","setWelcomeVisible","history","setHistory","historyIndex","setHistoryIndex","isTyping","setIsTyping","sender","handleUserMessage","userMessage","endpoint","payload","user_input","userInputParts","startingCity","indexOf","destinationCity","daysMatch","match","parseInt","starting_city","destination_city","numRecommendations","num_recommendations","method","Content-Type","botResponse","replace","recommendations","content","daySections","join","itineraryCards","_dayDetails$0$match","dayDetails","line","dayNumber","dayContent","detail","push","totalCost","msg","totalCostCard","onKeyDown","newIndex","onFocus","crosswordData","answer","hint","startx","starty","orientation","position","level","generateInitialGrid","initialGrid","fill","x","y","generateAnswerGrid","answerGrid","_ref2","CrosswordGrid","grid","setGrid","hoveredHint","setHoveredHint","hintPosition","setHintPosition","top","left","showWinMessage","setShowWinMessage","showLoseMessage","setShowLoseMessage","updatePointsAndStatus","_error$response2","closeMessage","row","rowIndex","cell","colIndex","entry","rect","getBoundingClientRect","scrollY","scrollX","handleInputChange","col","newGrid","toUpperCase","maxLength","handleGenerate","handleReset","handleSolve","Options","Component","render","options","selectedOption","onOptionChange","this","props","option","Question","constructor","super","arguments","handleOptionChange","setState","checkAnswer","question","timer","qBank","Score","score","onNextQuestion","Quiz","questionBank","currentQuestion","setCurrentQuestion","setSelectedOption","setScore","quizEnd","setQuizEnd","setTimer","messageVisible","setMessageVisible","pointsSent","setPointsSent","intervalId","prevTimer","updatePoints","handleNextQuestion","prevQuestion","winMessage","prevScore","ItineraryForm","starting_point","duration_days","num_travelers","area_of_interest","budget","allocation_percentages","itinerary","setItinerary","handleChange","field","prevState","global","entries","formErrors","validateForm","_err$response$data","htmlFor","total_budget","price","transportation","mode","estimated_cost","day","lunch","dinner","cost_breakdown","total_cost","confirmBooking","CheckoutPage","stripe","useStripe","elements","useElements","success","setSuccess","promoCode","setPromoCode","isCardFocused","setIsCardFocused","tripData","setTripData","initialLoad","setInitialLoad","applyingPromo","setApplyingPromo","promoDiscount","setPromoDiscount","promoError","setPromoError","tripId","checkoutData","discountPercentage","summary","fetchTripData","calculateTotals","subtotal","discount","total","pointsDiscount","promoAmount","totalDiscount","paymentDetails","amount","date","clearTimeout","reload","Shield","CreditCard","from","Calendar","toLocaleDateString","month","year","duration","toLocaleString","mockValidCodes","WELCOME10","TRAVEL20","FIRSTTRIP","Lock","event","clientSecret","stripeError","paymentIntent","confirmCardPayment","payment_method","card","getElement","CardElement","_location$state2","patch","promoApplied","base","fontFamily","::placeholder","padding","invalid","Fragment","TripDetails","_selectedAttraction$i","HotelReviewsData","totalPrice","setTotalPrice","currentAttractionImageIndex","setCurrentAttractionImageIndex","formattedReviews","formattedHotelReviews","hotelPrice","calculateAverageRating","mean","getRestaurantReviews","calculateAverageHotelRating","HotelReviews","getHotelReviews","fallbackDescriptions","splitDataByDays","items","itemsPerDay","ceil","_city$hotels","splitRestaurants","splitAttractions","dayIndex","_splitRestaurants$day","_splitAttractions$day","_restaurant$images","avgRating","encodeURI","onError","onerror","_attraction$images","handleAttractionClick","avgHotelRating","userData","bookingData","cityBookings","_city$hotels$","_city$hotels$2","hotelName","random","closeHotelCard","handlePrevImage","handleNextImage","handlePrevAttractionImage","handleNextAttractionImage","AllTrips","UserCustomization","isLoading","setIsLoading","setTripId","tripSummary","setTripSummary","numberOfDays","tripDetails","setTripDetails","transport","setDayDetails","cityOptions","Default","start","timeDiff","daysDiff","existingTripId","newTripId","loadOrCreateTrip","pathname","selectedTransport","updatedDetails","updateBookingDetails","handleEditTripDetails","currentDetails","handleDetailChange","updatedDayDetails","getPropertyValue","obj","property","fallback","undefined","properties","prop","formatDate","dateString","weekday","calculateTotalCost","LUNCH_COST","DINNER_COST","hotelCost","transportCost","foodCost","attractionsCost","values","attractionFee","getDaysArray","dayDate","arrival_time","details","place","userPointsDiscount","daysData","dayTitle","dayCost","transportPrice","transportMode","sumOfDayCosts","BookingOptions","setSelectedTransport","handleBookTransport","currentTransport","returnTo","handleBookHotel","currentHotel","handleGoBack","transportImg","car_name","bus_name","train_name","departure_time","handleEditTransport","FaEdit","hotelImg","handleEditHotel","handleConfirmBooking","calculateTotalPrice","BhConfirmationModal","onConfirm","onCancel","BhHotelCard","defaultImage","BhHotelPopup","_ref3","onBookNow","gridColumn","facility","BookHotel","showConfirmation","setShowConfirmation","handleHotelSelect","handleClosePopUp","handleBooking","BookTransport","buses","setBuses","selectedItem","setSelectedItem","showConfirmPopup","setShowConfirmPopup","notification","setNotification","showNotification","setShowNotification","busResponse","busText","filteredBuses","bus","ending","localeCompare","fetchData","cancelBooking","busImage","nameLower","matchedBus","getBusImagePath","starting","hotelImages","require","Hotels","hotelsByCity","setHotelsByCity","ratings","setRatings","then","csvText","ratingsMap","groupedHotels","_ratings$hotel$name","_ratings$hotel$name2","scroll","direction","container","getElementById","scrollBy","behavior","_hotel$facilities","restaurantImages","Restaurants","restaurantsByCity","setRestaurantsByCity","scrollRefs","groupedRestaurants","Name","phone","hours","services","catch","scrollAmount","el","Cart","_paymentDetails$amoun","_paymentDetails$amoun2","setPaymentDetails","storedDayDetails","handleBackToHome","paymentDate","bookingId","_day$totalCost","dayDetail","handlePrintItinerary","print","Printer","Home","ChekoutPage","_cost_breakdown$hotel","_cost_breakdown$resta","storedItinerary","calculateTotal","hotel_cost","restaurant_cost","Confirmation","_cost_breakdown$total","_cost_breakdown$attra","_cost_breakdown$trans","_cost_breakdown$total2","_transportation$estim","_cost_breakdown$budge","attraction_cost","transport_cost","_day$attraction","_day$attraction2","Profile","isEditing","setIsEditing","setUser","itineraries","setItineraries","challenges","setChallenges","vouchers","setVouchers","requiredPoints","isRedeemed","handleEditToggle","voucher","toString","substr","updatedVouchers","handleRedeem","Checkout2","setHotelData","handleApplyPromo","promoCodes","SAVE10","DISCOUNT20","stripePromise","loadStripe","CityPageWrapper","ConditionalFooter","App","Routes","Route","element","Hotel","UserProfile","onPointsUpdate","earnedPoints","prevPoints","Elements","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.921f0447.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hotel.f2e0b37e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LOGO.75f80922.png\";","module.exports = __webpack_public_path__ + \"static/media/transport.a266a76b.png\";","module.exports = __webpack_public_path__ + \"static/media/hotel.f2e0b37e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel1.14facd18.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel2.3ae4bc9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel3.c404a5dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel4.b38c7ead.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel5.47138b0d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hotel6.f86d49b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel7.b30940e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel8.a436c120.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hotel9.20c7df42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel10.1525f665.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel11.3c7f750c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hotel12.d9e9b817.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel13.dc9d6a51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel14.43ba4803.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotel15.2a3c4e36.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant.fa12e237.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant1.2a73633d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant2.c75d26a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant3.cbd3f621.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant4.c3c147c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant5.a1b5392d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant6.d1c474e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant7.7d0bcaae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant8.6f7351ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant9.4a167579.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant10.92c9ca2f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/restaurant11.8ee77387.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FaHotel, FaUtensils, FaSearch, FaMapMarkerAlt, FaWalking, FaUser } from 'react-icons/fa';\r\nimport logo from '../../assets/LOGO.png';\r\nimport './Navbar.css';\r\nimport axios from 'axios';\r\n\r\nconst CITIES = [\"Islamabad\", \"Lahore\", \"Karachi\", \"Murree\", \"Peshawar\", \"Skardu\", \"Hunza\", \"Quetta\", \"Multan\", \"Faisalabad\"];\r\n\r\nconst Navbar = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState(null);\r\n  const [searchOpen, setSearchOpen] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [backgroundGray, setBackgroundGray] = useState(false);\r\n  const [dropdownVisible, setDropdownVisible] = useState(false);\r\n  const [points, setPoints] = useState(0); // State for points\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsAuthenticated(!!token);\r\n\r\n    if (token) {\r\n      fetchUserPoints(token);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUserPoints = async (token) => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem('user')); // Get user details from localStorage\r\n      if (!user || !user.email) {\r\n        console.error('User email not found in localStorage');\r\n        return;\r\n      }\r\n\r\n      const response = await axios.get('http://localhost:5000/api/users/points', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Pass the token\r\n          'X-User-Email': user.email,      // Pass the email in a custom header\r\n        },\r\n      });\r\n\r\n      setPoints(response.data.points || 0); // Set points from MongoDB\r\n    } catch (error) {\r\n      console.error('Failed to fetch points:', error);\r\n      setPoints(0); // Default to 0 if fetching fails\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkAuthentication = () => {\r\n      const token = localStorage.getItem('token');\r\n      setIsAuthenticated(!!token);\r\n    };\r\n    checkAuthentication();\r\n    window.addEventListener('storage', checkAuthentication);\r\n    return () => {\r\n      window.removeEventListener('storage', checkAuthentication);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setBackgroundGray(searchOpen);\r\n  }, [searchOpen]);\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearchQuery(query);\r\n    if (query.length >= 2) {\r\n      setError(null);\r\n      const matchedCity = CITIES.find(city => city.toLowerCase().includes(query.toLowerCase()));\r\n      if (matchedCity) {\r\n        try {\r\n          const { data } = await axios.get('http://localhost:5000/api/search', {\r\n            params: { query: matchedCity }\r\n          });\r\n          setSearchResults({\r\n            city: {\r\n              name: matchedCity,\r\n              path: `/city/${matchedCity.toLowerCase()}`,\r\n            },\r\n            hotels: data.hotels || [],\r\n            restaurants: data.restaurants || [],\r\n            thingsToDo: data.attractions || []\r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching search results:', error);\r\n          setError('An error occurred while searching. Please try again.');\r\n        }\r\n      } else {\r\n        setSearchResults(null);\r\n        setError(`No results for \"${query}\"`);\r\n      }\r\n    } else {\r\n      setSearchResults(null);\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const handleCityClick = (cityName) => {\r\n    navigate(`/city/${cityName.toLowerCase()}`, { state: { cityName } });\r\n    setSearchOpen(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const handleSectionClick = (cityName, section) => {\r\n    navigate(`/city/${cityName.toLowerCase()}`, {\r\n      state: { cityName, scrollTo: section }\r\n    });\r\n    setSearchOpen(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const handleProfileClick = () => {\r\n    setDropdownVisible(!dropdownVisible);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbaar\">\r\n      <div className=\"navbar-container\">\r\n        <Link to=\"/\" className=\"navbar-logo\">\r\n          <img src={logo} alt=\"Logo\" />\r\n          <span>Voyaige</span>\r\n        </Link>\r\n        <ul className=\"navbar-menu\">\r\n          <li><Link to=\"/\">Home</Link></li>\r\n          <li><Link to=\"/city\">Cities</Link></li>\r\n          <li><Link to=\"/hotels\">Hotels</Link></li>\r\n          <li><Link to=\"/restaurants\">Restaurants</Link></li>\r\n        </ul>\r\n        <div className=\"navbar-actions\">\r\n          <button \r\n            onClick={() => setSearchOpen(!searchOpen)} \r\n            className=\"search-button-circle\"  \r\n          >\r\n            <FaSearch />\r\n          </button>\r\n          {isAuthenticated ? (\r\n            <div className=\"profile-container\">\r\n              <button className=\"profile-button\" onClick={handleProfileClick}>\r\n                <FaUser />\r\n              </button>\r\n              {dropdownVisible && (\r\n                <div className=\"profile-dropdown\">\r\n                  <ul>\r\n                    <li>Points: {points}</li> {/* Display points dynamically */}\r\n                    <li><Link to=\"/profile\">Profile</Link></li>\r\n                    <li><button onClick={signOut}>Log Out</button></li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {searchOpen && (\r\n        <div className=\"nav-search-overlay\">\r\n          <div className=\"nav-search-box\">\r\n            <div className=\"nav-search-input-container\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search cities...\"\r\n                value={searchQuery}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n                className=\"nav-search-input\"\r\n              />\r\n            </div>\r\n\r\n            {error && <p className=\"nav-error-message\">{error}</p>}\r\n\r\n            {searchResults && searchQuery && !error && (\r\n              <div className=\"nav-search-recommendations\">\r\n                <div \r\n                  className=\"nav-recommendation-item\"\r\n                  onClick={() => handleCityClick(searchResults.city.name)}\r\n                >\r\n                  <FaMapMarkerAlt className=\"nav-recommendation-icon\" />\r\n                  <div className=\"nav-recommendation-content\">\r\n                    <div className=\"nav-recommendation-title\">{searchResults.city.name}</div>\r\n                    <div className=\"nav-recommendation-subtitle\">City</div>\r\n                  </div>\r\n                </div>\r\n                <div \r\n                  className=\"nav-recommendation-item\"\r\n                  onClick={() => handleSectionClick(searchResults.city.name, 'TopAttractions')}\r\n                >\r\n                  <FaWalking className=\"nav-recommendation-icon\" />\r\n                  <div className=\"nav-recommendation-content\">\r\n                    <div className=\"nav-recommendation-title\">Things to Do</div>\r\n                    <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n                  </div>\r\n                </div>\r\n                <div \r\n                  className=\"nav-recommendation-item\"\r\n                  onClick={() => handleSectionClick(searchResults.city.name, 'HotelsSection')}\r\n                >\r\n                  <FaHotel className=\"nav-recommendation-icon\" />\r\n                  <div className=\"nav-recommendation-content\">\r\n                    <div className=\"nav-recommendation-title\">Hotels</div>\r\n                    <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n                  </div>\r\n                </div>\r\n                <div \r\n                  className=\"nav-recommendation-item\"\r\n                  onClick={() => handleSectionClick(searchResults.city.name, 'RestaurantsSection')}\r\n                >\r\n                  <FaUtensils className=\"nav-recommendation-icon\" />\r\n                  <div className=\"nav-recommendation-content\">\r\n                    <div className=\"nav-recommendation-title\">Restaurants</div>\r\n                    <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n\r\n","// LoginForm.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { FaUser, FaLock, FaPlane, FaExclamationCircle } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nconst LoginForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [touched, setTouched] = useState({\r\n    email: false,\r\n    password: false\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Validation function\r\n  const validateField = (name, value) => {\r\n    switch(name) {\r\n      case 'email':\r\n        if (!value) return 'Email is required';\r\n        if (!value.includes('@')) return 'Email must contain @';\r\n        if (!value.includes('.')) return 'Email must contain a domain';\r\n        return '';\r\n      case 'password':\r\n        if (!value) return 'Password is required';\r\n        if (value.length < 8) return 'Password must be at least 8 characters';\r\n        return '';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  // Handle input change\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n\r\n    // Validate immediately\r\n    const error = validateField(name, value);\r\n    setErrors(prev => ({\r\n      ...prev,\r\n      [name]: error\r\n    }));\r\n  };\r\n\r\n  // Handle input blur to show errors\r\n  const onBlur = (e) => {\r\n    const { name } = e.target;\r\n    setTouched(prev => ({\r\n      ...prev,\r\n      [name]: true\r\n    }));\r\n  };\r\n\r\n  // Submit handler\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate all fields\r\n    const emailError = validateField('email', formData.email);\r\n    const passwordError = validateField('password', formData.password);\r\n\r\n    setErrors({\r\n      email: emailError,\r\n      password: passwordError\r\n    });\r\n\r\n    setTouched({\r\n      email: true,\r\n      password: true\r\n    });\r\n\r\n    // Only submit if no errors\r\n    if (!emailError && !passwordError) {\r\n      setIsSubmitting(true);\r\n      try {\r\n        const res = await axios.post('http://localhost:5000/api/users/login', formData);\r\n        localStorage.setItem('token', res.data.token);\r\n        localStorage.setItem('user', JSON.stringify(res.data.user));\r\n        window.dispatchEvent(new Event('storage'));\r\n        navigate('/');\r\n      } catch (err) {\r\n        setErrors(prev => ({\r\n          ...prev,\r\n          submit: 'Login failed. Please check your credentials.'\r\n        }));\r\n      } finally {\r\n        setIsSubmitting(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n    <Navbar />\r\n      <div className=\"auth-form\">\r\n        <Link to=\"/\" className=\"logo\">\r\n         <FaPlane className=\"plane-icon\" /><h3>Voyaige</h3>\r\n        </Link>\r\n\r\n        <h2>Welcome Back!</h2>\r\n\r\n        {errors.submit && (\r\n          <div className=\"global-error\">\r\n            <FaExclamationCircle />\r\n            {errors.submit}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={onSubmit}>\r\n          <div className={`input-group ${touched.email && errors.email ? 'input-error' : ''}`}>\r\n            <FaUser className=\"icon\" />\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={onChange}\r\n              onBlur={onBlur}\r\n              placeholder=\"Email\"\r\n            />\r\n            {touched.email && errors.email && (\r\n              <div className=\"error-tooltip\">\r\n                <FaExclamationCircle /> {errors.email}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className={`input-group ${touched.password && errors.password ? 'input-error' : ''}`}>\r\n            <FaLock className=\"icon\" />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={onChange}\r\n              onBlur={onBlur}\r\n              placeholder=\"Password\"\r\n            />\r\n            {touched.password && errors.password && (\r\n              <div className=\"error-tooltip\">\r\n                <FaExclamationCircle /> {errors.password}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\" \r\n            className=\"submit-btn\" \r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Logging In...' : 'Log In'}\r\n          </button>\r\n        </form>\r\n\r\n        <p className=\"switch-form\">\r\n          Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","// import React, { useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import './Signup.css';\r\n// import { FaUser, FaLock } from 'react-icons/fa';\r\n// import { MdOutlineAlternateEmail } from 'react-icons/md';\r\n// import { BsTelephone } from 'react-icons/bs';\r\n// import axios from 'axios';\r\n\r\n// const SignupForm = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     firstName: '',\r\n//     lastName: '',\r\n//     email: '',\r\n//     phoneNumber: '',\r\n//     password: '',\r\n//     confirmPassword: '',\r\n//   });\r\n\r\n//   const { firstName, lastName, email, phoneNumber, password, confirmPassword } = formData;\r\n//   const navigate = useNavigate();\r\n\r\n//   const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n//   const onSubmit = async e => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5000/api/users/register', formData);\r\n//       console.log('Registration response:', res.data);\r\n//       alert('Registration successful, please log in.');\r\n//       navigate('/login'); // Navigate to the login page\r\n//     } catch (err) {\r\n//       console.error('Error registering:', err.response ? err.response.data : err.message);\r\n//       if (err.response) {\r\n//         console.error('Response data:', err.response.data);\r\n//         console.error('Response status:', err.response.status);\r\n//         console.error('Response headers:', err.response.headers);\r\n//       } else if (err.request) {\r\n//         console.error('Request data:', err.request);\r\n//       } else {\r\n//         console.error('Error message:', err.message);\r\n//       }\r\n//       alert('Error registering');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className='wrapper'>\r\n//       <form onSubmit={onSubmit}>\r\n//         <h1>Sign-up</h1>\r\n//         <div className='form-grid'>\r\n//           <div className='input-box'>\r\n//             <input\r\n//               type='text'\r\n//               name='firstName'\r\n//               value={firstName}\r\n//               onChange={onChange}\r\n//               placeholder='First Name'\r\n//               required\r\n//             />\r\n//             <FaUser className='icon' />\r\n//           </div>\r\n//           <div className='input-box'>\r\n//             <input\r\n//               type='text'\r\n//               name='lastName'\r\n//               value={lastName}\r\n//               onChange={onChange}\r\n//               placeholder='Last Name'\r\n//               required\r\n//             />\r\n//             <FaUser className='icon' />\r\n//           </div>\r\n//           <div className='input-box'>\r\n//             <input\r\n//               type='email'\r\n//               name='email'\r\n//               value={email}\r\n//               onChange={onChange}\r\n//               placeholder='Email'\r\n//               required\r\n//             />\r\n//             <MdOutlineAlternateEmail className='icon' />\r\n//           </div>\r\n//           <div className='input-box'>\r\n//             <input\r\n//               type='tel'\r\n//               name='phoneNumber'\r\n//               value={phoneNumber}\r\n//               onChange={onChange}\r\n//               placeholder='Phone Number'\r\n//               required\r\n//             />\r\n//             <BsTelephone className='icon' />\r\n//           </div>\r\n//           <div className='input-box'>\r\n//             <input\r\n//               type='password'\r\n//               name='password'\r\n//               value={password}\r\n//               onChange={onChange}\r\n//               placeholder='Password'\r\n//               required\r\n//             />\r\n//             <FaLock className='icon' />\r\n//           </div>\r\n//           <div className='input-box'>\r\n//             <input\r\n//               type='password'\r\n//               name='confirmPassword'\r\n//               value={confirmPassword}\r\n//               onChange={onChange}\r\n//               placeholder='Confirm Password'\r\n//               required\r\n//             />\r\n//             <FaLock className='icon' />\r\n//           </div>\r\n//         </div>\r\n//         <div className='remember-forgot'>\r\n//           <label>\r\n//             <input type='checkbox' /> Remember me\r\n//           </label>\r\n//           <a href='#'>Forgot Password?</a>\r\n//         </div>\r\n//         <button type='submit'>Sign Up</button>\r\n//         <div className='register-link'>\r\n//           <p>\r\n//             Already have an account? <Link to='/login'>Log In</Link>\r\n//           </p>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SignupForm;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaUser, FaLock, FaPlane } from 'react-icons/fa';\r\nimport { MdOutlineAlternateEmail } from 'react-icons/md';\r\nimport { BsTelephone } from 'react-icons/bs';\r\nimport axios from 'axios';\r\nimport './Signup.css';\r\n\r\nconst SignupForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [touchedFields, setTouchedFields] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const validateField = (name, value) => {\r\n    switch (name) {\r\n      case 'firstName':\r\n        return !value.trim() ? 'First name is required' : '';\r\n      case 'lastName':\r\n        return !value.trim() ? 'Last name is required' : '';\r\n      case 'email':\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!value.trim()) return 'Email is required';\r\n        if (!emailRegex.test(value)) return 'Invalid email format';\r\n        return '';\r\n      case 'phoneNumber':\r\n        const phoneRegex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\r\n        if (!value.trim()) return 'Phone number is required';\r\n        if (!phoneRegex.test(value)) return 'Invalid phone number';\r\n        return '';\r\n      case 'password':\r\n        if (!value) return 'Password is required';\r\n        if (value.length < 8) return 'Password must be at least 8 characters';\r\n        return '';\r\n      case 'confirmPassword':\r\n        if (!value) return 'Please confirm your password';\r\n        if (value !== formData.password) return 'Passwords do not match';\r\n        return '';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    const { name, value } = e.target;\r\n    setTouchedFields(prev => ({ ...prev, [name]: true }));\r\n    \r\n    const errorMessage = validateField(name, value);\r\n    setErrors(prev => ({ ...prev, [name]: errorMessage }));\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    // Clear error when user starts typing if field has been touched\r\n    if (touchedFields[name]) {\r\n      const errorMessage = validateField(name, value);\r\n      setErrors(prev => ({ ...prev, [name]: errorMessage }));\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate all fields\r\n    const newErrors = {};\r\n    Object.keys(formData).forEach(key => {\r\n      const errorMessage = validateField(key, formData[key]);\r\n      if (errorMessage) newErrors[key] = errorMessage;\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    setTouchedFields(\r\n      Object.keys(formData).reduce((acc, key) => ({ ...acc, [key]: true }), {})\r\n    );\r\n\r\n    // Only submit if no errors\r\n    if (Object.keys(newErrors).length === 0) {\r\n      try {\r\n        const res = await axios.post('http://localhost:5000/api/users/register', formData);\r\n        alert('Registration successful, please log in.');\r\n        navigate('/login');\r\n      } catch (err) {\r\n        console.error('Registration error:', err.response?.data || err.message);\r\n        alert('Registration failed. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-form\">\r\n        <div className=\"logo\">\r\n          <h3>Voyaige</h3>\r\n          <FaPlane />\r\n        </div>\r\n        <h2>Join Us</h2>\r\n        <form onSubmit={onSubmit}>\r\n          <div className={`input-row`}>\r\n            <div className={`input-group ${touchedFields.firstName && errors.firstName ? 'error' : ''}`}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={formData.firstName}\r\n                onChange={onChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"First Name\"\r\n              />\r\n              {touchedFields.firstName && errors.firstName && (\r\n                <div className=\"error-tooltip\">{errors.firstName}</div>\r\n              )}\r\n            </div>\r\n            <div className={`input-group ${touchedFields.lastName && errors.lastName ? 'error' : ''}`}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={formData.lastName}\r\n                onChange={onChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"Last Name\"\r\n              />\r\n              {touchedFields.lastName && errors.lastName && (\r\n                <div className=\"error-tooltip\">{errors.lastName}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={`input-group ${touchedFields.email && errors.email ? 'error' : ''}`}>\r\n            <MdOutlineAlternateEmail className=\"icon\" />\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={onChange}\r\n              onBlur={handleBlur}\r\n              placeholder=\"Email\"\r\n            />\r\n            {touchedFields.email && errors.email && (\r\n              <div className=\"error-tooltip\">{errors.email}</div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className={`input-group ${touchedFields.phoneNumber && errors.phoneNumber ? 'error' : ''}`}>\r\n            <BsTelephone className=\"icon\" />\r\n            <input\r\n              type=\"tel\"\r\n              name=\"phoneNumber\"\r\n              value={formData.phoneNumber}\r\n              onChange={onChange}\r\n              onBlur={handleBlur}\r\n              placeholder=\"Phone Number\"\r\n            />\r\n            {touchedFields.phoneNumber && errors.phoneNumber && (\r\n              <div className=\"error-tooltip\">{errors.phoneNumber}</div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className={`input-group ${touchedFields.password && errors.password ? 'error' : ''}`}>\r\n            <FaLock className=\"icon\" />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={onChange}\r\n              onBlur={handleBlur}\r\n              placeholder=\"Password\"\r\n            />\r\n            {touchedFields.password && errors.password && (\r\n              <div className=\"error-tooltip\">{errors.password}</div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className={`input-group ${touchedFields.confirmPassword && errors.confirmPassword ? 'error' : ''}`}>\r\n            <FaLock className=\"icon\" />\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              value={formData.confirmPassword}\r\n              onChange={onChange}\r\n              onBlur={handleBlur}\r\n              placeholder=\"Confirm Password\"\r\n            />\r\n            {touchedFields.confirmPassword && errors.confirmPassword && (\r\n              <div className=\"error-tooltip\">{errors.confirmPassword}</div>\r\n            )}\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"submit-btn\">Sign Up</button>\r\n        </form>\r\n        <p className=\"switch-form\">\r\n          Already have an account? <a href=\"/login\">Log In</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './HeroSection.css';\r\n\r\nconst citiesInPakistan = [\r\n  \"Islamabad\",\r\n  \"Lahore\",\r\n  \"Karachi\",\r\n  \"Murree\",\r\n  \"Peshawar\",\r\n  \"Skardu\",\r\n  \"Hunza\",\r\n  \"Quetta\",\r\n  \"Multan\",\r\n  \"Faisalabad\",\r\n];\r\n\r\nconst images = [\r\n  'https://images8.alphacoders.com/422/422588.jpg',\r\n  'https://www.wns.co.za/Portals/0/Images/HeaderBanner/desktop/1087/53/travel_HD.jpg',\r\n  'https://firstta.com/images/reserval.png'\r\n];\r\n\r\nconst HeroSection = () => {\r\n  const [startingPoint, setStartingPoint] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [guests, setGuests] = useState(1);\r\n  const [error, setError] = useState('');\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user && user.email) {\r\n      setIsLoggedIn(true);\r\n      setEmail(user.email);\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  }, []);\r\n\r\n  const handleSaveCustomization = async (customizationData) => {\r\n    sessionStorage.removeItem('currentTripId');\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/users/customizations\", customizationData);\r\n\r\n      if (response.status === 201 || response.status === 200) {\r\n        navigate('/UserCustomization', { state: { customizationData } });\r\n      } else {\r\n        alert(\"Failed to save customization.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving customization:\", error.response?.data || error.message);\r\n      alert(\"Error while saving customization.\");\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n  \r\n    if (!isLoggedIn) {\r\n      setError(\"Please sign in to proceed!\");\r\n      return;\r\n    }\r\n  \r\n    if (!startingPoint || !destination || !startDate || !endDate || !guests) {\r\n      setError(\"Please fill in all required fields before proceeding.\");\r\n      return;\r\n    }\r\n  \r\n    if (startingPoint.trim().toLowerCase() === destination.trim().toLowerCase()) {\r\n      setError(\"Starting point and destination cannot be the same.\");\r\n      return;\r\n    }\r\n  \r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0); // Normalize today's date for comparison\r\n  \r\n    const tripStart = new Date(startDate);\r\n    const tripEnd = new Date(endDate);\r\n  \r\n    if (isNaN(tripStart) || isNaN(tripEnd)) {\r\n      setError(\"Invalid date format. Please enter a valid trip start and end date.\");\r\n      return;\r\n    }\r\n  \r\n    // Ensure trip starts at least one day after today\r\n    const minStartDate = new Date();\r\n    minStartDate.setDate(today.getDate());\r\n  \r\n    if (tripStart < minStartDate) {\r\n      setError(\"Trip start date must be at least one day after today.\");\r\n      return;\r\n    }\r\n  \r\n    if (tripEnd <= tripStart) {\r\n      setError(\"Trip end date must be after the start date.\");\r\n      return;\r\n    }\r\n  \r\n    // Ensure trip duration is at least 3 days\r\n    const tripDuration = (tripEnd - tripStart) / (1000 * 60 * 60 * 24);\r\n    if (tripDuration < 3) {\r\n      setError(\"Trip duration must be at least 3 days.\");\r\n      return;\r\n    }\r\n  \r\n    // Ensure trip duration does not exceed a realistic limit (e.g., 365 days)\r\n    if (tripDuration > 365) {\r\n      setError(\"Trip duration cannot be longer than 365 days.\");\r\n      return;\r\n    }\r\n  \r\n    // Guests must be a number greater than 0 and reasonable\r\n    if (isNaN(guests) || guests < 1 || guests > 100) {\r\n      setError(\"Please select a valid number of guests (1-100).\");\r\n      return;\r\n    }\r\n  \r\n    setError(\"\"); // Clear any previous error\r\n    const customizationData = {\r\n      email,\r\n      startingPoint,\r\n      destination,\r\n      startDate,\r\n      endDate,\r\n      guests,\r\n    };\r\n  \r\n    handleSaveCustomization(customizationData);\r\n  };\r\nconst today = new Date();\r\nconst todayStr = today.toISOString().split(\"T\")[0]; // Format: YYYY-MM-DD\r\n\r\nconst next7Days = new Date();\r\nnext7Days.setDate(today.getDate() + 7);\r\nconst next7DaysStr = next7Days.toISOString().split(\"T\")[0];\r\n  return (\r\n    <div className='heroo'>\r\n      <h1 className=\"titttle\" style={{ fontWeight: '800', textAlign: 'center', fontSize: '3rem', marginTop: '5rem', marginBottom: '1rem' }}>\r\n        <span> Where to?</span>\r\n      </h1>\r\n      <form onSubmit={handleSearch} className=\"search-form\">\r\n        <div className=\"search-row\">\r\n          <div className=\"search-input\">\r\n            <select value={startingPoint} onChange={(e) => setStartingPoint(e.target.value)}>\r\n              <option value=\"\" disabled>Starting Point</option>\r\n              {citiesInPakistan.map((city, index) => (\r\n                <option key={index} value={city}>{city}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"search-input\">\r\n            <select value={destination} onChange={(e) => setDestination(e.target.value)}>\r\n              <option value=\"\" disabled>Destination</option>\r\n              {citiesInPakistan.map((city, index) => (\r\n                <option key={index} value={city}>{city}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n    \r\n          <div className=\"search-input\">\r\n      <input\r\n        type=\"date\"\r\n        value={startDate}\r\n        onChange={(e) => setStartDate(e.target.value)}\r\n        min={todayStr}\r\n        max={next7DaysStr}\r\n        placeholder=\"Starting Date\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"search-input\">\r\n      <input\r\n        type=\"date\"\r\n        value={endDate}\r\n        onChange={(e) => setEndDate(e.target.value)}\r\n        min={todayStr}\r\n        max={next7DaysStr}\r\n        placeholder=\"Ending Date\"\r\n      />\r\n    </div>\r\n    \r\n          <div className=\"search-input\">\r\n            <select value={guests} onChange={(e) => setGuests(Number(e.target.value))}>\r\n            <option value=\"1\">Economy</option>\r\n              <option value=\"2\">Normal</option>\r\n              <option value=\"3\">Deluxe</option>\r\n              \r\n            </select>\r\n          </div>\r\n        </div>\r\n        {error && <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>}\r\n        <button type=\"submit\" className=\"search-button\">\r\n          <span>Plan Now</span>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","const trips = [\r\n\r\n  {\r\n    id: 1,\r\n    title: 'Cultural Exploration - Lahore & Multan',\r\n    description: 'Experience the cultural richness of Lahore and Multan.',\r\n    image:\"https://www.zameen.com/news/wp-content/uploads/2014/12/m4-600x265.jpg\",\r\n    cities: [\r\n      { name: 'Lahore', days: 2 },\r\n      { name: 'Multan', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '3 Days Adventure - Islamabad & Murree',\r\n    description: 'Enjoy the urban charm of Islamabad and the serene hills of Murree.',\r\n    image:\"https://explorepakistan.ca/wp-content/uploads/2019/05/ISALAMABAD-–-MURREE-TOUR.jpg\",\r\n    cities: [\r\n      { name: 'Islamabad', days: 1 },\r\n      { name: 'Murree', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Urban & Coastal Fun - Karachi & Quetta',\r\n    description: 'Enjoy the bustling metropolis of Karachi and vibrant Quetta.',\r\n    image:\"https://mediaim.expedia.com/destination/9/3b00c100e7c2d0a47a31f2bf6f50bdd4.jpg\",\r\n    cities: [\r\n      { name: 'Karachi', days: 1 },\r\n      { name: 'Quetta', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    title: '4 DAYS TRIP TO Northern Beauty - Skardu & Hunza',\r\n    description: 'Explore the breathtaking valleys of Skardu,  and Hunza.',\r\n    image: 'https://i.dawn.com/primary/2015/04/552534a77b507.jpg?r=961640394',\r\n    cities: [\r\n      { name: 'Skardu', days: 2 },\r\n      { name: 'Hunza', days: 2 },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 5,\r\n    title: 'Historical Journey - Quetta and Peshawar',\r\n    description: 'Discover the rich history of Quetta and Peshawar.',\r\n    image:\"https://cdn.britannica.com/02/127002-050-084ED6E6/Islamia-College-Peshawar-Pakistan-North-West-Frontier-Province.jpg\",\r\n    cities: [\r\n      { name: 'Quetta', days: 2 },\r\n      { name: 'Peshawar', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'Hill Station Retreat - Murree and Abbottabad',\r\n    description: 'Relax in the scenic hill stations of Murree and Abbottabad.',\r\n    image:\"https://www.getout.pk/pakistan/wp-content/uploads/2018/12/The-Murree-city-Kashmir-Point-Pakistan.-Image.png\",\r\n    cities: [\r\n      { name: 'Murree', days: 2 },\r\n      { name: 'Abbottabad', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Valley Exploration - Kashmir and Naran',\r\n    description: 'Witness the mesmerizing valleys of Kashmir and Naran.',\r\n    image:\"https://seepakistantours.com/wp-content/uploads/2019/02/Naran-Kaghan-Neelum-7-Days-Tour.jpg\",\r\n    cities: [\r\n      { name: 'Kashmir', days: 2 },\r\n      { name: 'Naran', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    title: 'Nature & Serenity - Gilgit & Batakundi',\r\n    description: 'Embrace the serenity of Gilgit and Batakundi.',\r\n    image:\"https://www.pakistantravelguide.pk/wp-content/uploads/2016/11/phandar-valley.png\",\r\n    cities: [\r\n      { name: 'Gilgit', days: 1 },\r\n      { name: 'Batakundi', days: 1 }\r\n    ],\r\n  },\r\n  \r\n    {\r\n      id: 9,\r\n      title: 'Historical & Urban Adventure for 5 Days  - Lahore, Islamabad ',\r\n      description: 'Experience the rich culture and modern vibes of Lahore, Islamabad.',\r\n      image: 'https://i0.wp.com/www.pakistangulfeconomist.com/wp-content/uploads/2017/10/Islamabad.jpg?fit=1045%2C600&ssl=1',\r\n      cities: [\r\n        { name: 'Lahore', days: 3 },\r\n        { name: 'Islamabad', days: 2 },\r\n      ],\r\n    },\r\n    {\r\n      id: 10,\r\n      title: 'Majestic Historical Escapade for 3 Days  - Maultan and Peshawar',\r\n      description: 'Discover the stunning history in Peshawar and Multan.',\r\n      image: 'https://tripjive.com/wp-content/uploads/2024/12/Multan-Fort-historical-fortress-UNESCO-World-Heritage-site-1024x585.jpg',\r\n      cities: [\r\n        { name: 'Multan', days: 2 },\r\n        { name: 'Peshawar', days: 1 },\r\n      ],\r\n    },\r\n  {\r\n    id: 11,\r\n    title: 'Nature Expedition - Skardu, Hunza & Gilgit',\r\n    description: 'Experience the natural beauty of Skardu, Hunza, and Gilgit.',\r\n    image:\"https://www.jasminetours.com/wp-content/uploads/2023/08/hunza-valley2-1920-1.jpg\",\r\n    cities: [\r\n      { name: 'Skardu', days: 1 },\r\n      { name: 'Hunza', days: 1 },\r\n      { name: 'Gilgit', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    title: 'Cultural Heritage - Lahore, Multan & Quetta',\r\n    description: 'Dive into the cultural heritage of Lahore, Multan, and Quetta.',\r\n    image:\"https://www.pncu.gov.pk/SiteImage/Misc/images/takht-i-bahi.jpg\",\r\n    cities: [\r\n      { name: 'Lahore', days: 2 },\r\n      { name: 'Multan', days: 1 },\r\n      { name: 'Quetta', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 13,\r\n    title: 'Mountain Adventure - Naran, Batakundi & Gilgit',\r\n    description: 'Explore the mountain ranges of Naran, Batakundi, and Gilgit.',\r\n    image:\"https://upload.wikimedia.org/wikipedia/commons/5/57/Batakundi_naran_KPK.jpg\",\r\n\r\n    cities: [\r\n      { name: 'Naran', days: 2 },\r\n      { name: 'Batakundi', days: 1 },\r\n      { name: 'Gilgit', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 14,\r\n    title: 'Urban Excursion - Karachi, Lahore & Islamabad',\r\n    description: 'Discover the urban life in Karachi, Lahore, and Islamabad.',\r\n    image:\"https://www.pakistaneconomist.com/files/wp-content/uploads/2017/10/punjab.jpg\",\r\n    cities: [\r\n      { name: 'Karachi', days: 1 },\r\n      { name: 'Lahore', days: 2 },\r\n      { name: 'Islamabad', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 15,\r\n    title: 'Lakes & Valleys - Naran & Batakundi',\r\n    description: 'Marvel at the lakes and valleys of Naran and Batakundi.',\r\n    image:\"https://dynamic-media-cdn.tripadvisor.com/media/photo-o/0f/5e/84/76/count-the-jeeps-on-lake.jpg?w=1200&h=900&s=1\",\r\n    cities: [\r\n      { name: 'Naran', days: 2 },\r\n      { name: 'Batakundi', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 16,\r\n    title: 'Discover the Cultural Heritage of Multan & Quetta for 4 Days',\r\n    description: 'Discover the historical richness of Multan and Quetta.',\r\n    image: 'https://www.porterpakistan.com/uploads/2020/01/Mariabad.jpg',\r\n    cities: [\r\n      { name: 'Multan', days: 2 },\r\n      { name: 'Quetta', days: 2 },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: 17,\r\n    title: 'Twin City Delight - Lahore & Hunza',\r\n    description: 'Enjoy the cultural and modern mix of Lahore and Hunza.',\r\n    image:\"https://www.shahidtourguide.com/wp-content/uploads/2023/09/Hunza-cherry-blossom-1.jpg\",\r\n    cities: [\r\n      { name: 'Lahore', days: 2 },\r\n      { name: 'Hunza', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 18,\r\n    title: 'Southern Cultural Journey - Karachi & Quetta',\r\n    description: 'Discover the cultural richness of Karachi and Quetta.',\r\n    image:\"https://www.youlinmagazine.com/articles/heritage-walk-karachi.jpg\",\r\n    cities: [\r\n      { name: 'Karachi', days: 2 },\r\n      { name: 'Quetta', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 19,\r\n    title: 'Discover the Cultural Heritage of Peshawar in 2 Days',\r\n    description: 'Discover the culture of Pakistan in Peshawar ',\r\n    image: 'https://skyticket.com/guide/wp-content/uploads/2017/12/iStock-538601654-e1540535918101.jpg',\r\n    cities: [\r\n      { name: 'Peshawar', days: 2 },\r\n      \r\n    ],\r\n  },\r\n  {\r\n    id: 20,\r\n    title: 'Northern Gems - Skardu, Hunza & Gilgit',\r\n    description: 'Explore the breathtaking beauty of Skardu, Hunza, and Gilgit.',\r\n    image:\"https://trangoadventure.com/wp-content/uploads/2024/03/Northern-Pakistan-Tour-scaled.jpg\",\r\n    cities: [\r\n      { name: 'Skardu', days: 2 },\r\n      { name: 'Hunza', days: 1 },\r\n      { name: 'Gilgit', days: 2 }\r\n    ],\r\n  },\r\n  \r\n  {\r\n    id: 21,\r\n    title: 'Southern Coastline - Karachi ',\r\n    description: 'A journey through the coastal beauty of Karachi ',\r\n    image:\"https://dynamic-media-cdn.tripadvisor.com/media/photo-o/17/3f/cc/ba/20190407-183906-largejpg.jpg?w=800&h=500&s=1\",\r\n    cities: [\r\n      { name: 'Karachi', days: 2 },\r\n      {name:'Abbottabad',days:1}\r\n    ],\r\n  },\r\n  {\r\n    id: 22,\r\n    title: 'Hill Station Getaway - Murree & Abbottabad',\r\n    description: 'Escape to the cool hill stations of Murree and Abbottabad.',\r\n    image:\"https://images.travelandleisureasia.com/wp-content/uploads/sites/7/2024/02/01171614/murree-ramsha-asad-unsplash-feature.jpeg?tr=w-1200,q-60\",\r\n    cities: [\r\n      { name: 'Murree', days: 2 },\r\n      { name: 'Abbottabad', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 23,\r\n    title: 'Cultural Heritage - Lahore & Quetta',\r\n    description: 'Explore the deep cultural heritage of Lahore and Quetta.',\r\n    image:\"https://propakistani.pk/wp-content/uploads/2020/06/Untitled-design-33.png\",\r\n    cities: [\r\n      { name: 'Lahore', days: 2 },\r\n      { name: 'Quetta', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 24,\r\n    title: 'Northern Exploration - Skardu, Hunza & Kashmir',\r\n    description: 'Experience the serene beauty of Skardu, Hunza, and Kashmir.',\r\n    image:\"https://res.cloudinary.com/odysseytraveller/image/fetch/f_auto,q_auto,dpr_auto,r_4,w_765,h_535.5,c_limit/https://cdn.odysseytraveller.com/app/uploads/2019/11/Springtime-view-of-mountain-peaks-in-the-Hunza-Valley-Pakistan.jpg\",\r\n    cities: [\r\n      { name: 'Skardu', days: 2 },\r\n      { name: 'Hunza', days: 1 },\r\n      { name: 'Kashmir', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 25,\r\n    title: 'Twin Adventures - Abbottabad & Peshawar',\r\n    description: 'Blend the modern life of Islamabad with the historical essence of Peshawar.',\r\n    image:\"https://www.apricottours.pk/wp-content/uploads/2015/02/Thandiani-Abbottabad-Tour-5.jpg\",\r\n    cities: [\r\n      { name: 'Abbottabad', days: 2 },\r\n      { name: 'Peshawar', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 26,\r\n    title: 'Mountain & Culture - Gilgit & Quetta',\r\n    description: 'Discover the mountains of Gilgit and the history of Quetta.',\r\n    image:\"https://realpakistan.com.pk/wp-content/uploads/2024/11/Exploring-Gilgit-A-Hidden-Gem-in-the-Heart-of-the-Himalayas.jpg\",\r\n    cities: [\r\n      { name: 'Gilgit', days: 2 },\r\n      { name: 'Quetta', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 27,\r\n    title: 'Peaceful Escapes - Naran & Kashmir',\r\n    description: 'Relax amidst the peaceful surroundings of Naran and Kashmir.',\r\n    image:\"https://seepakistantours.com/wp-content/uploads/2022/04/Destination-Naran-Kaghan.jpg\",\r\n    cities: [\r\n      { name: 'Naran', days: 2 },\r\n      { name: 'Kashmir', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 28,\r\n    title: 'Cultural Exploration - Lahore & Skardu',\r\n    description: 'Dive into the cultural beauty of Lahore and skardu.',\r\n    image:\"https://www.shahidtourguide.com/wp-content/uploads/2023/09/Skardu-2-1.jpg\",\r\n    cities: [\r\n      { name: 'Lahore', days: 2 },\r\n      { name: 'Skardu', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 29,\r\n    title: 'Quaint Cities - Murree & Skardu',\r\n    description: 'Take in the cool vibes of Murree and the majestic landscapes of Skardu.',\r\n    image:\"https://www.apricottours.pk/wp-content/uploads/2024/01/Shangrilla-Skardu.jpeg\",\r\n    cities: [\r\n      { name: 'Murree', days: 2 },\r\n      { name: 'Skardu', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 30,\r\n    title: 'Coastal Adventure - Karachi & Skardu',\r\n    description: 'A blend of Karachi’s coast and the breathtaking beauty of Skardu.',\r\n    image:\"https://guidetopakistan.pk/wp-content/uploads/2024/10/Sandspit-Beach.png\",\r\n    cities: [\r\n      { name: 'Karachi', days: 2 },\r\n      { name: 'Skardu', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 31,\r\n    title: 'Tour of Most MesmerizingCity & Mountains - Lahore & Naran',\r\n    description: 'Discover the urban delights of Lahore and the majestic mountains of Naran.',\r\n    image:\"https://miro.medium.com/v2/resize:fit:1400/1*pBumHXBZZ-RnuZJAQynQ7g.jpeg\",\r\n    cities: [\r\n      { name: 'Lahore', days: 2 },\r\n      { name: 'Naran', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 32,\r\n    title: 'Historical & Modern - Peshawar & Islamabad',\r\n    description: 'Explore the rich history of Peshawar and the modern charm of Islamabad.',\r\n    image:\"https://media-cdn.tripadvisor.com/media/attractions-splice-spp-720x480/0f/d8/9a/50.jpg\",\r\n    cities: [\r\n      { name: 'Peshawar', days: 2 },\r\n      { name: 'Islamabad', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 33,\r\n    title: 'Northern Discovery - Skardu & Naran',\r\n    description: 'Venture into the mountains of Skardu and Naran.',\r\n    image:\"https://www.imusafir.pk/wp-content/uploads/2023/10/skardu-11b-1.jpg\",\r\n    cities: [\r\n      { name: 'Skardu', days: 2 },\r\n      { name: 'Naran', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 34,\r\n    title: 'Urban Adventure - Karachi & Lahore',\r\n    description: 'Experience the bustling life of Karachi and Lahore.',\r\n    image:\"https://t3.ftcdn.net/jpg/03/07/58/86/360_F_307588607_gxuDKAIqEwknbrBgpQ3pQiNWKyLmWI93.jpg\",\r\n    cities: [\r\n      { name: 'Karachi', days: 2 },\r\n      { name: 'Lahore', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 35,\r\n    title: 'Cultural Blend - Multan & Islamabad',\r\n    description: 'Explore the historical city of Multan and the modern beauty of Islamabad.',\r\n    image:\"https://flypakistan.pk/assets/img/City/Multan.jpg\",\r\n    cities: [\r\n      { name: 'Multan', days: 2 },\r\n      { name: 'Islamabad', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 36,\r\n    title: 'Gems of the North - Gilgit & Hunza',\r\n    description: 'Experience the natural beauty of Gilgit and Hunza.',\r\n    image:\"https://dynamic-media-cdn.tripadvisor.com/media/photo-o/0d/d5/1c/94/passu-valley-hunza-valley.jpg?w=800&h=-1&s=1\",\r\n    cities: [\r\n      { name: 'Gilgit', days: 2 },\r\n      { name: 'Hunza', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 37,\r\n    title: 'Heritage & Adventure - Quetta & Skardu',\r\n    description: 'Blend the heritage of Quetta with the adventure of Skardu.',\r\n    image:\"https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRJWaAvVf3cEypAmJkPT8hTLce5eXvetZTOQnYAtVDIygFFsZVEP7rBJCU3HQHPFeFFmJfLM5Q1mAlw_Q\",\r\n    cities: [\r\n      { name: 'Quetta', days: 2 },\r\n      { name: 'Skardu', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 38,\r\n    title: 'Mountain & Culture - Gilgit & Lahore',\r\n    description: 'Experience the cultural richness of Lahore with the natural beauty of Gilgit.',\r\n    image:\"https://cdn-blog.zameen.com/blog/wp-content/uploads/2019/04/cover-image-40.jpg\",\r\n    cities: [\r\n      { name: 'Gilgit', days: 2 },\r\n      { name: 'Lahore', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 39,\r\n    title: 'Hidden Beauty - Batakundi & Gilgit',\r\n    description: 'Unveil the hidden gems of Batakundi and Gilgit.',\r\n    image:\"https://upload.wikimedia.org/wikipedia/commons/5/57/Batakundi_naran_KPK.jpg\",\r\n    cities: [\r\n      { name: 'Batakundi', days: 2 },\r\n      { name: 'Gilgit', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 40,\r\n    title: 'Urban Delight - Lahore, Islamabad & Karachi',\r\n    description: 'Experience the charm of Lahore, Islamabad, and Karachi.',\r\n    image:\"https://media.licdn.com/dms/image/D4D12AQHFGdOF7AtMmw/article-cover_image-shrink_600_2000/0/1709020518241?e=2147483647&v=beta&t=k3JcbBqoKEkteKNRpcJhr8uzz4llJFGKQjxwijmjmHY\",\r\n    cities: [\r\n      { name: 'Lahore', days: 2 },\r\n      { name: 'Islamabad', days: 2 },\r\n      { name: 'Karachi', days: 1 }\r\n    ],\r\n  },\r\n  {\r\n    id: 41,\r\n    title: 'Serenity & Culture - Murree & Kashmir',\r\n    description: 'Relax in the serenity of Murree and explore the culture of Kashmir.',\r\n    image:\"https://dynamic-media-cdn.tripadvisor.com/media/photo-o/16/21/dd/19/murree.jpg?w=1200&h=-1&s=1\",\r\n    cities: [\r\n      { name: 'Murree', days: 2 },\r\n      { name: 'Kashmir', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 42,\r\n    title: 'Mountain Expedition - Naran & Hunza',\r\n    description: 'Experience the mountainous beauty of Naran and Hunza.',\r\n    image:\"https://seepakistantours.com/wp-content/uploads/2019/02/Hunza-Naran-Shogran-10-Days-summer-Tour.jpg\",\r\n    cities: [\r\n      { name: 'Naran', days: 2 },\r\n      { name: 'Hunza', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 43,\r\n    title: 'Cultural & Natural Mix - Multan & Chitral',\r\n    description: 'Discover the cultural and natural beauty of Multan and Chitral.',\r\n    image:\"https://visitinpakistan.com/wp-content/uploads/2023/06/Top-Tourist-Attractions-in-Chitral-Shandur_Top__Shandur_Lake-1024x631.jpg\",\r\n    cities: [\r\n      { name: 'Multan', days: 2 },\r\n      { name: 'Chitral', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 44,\r\n    title: 'Heritage & Nature - Peshawar & Naran',\r\n    description: 'Explore the heritage of Peshawar and the natural beauty of Naran.',\r\n    image:\"https://guidetopakistan.pk/wp-content/uploads/2021/04/Naran-37.jpg\",\r\n    cities: [\r\n      { name: 'Peshawar', days: 2 },\r\n      { name: 'Naran', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 45,\r\n    title: 'Quetta & Naran Expedition',\r\n    description: 'A journey through the historic Quetta and the natural wonders of Naran.',\r\n    image:\"https://facts.net/wp-content/uploads/2023/07/39-facts-about-quetta-1688735397.jpg\",\r\n    cities: [\r\n      { name: 'Quetta', days: 2 },\r\n      { name: 'Naran', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 46,\r\n    title: 'Adventure & Serenity - Batakundi & Murree',\r\n    description: 'Find the adventure in Batakundi and serenity in Murree.',\r\n    image:\"https://www.blizin.com/public/images/uploads/tourpackage/7-days-tour-to-murree-naran-kaghan-TP-378-1602742837.jpg\",\r\n    cities: [\r\n      { name: 'Batakundi', days: 2 },\r\n      { name: 'Murree', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 47,\r\n    title: 'Cultural Expedition - Quetta & Abbottabad',\r\n    description: 'Discover the cultural richness of Quetta and the natural beauty of Abbottabad.',\r\n    image:\"https://upload.wikimedia.org/wikipedia/commons/d/d2/View_of_Abbotabad.JPG\",\r\n    cities: [\r\n      { name: 'Quetta', days: 2 },\r\n      { name: 'Abbottabad', days: 2 }\r\n    ],\r\n  },\r\n  {\r\n    id: 48,\r\n    title: 'Karachi & Peshawar Adventure',\r\n    description: 'Explore Karachi’s vibrant culture and Peshawar’s historical richness.',\r\n    image:\"https://hunzaexplorers.com/storage/2017/06/Peshawar-City-HunzaExplorers-Pakistan.webp\",\r\n    cities: [\r\n      { name: 'Karachi', days: 2 },\r\n      { name: 'Peshawar', days: 2 }\r\n    ],\r\n  },\r\n \r\n \r\n];\r\n\r\nexport default trips;","export function cosineSimilarity(vecA, vecB) {\r\n  const categories = new Set([...Object.keys(vecA), ...Object.keys(vecB)]);\r\n  \r\n  let dotProduct = 0;\r\n  let magA = 0;\r\n  let magB = 0;\r\n\r\n  categories.forEach(category => {\r\n      const valA = vecA[category] || 0;\r\n      const valB = vecB[category] || 0;\r\n\r\n      dotProduct += valA * valB;\r\n      magA += valA ** 2;\r\n      magB += valB ** 2;\r\n  });\r\n\r\n  if (magA === 0 || magB === 0) return 0; // Avoid division by zero\r\n  return dotProduct / (Math.sqrt(magA) * Math.sqrt(magB));\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ToursSection.css';\r\nimport Navbar from '../../NavBar/Navbar';\r\nimport trips from './packagedata';\r\nimport Papa from 'papaparse';\r\nimport { cosineSimilarity } from './similarity'; \r\n\r\n\r\nconst ToursSection = () => {\r\n  \r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [attractions, setAttractions] = useState([]);\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [hotels, setHotels] = useState([]);\r\n  const [userPastTrips, setUserPastTrips] = useState([]);\r\n  const [userEmail, setUserEmail] = useState(null);\r\n  const [recommendedTrips, setRecommendedTrips] = useState([]);\r\n  const [restaurantReviews, setRestaurantReviews] = useState([]);\r\n\r\n    // Fetch user email from local storage\r\n    useEffect(() => {\r\n      const storedUser = JSON.parse(localStorage.getItem('user'));\r\n      if (storedUser && storedUser.email) {\r\n        setUserEmail(storedUser.email);\r\n      }\r\n    }, []);\r\n  \r\n    // Fetch attractions data\r\n    useEffect(() => {\r\n      const fetchAttractions = async () => {\r\n        try {\r\n          const response = await fetch('/Cleaned_attr.csv');\r\n          if (!response.ok) throw new Error(`Failed to fetch CSV: ${response.statusText}`);\r\n          const text = await response.text();\r\n          const result = Papa.parse(text, { header: true, skipEmptyLines: true });\r\n  \r\n          const cleanedData = result.data.map((item) => ({\r\n            name: item.name || '',\r\n            description: item.description || '',\r\n            category: item.category || '',\r\n            address: item.address || '',\r\n            city: item.city || '',\r\n            availability: item.availability || '',\r\n            rating: parseFloat(item.rating) || 0,\r\n            images: [\r\n              item.image1 ? item.image1.trim() : null,\r\n              item.image2 ? item.image2.trim() : null,\r\n              item.image3 ? item.image3.trim() : null,\r\n            ].filter(Boolean),\r\n          }));\r\n  \r\n          setAttractions(cleanedData);\r\n        } catch (error) {\r\n          console.error('Error fetching or parsing attractions:', error);\r\n        }\r\n      };\r\n  \r\n      fetchAttractions();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      const fetchRestaurants = async () => {\r\n        try {\r\n          const response = await fetch('/restaurants_data.json');\r\n          const data = await response.json();\r\n  \r\n          const cleanedRestaurants = data.map((restaurant) => ({\r\n            id: restaurant.restaurant_id || '',\r\n            _id: restaurant._id?.$oid || restaurant._id || '', // Handle $oid format\r\n            name: restaurant.name || '',\r\n            address: restaurant.address || '',\r\n            phoneNumber: restaurant.phone_number || '',\r\n            service: restaurant.service || '',\r\n            openHour: restaurant.Open_hour || '',\r\n            city: restaurant.city || '',\r\n            rating: parseFloat(restaurant.rating) || 0,\r\n            images: Array.isArray(restaurant.image) ? restaurant.image : [],\r\n          }));\r\n  \r\n          setRestaurants(cleanedRestaurants);\r\n        } catch (error) {\r\n          console.error('Error fetching or parsing restaurants:', error);\r\n        }\r\n      };\r\n  \r\n      fetchRestaurants();\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n      // If the user is not logged in, show the first 4 packages\r\n      if (!userEmail) {\r\n        console.log(\"User not logged in. Displaying default trips.\");\r\n        setRecommendedTrips(trips.slice(0, 4));\r\n        return;\r\n      }\r\n    \r\n      // If attractions data is not loaded yet, return\r\n      if (attractions.length === 0) return;\r\n    \r\n      const fetchPastTrips = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/users/past-trips?email=${userEmail}`);\r\n          const data = await response.json();\r\n    \r\n          if (!response.ok) {\r\n            throw new Error(data.message || 'Failed to fetch past trips');\r\n          }\r\n    \r\n          if (data.length === 0) {\r\n            console.log(\"No past trips found. Displaying default trips.\");\r\n            // If no past trips, set recommendedTrips to the first 4 packages from trips\r\n            setRecommendedTrips(trips.slice(0, 4));\r\n            return;\r\n          }\r\n    \r\n          // Step 1: Sort past trips by start date (latest first)\r\n          const sortedTrips = data.sort((a, b) => new Date(b.startDate) - new Date(a.startDate));\r\n    \r\n          // Step 2: Select the latest two trips\r\n          const latestTrips = sortedTrips.slice(0, 2);\r\n          console.log(\"Latest Two Past Trips:\", latestTrips);\r\n    \r\n          // Step 3: Create City Vectors\r\n          const cityVectors = {};\r\n          attractions.forEach(attr => {\r\n            if (!cityVectors[attr.city]) {\r\n              cityVectors[attr.city] = {};\r\n            }\r\n            cityVectors[attr.city][attr.category] = (cityVectors[attr.city][attr.category] || 0) + 1;\r\n          });\r\n    \r\n          let mostSimilarCities = new Set();\r\n    \r\n          latestTrips.forEach(trip => {\r\n            console.log(`Processing Destination: ${trip.destination}`);\r\n            const destinationVector = cityVectors[trip.destination] || {};\r\n    \r\n            // Step 4: Compute Cosine Similarity for All Cities (Excluding the destination itself)\r\n            const similarityScores = Object.keys(cityVectors)\r\n              .filter(city => city !== trip.destination)\r\n              .map(city => ({\r\n                city,\r\n                similarity: cosineSimilarity(destinationVector, cityVectors[city])\r\n              }))\r\n              .sort((a, b) => b.similarity - a.similarity)\r\n              .slice(0, 4); // Get top 4 most similar cities\r\n    \r\n            console.log(`Top 4 Most Similar Cities to ${trip.destination}:`, similarityScores);\r\n    \r\n            // Add the top similar cities to the set\r\n            similarityScores.forEach(sim => mostSimilarCities.add(sim.city));\r\n          });\r\n    \r\n          // Step 5: Find Trip Packages Containing the Most Similar Cities\r\n          const tripMatches = trips.map(trip => {\r\n            const matchedCities = trip.cities.filter(city => mostSimilarCities.has(city.name));\r\n            return { trip, matchCount: matchedCities.length, matchedCities };\r\n          });\r\n    \r\n          // Step 6: Sort trips based on the number of matching similar cities and select the top 4\r\n          const topTrips = tripMatches\r\n            .sort((a, b) => b.matchCount - a.matchCount)\r\n            .slice(0, 4);\r\n    \r\n          console.log('Top Matching Trip Packages:', topTrips);\r\n          setRecommendedTrips(topTrips.map(item => item.trip));\r\n    \r\n        } catch (error) {\r\n          console.error('Error fetching past trips:', error);\r\n        }\r\n      };\r\n    \r\n      fetchPastTrips();\r\n    }, [userEmail, attractions]);\r\n\r\n  // Fetch hotels data\r\n  useEffect(() => {\r\n    const fetchHotels = async () => {\r\n      try {\r\n        const response = await fetch('/clean_hotel_data.json');\r\n        const data = await response.json();\r\n        setHotels(data);\r\n      } catch (error) {\r\n        console.error('Error fetching or parsing hotels:', error);\r\n      }\r\n    };\r\n    fetchHotels();\r\n  }, []);\r\n\r\n // Handle view details for a trip\r\n const handleViewDetails = (trip) => {\r\n  setLoading(true);\r\n  try {\r\n    const cityData = trip.cities.map((city) => {\r\n      const cityAttractions = attractions\r\n        .filter(attr => attr.city === city.name)\r\n        .slice(0, 7); // Fetch only first 7 attractions\r\n\r\n      const cityRestaurants = restaurants\r\n        .filter(restaurant => restaurant.city === city.name)\r\n        .slice(-8); // Fetch last 8 restaurants\r\n\r\n      // Fetch only one hotel for the city\r\n      const cityHotels = hotels\r\n        .filter(hotel => hotel.city === city.name)\r\n        .slice(-13, -12); // Fetch only the first hotel\r\n\r\n      return {\r\n        cityName: city.name,\r\n        days: city.days,\r\n        hotels: cityHotels, // Only one hotel is sent\r\n        restaurants: cityRestaurants,\r\n        attractions: cityAttractions,\r\n      };\r\n    });\r\n\r\n    navigate('/trip-details', {\r\n      state: {\r\n        cityData,\r\n        tripTitle: trip.title,\r\n        tripImage: trip.image,\r\n        allAttractions: attractions, // Pass all fetched attractions\r\n        allRestaurants: restaurants, // Pass all fetched restaurants\r\n        allHotels: hotels, // Pass all fetched hotels (for future use if needed)\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error handling trip details:', error);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n// Handle view all trips\r\nconst handleViewAll = () => {\r\n  const enrichedTrips = trips.map((trip) => ({\r\n    ...trip,\r\n    cityData: trip.cities.map((city) => {\r\n      const cityAttractions = attractions\r\n        .filter(attr => attr.city === city.name)\r\n        .slice(0, 7); // Fetch only first 7 attractions\r\n\r\n      const cityRestaurants = restaurants\r\n        .filter(restaurant => restaurant.city === city.name)\r\n        .slice(-8); // Fetch last 8 restaurants\r\n\r\n      // Fetch only one hotel for the city\r\n      const cityHotels = hotels\r\n        .filter(hotel => hotel.city === city.name)\r\n        .slice(-13,-12); // Fetch only the first hotel\r\n\r\n      return {\r\n        cityName: city.name,\r\n        days: city.days,\r\n        hotels: cityHotels, // Only one hotel is sent\r\n        restaurants: cityRestaurants,\r\n        attractions: cityAttractions,\r\n      };\r\n    }),\r\n  }));\r\n\r\n  navigate('/all-trips', {\r\n    state: { \r\n      trips: enrichedTrips,\r\n      allAttractions: attractions, // Pass all attractions to all-trips\r\n      allRestaurants: restaurants, // Pass all restaurants to all-trips\r\n      allHotels: hotels, // Pass all hotels to all-trips (for future use if needed)\r\n    },\r\n  });\r\n};\r\n\r\nreturn (\r\n  <section className=\"preplanned_trips-section\">\r\n    <Navbar />\r\n    <div className=\"container-preplanned\">\r\n      <h2>Pre-Planned Trips</h2>\r\n      <p>Choose from our exciting pre-planned trips for an unforgettable adventure.</p>\r\n      <p className=\"view-more-preplanned\" onClick={handleViewAll}>\r\n        View More\r\n      </p>\r\n\r\n      <div className=\"trips_list-preplanned\">\r\n        {recommendedTrips.map((trip) => (\r\n          <div className=\"trip_card-preplanned\" key={trip.id}>\r\n            <img src={trip.image} alt={trip.title} />\r\n            <div className=\"trip_info-preplanned\">\r\n              <h3>{trip.title}</h3>\r\n              <p>{trip.description}</p>\r\n              <button onClick={() => handleViewDetails(trip)} disabled={loading}>\r\n                {loading ? 'Loading...' : 'View Details'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  </section>\r\n);\r\n};\r\n\r\nexport default ToursSection;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './PopularDestinations.css';\r\n\r\nconst PopularDestinations = () => {\r\n  const destinations = [\r\n    {\r\n      id: 1,\r\n      image: 'https://www.teflcourse.net/uploads/pakistan-featured-image.jpg',\r\n      country: 'Islamabad',\r\n      name: 'Islamabad',\r\n      description: 'The Pakistan Monument (Urdu: یادگارِ پاکستان) is a national monument, located on the western Shakarparian Hills.',\r\n      path: '/city/islamabad', // Updated path format\r\n    },\r\n    {\r\n      id: 2,\r\n      image: 'https://www.pakimag.com/files/2010/03/Lahore-Minar-e-Pakistan.jpg',\r\n      country: 'Lahore',\r\n      name: 'Lahore',\r\n      description: 'Standing proud in Lahore, Minar-E-Pakistan is a constant reminder of the tiresome journey of independence.',\r\n      path: '/city/lahore', // Updated path format\r\n    },\r\n    {\r\n      id: 3,\r\n      image: 'https://live.staticflickr.com/5131/5457939358_c041af25f1_b.jpg',\r\n      country: 'Multan',\r\n      name: 'Multan',\r\n      description: 'The tomb is located in the ancient city of Multan, at the northwestern edge of the Multan Fort.',\r\n      path: '/city/multan', // Updated path format\r\n    },\r\n    {\r\n      id: 4,\r\n      image: 'https://cdn.britannica.com/85/128585-050-5A1BDD02/Karachi-Pakistan.jpg',\r\n      country: 'Karachi',\r\n      name: 'Karachi',\r\n      description: 'Karachi,  a bustling metropolis known for its vibrant culture, coastal beauty, and economic significance.',\r\n      path: '/city/karachi', \r\n    },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"popular-dest\" id=\"destination\">\r\n      <div className=\"container-dest\">\r\n        <h2 className=\"section-title-dest\">Popular Destination</h2>\r\n        <p className=\"section-text-dest\">\r\n          Traveling opens the door to creating memories !!!\r\n        </p>\r\n        <ul className=\"popular-list-dest\">\r\n          {destinations.map((dest) => (\r\n            <li key={dest.id}>\r\n              <div className=\"popular-card-dest\">\r\n                <figure className=\"card-img-dest\">\r\n                  <Link to={dest.path} state={{ cityName: dest.name }}> {/* Added state prop */}\r\n                    <img src={dest.image} alt={dest.name} />\r\n                  </Link>\r\n                </figure>\r\n                <div className=\"card-content-dest\">\r\n                  <div className=\"card-rating-dest\">\r\n                    {[...Array(5)].map((_, i) => (\r\n                      <span key={i} className=\"star\">★</span>\r\n                    ))}\r\n                  </div>\r\n\r\n                  <h3 className=\"card-title-dest\">\r\n                    <Link to={dest.path} state={{ cityName: dest.name }}>{dest.name}</Link>\r\n                  </h3>\r\n                  <p className=\"card-text-dest\">{dest.description}</p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PopularDestinations;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './AiBanner.css';\r\n\r\n\r\nconst AiBanner = () => {\r\n  return (\r\n    <div className=\"ai-trip-banner\">\r\n      <div className=\"banner-content\">\r\n        <div className=\"text-content\">\r\n          <div className=\"ai-badge\">Powered by AI <span className=\"beta-tag\">BETA</span></div>\r\n          <h1 className=\"aimain-title\">AI trip builder gets you out there</h1>\r\n          <p className=\"aisubtitle\">Get a whole getaway's worth of ideas made for you—ready in seconds.</p>\r\n          <Link to=\"/PlanSelection\">\r\n  <button className=\"try-button\">\r\n    <span className=\"iconn\">✦</span> Try it\r\n  </button>\r\n</Link>\r\n\r\n\r\n        </div>\r\n        <div className=\"image-container\">\r\n          <img src=\"https://img.eurohike.at/w_314,h_235,q_80,v_49f23c,hash_7fe451/ddcijcnkv/image/upload/v1683199297/eurohike/touren/oesterreich/almwandern-salzkammergut-fuer-familien/neu/eurohike-wanderreise-salzkammergut-genneralm-familie1.jpg\" alt=\"Family hiking together\" className=\"banner-image\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AiBanner;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./Challenges.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as fasHeart, faAward, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst ChallengeCard = ({\r\n  title,\r\n  points,\r\n  image,\r\n  detailsLink,\r\n  isLoggedIn,\r\n  onRedirect,\r\n  earned,\r\n  onCheckConsecutiveLogins,\r\n  challengeId,\r\n  onShowLoginModal,\r\n}) => {\r\n  const [isLiked, setIsLiked] = useState(false);\r\n\r\n  const handleDetailsClick = (e) => {\r\n    if (!isLoggedIn) {\r\n      e.preventDefault(); // Prevent navigation if not logged in\r\n      onRedirect(); // Redirect to the login page\r\n    } else {\r\n      if (challengeId === 3) {\r\n        // Call the function to check consecutive logins and show the modal if third challenge is clicked\r\n        onCheckConsecutiveLogins();\r\n        onShowLoginModal(); // Trigger the modal display\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"challenge-card\">\r\n      <div className=\"image-container\">\r\n        <img src={image} alt={title} className=\"challenge-image\" />\r\n        \r\n      </div>\r\n\r\n      <div className=\"card-content\">\r\n        <h3 className=\"card-title\">{title}</h3>\r\n\r\n        <div className=\"points-section\">\r\n          <div className=\"points-badge\">\r\n            <FontAwesomeIcon icon={faAward} className=\"icons\" />\r\n            <span>{points} Points</span>\r\n          </div>\r\n          {earned ? (\r\n            <div className=\"view-details earned\">Earned</div>\r\n          ) : (\r\n            <Link\r\n              to={isLoggedIn ? detailsLink : \"#\"}\r\n              onClick={handleDetailsClick}\r\n              className=\"view-details\"\r\n            >\r\n              <span>View Details</span>\r\n              <FontAwesomeIcon icon={faChevronRight} />\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Challenges = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [earnedChallenges, setEarnedChallenges] = useState([]); // Tracks earned challenges\r\n  const [consecutiveLogins, setConsecutiveLogins] = useState(0);\r\n  const [loginMessage, setLoginMessage] = useState(\"\");\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Check the user's login status when the component mounts\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user) {\r\n      setIsLoggedIn(true); // If the user is logged in, set state to true\r\n    }\r\n    console.log(\"User status:\", isLoggedIn ? \"Logged in\" : \"Not logged in\");\r\n  }, [isLoggedIn]);\r\n\r\n  // Fetch challenge statuses when the component mounts or a state change triggers it\r\n  useEffect(() => {\r\n    const fetchAllChallengeStatuses = async () => {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (user && user.email) {\r\n        try {\r\n          const response = await axios.post(\"http://localhost:5000/api/users/checkAllChallengeStatuses\", {\r\n            email: user.email,\r\n          });\r\n\r\n          console.log(\"All challenge statuses:\", response.data.statuses);\r\n\r\n          // Update earned challenges based on the response\r\n          const completedChallengeIds = Object.keys(response.data.statuses).filter(\r\n            (challengeId) => response.data.statuses[challengeId] === true\r\n          );\r\n          setEarnedChallenges(completedChallengeIds.map(Number)); // Convert string IDs to numbers\r\n        } catch (error) {\r\n          console.error(\"Error fetching all challenge statuses:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (location.state?.redirectedFromChallengeId) {\r\n      const challengeId = location.state.redirectedFromChallengeId;\r\n      console.log(\r\n        \"Back in Challenges page. Redirected from Challenge ID: ${challengeId}\"\r\n      );\r\n      fetchAllChallengeStatuses();\r\n    } else {\r\n      // Fetch all statuses when the page loads or other state changes\r\n      fetchAllChallengeStatuses();\r\n    }\r\n  }, [location.state]);\r\n\r\n  const checkConsecutiveLogins = async () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user) {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/users/checkConsecutiveLogins\", {\r\n          email: user.email,\r\n        });\r\n  \r\n        const { consecutiveLoginDays, lastLoginDate } = response.data;\r\n        setConsecutiveLogins(consecutiveLoginDays);\r\n        console.log(\"Consecutive login days:\", consecutiveLoginDays);\r\n  \r\n        const currentDate = new Date().toDateString(); // Get current date as a string\r\n        const lastLogin = new Date(lastLoginDate).toDateString(); // Convert last login date to string\r\n  \r\n        if (currentDate !== lastLogin) {\r\n          // If the user has logged in on a new day, call the API to update lastLoginDate\r\n          await axios.post(\"http://localhost:5000/api/users/updateLastLogin\", {\r\n            email: user.email,\r\n            lastLoginDate: new Date(),\r\n          });\r\n          setConsecutiveLogins((prev) => prev + 1); // Increment consecutive logins\r\n          setLoginMessage(\r\n            (\"You have logged in for ${consecutiveLoginDays + 1} consecutive days. Keep going!\")\r\n          );\r\n        } else {\r\n          // If the login is on the same day, just update the message\r\n          setLoginMessage(\"You have logged in for ${consecutiveLoginDays} consecutive days. Keep going!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error checking consecutive login days:\", error);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Function to trigger the modal display\r\n  const handleShowLoginModal = () => {\r\n    setShowLoginModal(true);\r\n  };\r\n\r\n  // Run this check when the component mounts if the user is logged in\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user) {\r\n      checkConsecutiveLogins();\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  // Redirect to login page if user is not logged in\r\n  const redirectToLogin = () => {\r\n    console.log(\"Redirecting to login\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const challenges = [\r\n    {\r\n      id: 1,\r\n      title: \"Think Fast, Earn Faster (Play Crosswords for Big Points!)\",\r\n      points: 2000,\r\n      image: \"https://cdn.vectorstock.com/i/1000x1000/24/42/crossword-icon-vector-9412442.webp\",\r\n      detailsLink: \"/crossword\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Calling all travel lovers! Can you ace our travel trivia? Only one way to find out!\",\r\n      points: 5000,\r\n      image: \"https://www.signupgenius.com/cms/images/groups/100-Random-Trivia-Questions-1260x630.png\",\r\n      detailsLink: \"/quiz\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"10 days, 10 logins – unlock your exclusive reward!\",\r\n      points: 3000,\r\n      image:\r\n        \"https://static.vecteezy.com/system/resources/previews/019/872/884/large_2x/3d-minimal-user-login-page-user-authentication-concept-user-verification-concept-login-page-with-a-fingerprint-padlock-3d-illustration-free-png.png\",\r\n      detailsLink: \"/\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Plan Your Next 5 Adventure and Earn Rewards Along the Way!\",\r\n      points: 5000,\r\n      image: \"https://www.ytravelblog.com/wp-content/uploads/2018/11/planning-a-trip-tips-and-challenges-2.jpg\",\r\n      detailsLink: \"/\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"challenges-container\">\r\n      <div className=\"challenges-header\">\r\n        <h2 className=\"challenges-title\">Travel Challenges</h2>\r\n        <p className=\"challenges-subtitle\">\r\n          Complete challenges to earn points and unlock exclusive rewards\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"challenges-grid\">\r\n        {challenges.map((challenge) => (\r\n          <ChallengeCard\r\n            key={challenge.id}\r\n            {...challenge}\r\n            isLoggedIn={isLoggedIn}\r\n            onRedirect={redirectToLogin}\r\n            earned={earnedChallenges.includes(challenge.id)}\r\n            onCheckConsecutiveLogins={checkConsecutiveLogins}\r\n            challengeId={challenge.id}\r\n            onShowLoginModal={handleShowLoginModal}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Display modal with consecutive login message */}\r\n      {showLoginModal && (\r\n  <div\r\n    className=\"modal-overlay\"\r\n    onClick={() => setShowLoginModal(false)} // Close the modal on overlay click\r\n  >\r\n    <div\r\n      className=\"modal-content\"\r\n      onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside the modal\r\n    >\r\n      <h3>Consecutive Login Info</h3>\r\n      <p>{loginMessage}</p>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Challenges;","import React, { useState } from \"react\";\r\nimport HeroSection from \"./HeroSection\";\r\nimport \"./Homepage.css\";\r\nimport NavBar from \"../NavBar/Navbar\";\r\nimport ToursSection from \"./PreplannedTrip/ToursSection\";\r\nimport PopularDestinations from \"./PopularDestinations\"\r\nimport AiBanner from \"./AiBanner\";\r\nimport Challenges from \"./Challenges\";\r\n\r\n// const citiesInPakistan = [\r\n//   \"Islamabad\",\r\n//   \"Lahore\",\r\n//   \"Karachi\",\r\n//   \"Murree\",\r\n//   \"Peshawar\",\r\n//   \"Skardu\",\r\n//   \"Hunza\",\r\n//   \"Quetta\",\r\n//   \"Multan\",\r\n//   \"Faisalabad\",\r\n// ];\r\n\r\nconst Homepage = () => {\r\n \r\n\r\n  const handleAIPlanTrip = () => {\r\n    console.log(\"AI Trip Planning initiated\");\r\n    // Logic for AI trip planning here\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <NavBar />\r\n     <HeroSection />\r\n    <AiBanner/>\r\n      <Challenges />\r\n     <ToursSection />\r\n     <PopularDestinations />\r\n     \r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../NavBar/Navbar\";\r\nimport hotelData from \"../HotelsPage/clean_hotel_data.json\";\r\nimport \"./City.css\";\r\n\r\nconst getUniqueCities = (data) => {\r\n  const cities = new Set();\r\n  data.forEach((hotel) => cities.add(hotel.city));\r\n  return [...cities];\r\n};\r\n\r\nconst cityImages = {\r\n  Islamabad: \"https://www.teflcourse.net/uploads/pakistan-featured-image.jpg\",\r\n  Lahore: \"https://www.pakimag.com/files/2010/03/Lahore-Minar-e-Pakistan.jpg\",\r\n  Karachi: \"https://cdn.britannica.com/85/128585-050-5A1BDD02/Karachi-Pakistan.jpg\",\r\n  Kashmir: \"https://t3.ftcdn.net/jpg/04/37/91/72/360_F_437917209_fZPcDkpnEpZJ2oWFpNbqYATQ39UJFcZl.jpg\",\r\n  Murree: \"https://media.istockphoto.com/id/512302224/photo/murree-pakistan.jpg?s=612x612&w=0&k=20&c=-ip1qJc8ny-LmZPdf9rZBhASgBCrs_Ff899H5DVguOM=\",\r\n  Hunza: \"https://t4.ftcdn.net/jpg/05/42/50/77/360_F_542507713_z0kbWKOCs71wzUVhF57pkuodkp7GuXxP.jpg\",\r\n  Skardu: \"https://i.dawn.com/primary/2015/04/552534a77b507.jpg?r=961640394\",\r\n  Chitral: \"https://mytrip.pk/storage/images/dest_mod-62eb9e5a8f3f71659608666.webp\",\r\n  Gilgit: \"https://dynamic-media-cdn.tripadvisor.com/media/photo-o/1a/7d/36/ce/caption.jpg?w=1200&h=-1&s=1\",\r\n  Multan: \"https://live.staticflickr.com/5131/5457939358_c041af25f1_b.jpg\",\r\n  Abbottabad: \"https://upload.wikimedia.org/wikipedia/commons/d/d2/View_of_Abbotabad.JPG\",\r\n  Quetta: \"https://upload.wikimedia.org/wikipedia/commons/7/76/Quetta_at_night_2.jpg\",\r\n  Naran: \"https://t3.ftcdn.net/jpg/02/76/17/90/360_F_276179039_rqfn8FqiZncGkJRm9ibsNoskR4YinJRU.jpg\",\r\n  Batakundi: \"https://prestinetravels.com/wp-content/uploads/2021/05/Batakundi.jpg\",\r\n  Peshawar: \"https://t3.ftcdn.net/jpg/00/65/73/78/360_F_65737837_SlDu3wZemsMV1LkBcrEoiFq4hkWMewfx.jpg\",\r\n  Faisalabad: \"https://paktourismportal.com/wp-content/uploads/2021/12/Clock-Tower-Faisalabad.jpg\",\r\n};\r\n\r\nconst City = () => {\r\n  const cities = getUniqueCities(hotelData);\r\n\r\n  return (\r\n    <div className=\"city-container\">\r\n      <NavBar />\r\n      <div className=\"container-city\">\r\n        <h2 className=\"section-title-city\">Explore Cities</h2>\r\n        <p className=\"section-text-city\">\r\n          Discover the best hotels in your favorite destinations\r\n        </p>\r\n        <ul className=\"city-list\">\r\n          {cities.map((city, index) => (\r\n            <li key={index} className=\"city-card\">\r\n              <div className=\"popular-card-city\">\r\n                <figure className=\"card-img-city\">\r\n                  <Link to={`/city/${city.toLowerCase()}`} state={{ cityName: city }}> \r\n                    <img src={cityImages[city] || \"https://via.placeholder.com/400\"} alt={city} />\r\n                  </Link>\r\n                </figure>\r\n                <div className=\"card-content-city\">\r\n                  <h3 className=\"card-title-city\">\r\n                    <Link to={`/city/${city.toLowerCase()}`} state={{ cityName: city }}>\r\n                      {city}\r\n                    </Link>\r\n                  </h3>\r\n                  <p className=\"card-text-city\">\r\n                    Experience the beauty and hospitality of {city}.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default City;\r\n","import React from 'react';\r\nimport './Hero.css';\r\n\r\nconst cityData = {\r\n    \"Islamabad\": {\r\n        title: \"Islamabad, Pakistan\",\r\n        description: \"Serving as the capital of Pakistan since the Sixties, Islamabad was built according to a carefully organized plan, divided into sectors along a grid of clean, tree-lined streets. The city is sheltered by the Margalla Hills, the foothills of the Himalayas and the home of rare species of leopard, deer, birds, and even porcupines. Several hiking paths end at Daman-e-Koh, a picnic spot with a splendid view of the entire city, including the massive modernist Faisal Mosque and even the Rawal Dam.\",\r\n        image:\"https://islamabad.comsats.edu.pk/assets/img/islamabad.jpeg\"\r\n    },\r\n    \"Lahore\": {\r\n        title: \"Lahore, Pakistan\",\r\n        description: \"Known as the cultural heart of Pakistan, Lahore is a city steeped in history and vibrant traditions. Home to the magnificent Badshahi Mosque, the historic Lahore Fort, and the bustling streets of the Walled City, Lahore offers a unique blend of Mughal architecture and modern development. The city is famous for its rich cuisine, historical gardens, and the annual World Performing Arts Festival.\",\r\n        image:\"https://static.vecteezy.com/system/resources/previews/010/250/925/non_2x/the-historical-tower-of-pakistan-minar-e-pakistan-at-lahore-city-of-punjab-pakistan-the-tower-is-located-in-the-middle-of-an-urban-park-called-the-greater-iqbal-park-free-photo.jpg\"\r\n    },\r\n    \"Karachi\": {\r\n        title: \"Karachi, Pakistan\",\r\n        description: \"Pakistan's largest city and economic hub, Karachi is a dynamic coastal metropolis offering a mix of modern and colonial architecture, bustling bazaars, and scenic beaches along the Arabian Sea. The city boasts attractions like Clifton Beach, Mohatta Palace, and the iconic Mazar-e-Quaid, while serving as the country's major port and commercial center.\",\r\n        image:\"https://www.savills.pk/_images/karachi-1647x530.jpg\"\r\n    },\r\n    \"Murree\": {\r\n        title: \"Murree, Pakistan\",\r\n        description: \"A charming hill station nestled in the Galyat region, Murree serves as a popular retreat from the summer heat. Known for its colonial architecture, pine forests, and panoramic mountain views, this hill resort offers visitors a peaceful escape with attractions like Mall Road, Kashmir Point, and Pindi Point, especially beautiful during the snowy winter months.\",\r\n        image:\"https://upload.wikimedia.org/wikipedia/commons/4/4a/A_beautiful_view_of_Murree%2C_Pakistan.jpg\"\r\n    },\r\n    \"Peshawar\": {\r\n        title: \"Peshawar, Pakistan\",\r\n        description: \"One of the oldest living cities in Asia, Peshawar is a fascinating blend of ancient history and vibrant culture. The city's historic Qissa Khwani Bazaar, Mahabat Khan Mosque, and Bala Hisar Fort tell tales of its rich past. Known for its traditional hospitality and unique cuisine, Peshawar serves as a gateway to the Khyber Pass.\",\r\n        image:\"https://www.salamair.com/images/des1/pexels-raqeeb-ahmed-5838446.jpg\"\r\n    },\r\n    \"Skardu\": {\r\n        title: \"Skardu, Pakistan\",\r\n        description: \"Situated in the heart of the Karakoram range, Skardu is a paradise for mountaineers and nature enthusiasts. The city offers breathtaking views of snow-capped peaks, crystal-clear lakes like Kachura, and the dramatic Deosai Plains. It serves as the main gateway to Pakistan's highest peaks, including K2 and the Baltoro Glacier.\",\r\n        image:\"https://upload.wikimedia.org/wikipedia/commons/9/9f/Shangrila_resort_skardu.jpg\"\r\n    },\r\n    \"Hunza\": {\r\n        title: \"Hunza Valley, Pakistan\",\r\n        description: \"The legendary Hunza Valley is known for its stunning natural beauty, longevity of its inhabitants, and rich cultural heritage. Surrounded by snow-capped peaks including Rakaposhi and Ultar Sar, the valley features ancient watchtowers, the historic Baltit Fort, and spectacular views of the Passu Cones, making it a photographer's paradise.\",\r\n        image:\"https://upload.wikimedia.org/wikipedia/commons/4/4f/Rakaposhi%2C_Nagar_GB_%28Pakistan%29.jpg\"\r\n    },\r\n    \"Quetta\": {\r\n        title: \"Quetta, Pakistan\",\r\n        description: \"The capital of Balochistan, Quetta is known as the 'Fruit Garden of Pakistan' due to its abundant orchards. Surrounded by mountains, the city offers a unique blend of Pakistani and Afghan culture. Notable attractions include Hanna Lake, Hazarganji Chiltan National Park, and the traditional Pashtun and Baloch markets.\"\r\n    },\r\n    \"Multan\": {\r\n        title: \"Multan, Pakistan\",\r\n        description: \"Known as the 'City of Saints', Multan is one of Pakistan's oldest cities, famous for its Sufi shrines, blue pottery, and sweet mangoes. The city's landscape is dotted with historic monuments like the Tomb of Shah Rukn-e-Alam and the Multan Fort, while its bazaars offer traditional handicrafts and textiles.\",\r\n        image:\"https://facts.net/wp-content/uploads/2023/07/48-facts-about-multan-1688386696.jpeg\"\r\n    },\r\n    \"Faisalabad\": {\r\n        title: \"Faisalabad, Pakistan\",\r\n        description: \"Previously known as Lyallpur, Faisalabad is Pakistan's textile capital and third-largest city. The city is characterized by its unique clock tower and eight bazaars that spread out in a British colonial-era designed pattern. Known for its industrial heritage, textile markets, and educational institutions, Faisalabad combines commerce with culture.\",\r\n        image:\"https://www.flydubai.com/en/media/Faisalabad-1920x720_tcm8-6230.jpg\"\r\n    }\r\n};\r\n\r\nconst Hero = ({ cityName = \"Islamabad\" }) => {\r\n    const city = cityData[cityName] || cityData[\"Islamabad\"];\r\n\r\n    return (\r\n        <section className=\"hero\">\r\n            <div className=\"hero-image\"\r\n            style={{ backgroundImage: `url(${city.image})` }}>\r\n                <h1 className=\"hero-title\">{city.title}</h1>\r\n            </div>\r\n           \r\n            <div className=\"hero-description\">\r\n                <p>{city.description}</p>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Hero;","import React, { useEffect, useState } from 'react';\r\nimport Papa from 'papaparse';\r\nimport './TopAttractions.css';\r\n\r\nconst TopAttractions = ({ cityName = \"Islamabad\" }) => {\r\n    const [attractions, setAttractions] = useState([]);\r\n    const [selectedAttraction, setSelectedAttraction] = useState(null);\r\n    const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchAttractions = async () => {\r\n            try {\r\n                const response = await fetch('/Cleaned_attr.csv');\r\n                const data = await response.text();\r\n                \r\n                // Parse CSV using PapaParse\r\n                Papa.parse(data, {\r\n                    header: true,\r\n                    skipEmptyLines: true,\r\n                    complete: (result) => {\r\n                        const filteredAttractions = result.data\r\n                            .map(attraction => ({\r\n                                name: attraction.name?.trim(),\r\n                                description: attraction.description?.trim(),\r\n                                category: attraction.category?.trim(),\r\n                                address: attraction.address?.trim(),\r\n                                city: attraction.city?.trim(),\r\n                                availability: attraction.availability?.trim(),\r\n                                rating: parseFloat(attraction.rating) || 0,\r\n                                images: [\r\n                                    attraction.image1?.trim() || '/default-image.jpg',\r\n                                    attraction.image2?.trim() || '/default-image.jpg',\r\n                                    attraction.image3?.trim() || '/default-image.jpg'\r\n                                ]\r\n                            }))\r\n                            .filter(attraction => attraction.city === cityName)\r\n                            .slice(-6);\r\n                        \r\n                        setAttractions(filteredAttractions);\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error fetching attractions:\", error);\r\n            }\r\n        };\r\n\r\n        fetchAttractions();\r\n    }, [cityName]);\r\n\r\n    // Function to open attraction details\r\n    const openAttractionDetails = (attraction) => {\r\n        setSelectedAttraction(attraction);\r\n        setCurrentImageIndex(0); // Reset to the first image\r\n    };\r\n\r\n    // Function to close attraction details\r\n    const closeAttractionDetails = () => {\r\n        setSelectedAttraction(null);\r\n    };\r\n\r\n    // Function to navigate to next image\r\n    const nextImage = () => {\r\n        setCurrentImageIndex((prevIndex) => \r\n            (prevIndex + 1) % selectedAttraction.images.length\r\n        );\r\n    };\r\n\r\n    // Function to navigate to previous image\r\n    const prevImage = () => {\r\n        setCurrentImageIndex((prevIndex) => \r\n            (prevIndex - 1 + selectedAttraction.images.length) % selectedAttraction.images.length\r\n        );\r\n    };\r\n\r\n    return (\r\n        <section className=\"top-attractions-page\">\r\n            <div className=\"attraction-section-header-page\">\r\n                <h2>Things to do in {cityName}</h2>\r\n            </div>\r\n            <div className=\"attractions-list-page\">\r\n                {attractions.map((attraction, index) => (\r\n                    <div \r\n                        key={index} \r\n                        className=\"attraction-card-page\"\r\n                        onClick={() => openAttractionDetails(attraction)}\r\n                    >\r\n                        <div\r\n                            className=\"attraction-image-page\"\r\n                            style={{ backgroundImage: `url(${attraction.images[0]})` }}\r\n                        >\r\n                \r\n                        </div>\r\n                        <div className=\"attraction-info-page\">\r\n                            <h3>{attraction.name}</h3>\r\n                            <div className=\"rating\">\r\n                                {[...Array(5)].map((_, i) => (\r\n                                    <span key={i} className={`star ${i < Math.floor(attraction.rating) ? 'filled' : ''}`}>★</span>\r\n                                ))}\r\n                                <span className=\"review-count\">({attraction.rating.toFixed(1)})</span>\r\n                            </div>\r\n                            <p>{attraction.category}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Attraction Detail Modal */}\r\n            {selectedAttraction && (\r\n                <div className=\"attraction-detail-overlay\" onClick={closeAttractionDetails}>\r\n                    <div className=\"attraction-detail-card\" onClick={(e) => e.stopPropagation()}>\r\n                        <button className=\"close-btn\" onClick={closeAttractionDetails}>✖</button>\r\n                        \r\n                        {/* Image Carousel */}\r\n                        <div className=\"image-gallery\">\r\n                            <button className=\"arrow left-arrow\" onClick={prevImage}>❮</button>\r\n                            <img \r\n                                src={selectedAttraction.images[currentImageIndex]} \r\n                                alt={`Attraction ${currentImageIndex + 1}`} \r\n                            />\r\n                            <button className=\"arrow right-arrow\" onClick={nextImage}>❯</button>\r\n                        </div>\r\n\r\n                        {/* Attraction Details */}\r\n                       \r\n                        {/* Attraction Details Section */}\r\n                        <div className=\"destination-attraction-detail\">\r\n                            <h2>{selectedAttraction.name}</h2>\r\n                            <p>\r\n                                <strong>Description:</strong> {selectedAttraction.description || 'No description available'}\r\n                            </p>\r\n                            <p>📍 <strong>Address:</strong> {selectedAttraction.address}</p>\r\n                            <p>📞 <strong>Phone:</strong> {selectedAttraction.phoneNumber || 'N/A'}</p>\r\n                            <p>⭐ <strong>Rating:</strong> {selectedAttraction.rating.toFixed(1)}</p>\r\n                            <p>\r\n                                🏷️ <strong>Category:</strong> {selectedAttraction.category || 'N/A'}\r\n                            </p>\r\n                            <p>🕒 <strong>Availability:</strong> {selectedAttraction.availability || 'N/A'}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default TopAttractions;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './HotelsSection.css';\r\nimport { User } from 'lucide-react';\r\n\r\nconst HotelsSection = ({ cityName = \"Islamabad\" }) => {\r\n    const [hotels, setHotels] = useState([]);\r\n    const [hotelReviewsData, setHotelReviewsData] = useState([]);\r\n    const [selectedHotel, setSelectedHotel] = useState(null);\r\n    const [popupActive, setPopupActive] = useState(false);\r\n    const [currentHotelImageIndex, setCurrentRestaurantImageIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchHotels = async () => {\r\n            try {\r\n                const response = await fetch('/clean_hotel_data.json');\r\n                const data = await response.json();\r\n\r\n                const filteredHotels = data\r\n                    .filter(hotel => hotel.city?.toLowerCase() === cityName.toLowerCase())\r\n                    .slice(6, 12);\r\n\r\n                setHotels(filteredHotels);\r\n\r\n                const hotelIds = filteredHotels.map(hotel => hotel.hotel_id);\r\n                if (hotelIds.length > 0) {\r\n                    fetchHotelReviews(hotelIds);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching hotels:\", error);\r\n            }\r\n        };\r\n\r\n        const fetchHotelReviews = async (hotelIds) => {\r\n            try {\r\n                const response = await fetch('/hotel_reviews.json');\r\n                const data = await response.json();\r\n\r\n                const filteredReviews = data\r\n                    .filter(review => hotelIds.includes(review.hotel_id))\r\n                    .map(review => ({\r\n                        id: review._id?.$oid,\r\n                        hotel_id: review.hotel_id,\r\n                        city: review.city,\r\n                        username: review.username,\r\n                        rating: parseFloat(review.rating) || 0,\r\n                        review_text: review.review_text || \"\"\r\n                    }));\r\n\r\n                setHotelReviewsData(filteredReviews);\r\n            } catch (error) {\r\n                console.error('Error fetching hotel reviews:', error);\r\n            }\r\n        };\r\n\r\n        fetchHotels();\r\n    }, [cityName]);\r\n\r\n    const getHotelRating = (hotelId) => {\r\n        const hotelReviews = hotelReviewsData.filter(review => review.hotel_id === hotelId);\r\n        const totalReviews = hotelReviews.length;\r\n        const averageRating = totalReviews\r\n            ? (hotelReviews.reduce((sum, review) => sum + review.rating, 0) / totalReviews).toFixed(1)\r\n            : 0;\r\n\r\n        return { averageRating, totalReviews };\r\n    };\r\n\r\n    const handleHotelClick = (hotel) => {\r\n        const hotelReviews = hotelReviewsData.filter(review => review.hotel_id === hotel.hotel_id);\r\n\r\n        setSelectedHotel({\r\n            ...hotel,\r\n            reviews: hotelReviews\r\n        });\r\n\r\n        setPopupActive(true);\r\n    };\r\n\r\n    const closePopup = () => {\r\n        setPopupActive(false);\r\n        setTimeout(() => setSelectedHotel(null), 300);\r\n    };\r\n    const handleNextHotelImage = () => {\r\n        setCurrentRestaurantImageIndex((prevIndex) =>\r\n          prevIndex === selectedHotel.images.length - 1 ? 0 : prevIndex + 1\r\n        );\r\n      };\r\n    \r\n      const handlePrevHotelImage = () => {\r\n        setCurrentRestaurantImageIndex((prevIndex) =>\r\n          prevIndex === 0 ? selectedHotel.images.length - 1 : prevIndex - 1\r\n        );\r\n      };\r\n    return (\r\n        <section className=\"hotels-section-page\">\r\n            <div className=\"section-header-page\">\r\n                <h2>Places to stay in {cityName}</h2>\r\n            </div>\r\n            <div className=\"hotels-list-page\">\r\n                {hotels.map((hotel, index) => {\r\n                    const { averageRating, totalReviews } = getHotelRating(hotel.hotel_id);\r\n\r\n                    return (\r\n                        <div \r\n                            key={index} \r\n                            className=\"hotel-card-page\" \r\n                            onClick={() => handleHotelClick(hotel)}\r\n                        >\r\n                            <div \r\n                                className=\"hotel-image-page\" \r\n                                style={{ backgroundImage: `url(${hotel.images?.[0] || '/default-hotel.jpg'})` }}\r\n                            ></div>\r\n\r\n                            <div className=\"hotel-info-page\">\r\n                                <h3>{hotel.name}</h3>\r\n                                <div className=\"rating\">\r\n                                    {[...Array(5)].map((_, i) => (\r\n                                        <span key={i} className={`star ${i < Math.round(averageRating) ? 'filled' : ''}`}>★</span>\r\n                                    ))}\r\n                                    <span className=\"review-count\">{totalReviews} reviews</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            {selectedHotel && (\r\n    <div className=\"destination-hotel-detail-overlay\">\r\n        <div className=\"destination-hotel-detail-card\">\r\n            <button className=\"destination-hotel-detail-close-btn\" onClick={closePopup}>✕</button>\r\n\r\n            {selectedHotel.images?.length > 0 && (\r\n                <div className=\"destination-hotel-detail-image\">\r\n                    <button className=\"carousel-arrow-hotel left-arrow\" onClick={handlePrevHotelImage}>\r\n                        ❮\r\n                    </button>\r\n                    <img\r\n                        src={selectedHotel.images[currentHotelImageIndex]}\r\n                        alt={selectedHotel.name}\r\n                        className=\"destination-hotel-detail-image\"\r\n                    />\r\n                    <button className=\"carousel-arrow-hotel right-arrow\" onClick={handleNextHotelImage}>\r\n                        ❯\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"destination-hotel-detail-section\">\r\n                <h2><i>{selectedHotel.name}</i></h2>\r\n                <p><strong>Description:</strong> {selectedHotel.description || \"No description available\"}</p>\r\n                <p><strong>📍 Address:</strong> {selectedHotel.address}</p>\r\n                <p><strong>⭐ Rating:</strong> {getHotelRating(selectedHotel.hotel_id).averageRating} ({selectedHotel.reviews?.length} reviews)</p>\r\n                <p><strong>🛎️ Services Provided:</strong> {selectedHotel.facilities || \"N/A\"}</p>\r\n            </div>\r\n\r\n            <div className=\"destination-hotel-detail-section\">\r\n                <h3>Reviews:</h3>\r\n                {selectedHotel.reviews?.length > 0 ? (\r\n                    <ul className=\"destination-hotel-detail-review-list\">\r\n                        {selectedHotel.reviews.map((review, idx) => (\r\n                            <li key={idx} className=\"destination-hotel-detail-review-item\">\r\n                                <div className=\"destination-hotel-detail-review-header\">\r\n                                    <div className=\"profile-icon-circle\">\r\n                                        <User className=\"profile-icon\" />\r\n                                    </div>\r\n                                    <div className=\"review-info\">\r\n                                        <strong>{review.username}</strong>\r\n                                        <div className=\"rating\">\r\n                                            {'★'.repeat(Math.round(review.rating))}\r\n                                            {'☆'.repeat(5 - Math.round(review.rating))}\r\n                                            <span>({review.rating})</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <p>{review.review_text}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>No reviews available.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)}\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HotelsSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './RestaurantsSection.css';\r\nimport { User } from 'lucide-react';\r\n\r\nconst RestaurantsSection = ({ cityName = \"Islamabad\" }) => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [reviewsData, setReviewsData] = useState([]);\r\n    const [selectedRestaurant, setSelectedRestaurant] = useState(null);\r\n    const [currentRestaurantImageIndex, setCurrentRestaurantImageIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchRestaurants = async () => {\r\n            try {\r\n                const response = await fetch('/restaurants_data.json');\r\n                const data = await response.json();\r\n\r\n                const cityRestaurants = data\r\n                    .filter(restaurant => restaurant.city.toLowerCase() === cityName.toLowerCase())\r\n                    .slice(-12,-6);\r\n\r\n                setRestaurants(cityRestaurants);\r\n\r\n                // Fetch reviews after fetching restaurants\r\n                fetchReviews(cityRestaurants.map(r => r.restaurant_id));\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch restaurant data:\", error);\r\n            }\r\n        };\r\n\r\n        const fetchReviews = async (restaurantIds) => {\r\n            try {\r\n                const response = await fetch('/restaurants_reviews.json');\r\n                const data = await response.json();\r\n\r\n                const filteredReviews = data\r\n                    .filter(review => restaurantIds.includes(review.restaurant_id))\r\n                    .map(review => ({\r\n                        ...review,\r\n                        rating: parseFloat(review.rating) || 0\r\n                    }));\r\n\r\n                setReviewsData(filteredReviews);\r\n            } catch (error) {\r\n                console.error('Error fetching reviews:', error);\r\n            }\r\n        };\r\n\r\n        fetchRestaurants();\r\n    }, [cityName]);\r\n\r\n    // Calculate average rating and total reviews for each restaurant\r\n    const getRestaurantRating = (restaurantId) => {\r\n        const restaurantReviews = reviewsData.filter(review => review.restaurant_id === restaurantId);\r\n        const totalReviews = restaurantReviews.length;\r\n        const averageRating = totalReviews\r\n            ? (restaurantReviews.reduce((sum, review) => sum + review.rating, 0) / totalReviews).toFixed(1)\r\n            : 0;\r\n\r\n        return { averageRating, totalReviews };\r\n    };\r\n\r\n    // Handle restaurant card click\r\n    const handleRestaurantClick = (restaurant) => {\r\n        const restaurantReviews = reviewsData.filter(review => review.restaurant_id === restaurant.restaurant_id);\r\n\r\n        setSelectedRestaurant({\r\n            ...restaurant,\r\n            reviews: restaurantReviews\r\n        });\r\n    };\r\n    const handleNextRestaurantImage = () => {\r\n        setCurrentRestaurantImageIndex((prevIndex) =>\r\n          prevIndex === selectedRestaurant.images.length - 1 ? 0 : prevIndex + 1\r\n        );\r\n      };\r\n    \r\n      const handlePrevRestaurantImage = () => {\r\n        setCurrentRestaurantImageIndex((prevIndex) =>\r\n          prevIndex === 0 ? selectedRestaurant.images.length - 1 : prevIndex - 1\r\n        );\r\n      };\r\n    \r\n\r\n    // Close detail card\r\n    const closeDetailCard = () => setSelectedRestaurant(null);\r\n\r\n    return (\r\n        <section className=\"restaurants-section\">\r\n            <div className=\"section-header\">\r\n                <h2>Best Places to Eat in {cityName}</h2>\r\n            </div>\r\n            <div className=\"restaurants-list\">\r\n                {restaurants.map((restaurant, index) => {\r\n                    const { averageRating, totalReviews } = getRestaurantRating(restaurant.restaurant_id);\r\n\r\n                    return (\r\n                        <div key={index} className=\"restaurant-card\" onClick={() => handleRestaurantClick(restaurant)}>\r\n                            <div \r\n                                className=\"restaurant-image\" \r\n                                style={{ backgroundImage: `url(${restaurant.image[0] || '/placeholder.png'})` }}\r\n                            >\r\n                               \r\n                            </div>\r\n                            <div className=\"destination-restaurant-info\">\r\n                                <h3>{restaurant.name}</h3>\r\n                                <div className=\"destination-rating\">\r\n                                    {[...Array(5)].map((_, i) => (\r\n                                        <span \r\n                                            key={i} \r\n                                            className={`destination-star ${i < Math.floor(averageRating) ? 'filled' : ''}`}\r\n                                        >\r\n                                            ★\r\n                                        </span>\r\n                                    ))}\r\n                                    <span className=\"destination-review-count\">\r\n                                        {totalReviews} reviews\r\n                                    </span>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            {/* Overlay for detailed view */}\r\n            {selectedRestaurant && (\r\n                <div className=\"overlay\">\r\n                    <div className=\"trip-detail-restaurant-detail-card\">\r\n                        <button className=\"trip-detail-close-btn\" onClick={closeDetailCard}>✕</button>\r\n                        \r\n                        {/* Display all images */}\r\n                        <div className=\"trip-detail-restaurant-images\">\r\n                            {selectedRestaurant.image?.map((img, index) => (\r\n                                <img\r\n                                    key={index}\r\n                                    src={img || '/placeholder.png'}\r\n                                    alt={selectedRestaurant.name}\r\n                                    className=\"trip-detail-restaurant-detail-image\"\r\n                                />\r\n                            ))}\r\n                        </div>\r\n\r\n                        {/* Section: Restaurant Details */}\r\n                        <div className=\"trip-detail-restaurant-section\">\r\n                            <h2><i>{selectedRestaurant.name}</i></h2>\r\n                            <p><strong>Description:</strong> {selectedRestaurant.description || \"No description available\"}</p>\r\n                            <p><strong>📍 Address:</strong> {selectedRestaurant.address}</p>\r\n                            <p><strong>📞 Phone Number:</strong> {selectedRestaurant.phone_number || \"N/A\"}</p>\r\n                            <p><strong>🕒 Opening Time:</strong> {selectedRestaurant.Open_hour || \"N/A\"}</p>\r\n                            <p><strong>⭐ Rating:</strong> {getRestaurantRating(selectedRestaurant.restaurant_id).averageRating} ({selectedRestaurant.reviews?.length} reviews)</p>\r\n                            <p><strong>🛎️ Services Provided:</strong> {selectedRestaurant.service || \"N/A\"}</p>\r\n                        </div>\r\n\r\n                        {/* Section: Reviews */}\r\n                        <div className=\"trip-detail-restaurant-section\">\r\n                            <h3>Reviews:</h3>\r\n                            {selectedRestaurant.reviews?.length > 0 ? (\r\n                                <ul className=\"trip-detail-review-list\">\r\n                                    {selectedRestaurant.reviews.map((review, idx) => (\r\n                                        <li key={idx} className=\"trip-detail-review-item\">\r\n                                            <div className=\"review-header\">\r\n                                                <div className=\"profile-icon-circle\">\r\n                                                    <User className=\"profile-icon\" />\r\n                                                </div>\r\n                                                <div className=\"review-info\">\r\n                                                    <strong>{review.username}</strong>\r\n                                                    <div className=\"rating\">\r\n                                                        {'★'.repeat(Math.round(review.rating))}\r\n                                                        {'☆'.repeat(5 - Math.round(review.rating))}\r\n                                                        <span>({review.rating})</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <p>{review.review}</p>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>No reviews available.</p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default RestaurantsSection;\r\n","// src/components/CityPage/panorama.js\r\nconst panoramaData = {\r\n    Islamabad: [\r\n      \"https://i0.wp.com/mytravelation.com/wp-content/uploads/2023/11/Islamabad.jpeg?fit=1367%2C768&ssl=1\",\r\n      \"https://i0.wp.com/www.pakistangulfeconomist.com/wp-content/uploads/2017/10/Islamabad.jpg?fit=1045%2C600&ssl=1\",\r\n      \"https://upload.wikimedia.org/wikipedia/commons/c/cf/Blue_Hour_at_Pakistan_Monument.jpg\",\r\n      \"https://i0.wp.com/www.pakistangulfeconomist.com/wp-content/uploads/2017/10/LAKE-VIEW-PARK.jpg?w=1045&ssl=1\",\r\n      \"https://zamulk.com/public/blogs/36/pakeproperty_1597763032.jpg\"\r\n    ],\r\n    Lahore: [\r\n      \"https://mediaim.expedia.com/destination/2/862470e05f53c81d849be4b5f146c9f6.jpg\",\r\n      \"https://upload.wikimedia.org/wikipedia/commons/e/e2/Badshahi_Mosquee%2C_Lahore.jpg\",\r\n      \"https://mediaim.expedia.com/destination/1/7d01ed01c22a1685a1f2046a37ac7f1f.jpg\",\r\n      \"https://i0.wp.com/tayonthemove.com/wp-content/uploads/2017/06/Badshahi-Mosque-Lahore-Pakistan-28.jpg?fit=2528%2C3512&ssl=1\"\r\n      \r\n    ],\r\n    Karachi: [\r\n      \"https://upload.wikimedia.org/wikipedia/commons/7/78/KarachiSkyline-View_from_Hill_Park-Panorama.jpg\",\r\n      \"https://t4.ftcdn.net/jpg/03/25/15/41/360_F_325154156_7bAfi9sNDcJxu7kHnC52m70zN2Vku8Lr.jpg\",\r\n      \"https://example.com/karachi-image3.jpg\"\r\n    ]\r\n  };\r\n  \r\n  export default panoramaData;\r\n  ","\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport panoramaData from './panoramadata.js';\r\nimport './panorama.css';\r\n\r\nconst PanoramaViewer = ({ cityName, showPanorama, onClose }) => {\r\n  const panoramaRef = useRef(null);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  // Get images for the current city\r\n  const images = panoramaData[cityName] || [];\r\n\r\n  useEffect(() => {\r\n    // Dynamically load Pannellum JS and CSS\r\n    const pannellumCSS = document.createElement('link');\r\n    pannellumCSS.rel = 'stylesheet';\r\n    pannellumCSS.href = 'https://cdn.jsdelivr.net/npm/pannellum/build/pannellum.css';\r\n    document.head.appendChild(pannellumCSS);\r\n\r\n    const pannellumJS = document.createElement('script');\r\n    pannellumJS.src = 'https://cdn.jsdelivr.net/npm/pannellum/build/pannellum.js';\r\n    pannellumJS.onload = () => {\r\n      if (showPanorama && panoramaRef.current && images.length > 0) {\r\n        window.pannellum.viewer(panoramaRef.current, {\r\n          \"type\": \"equirectangular\",\r\n          \"panorama\": images[currentImageIndex],\r\n          \"autoLoad\": true,\r\n          \"autoRotate\": -2,\r\n          \"showZoomCtrl\": true,\r\n          \"showFullscreenCtrl\": true\r\n        });\r\n      }\r\n    };\r\n    document.body.appendChild(pannellumJS);\r\n\r\n    return () => {\r\n      document.head.removeChild(pannellumCSS);\r\n      document.body.removeChild(pannellumJS);\r\n    };\r\n  }, [showPanorama, currentImageIndex, images]);\r\n\r\n  const nextImage = (e) => {\r\n    e.stopPropagation();\r\n    setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n  };\r\n\r\n  const prevImage = (e) => {\r\n    e.stopPropagation();\r\n    setCurrentImageIndex((prevIndex) => \r\n      (prevIndex - 1 + images.length) % images.length\r\n    );\r\n  };\r\n\r\n  if (!showPanorama || images.length === 0) return null;\r\n\r\n  return (\r\n    <div className=\"panorama-overlay\">\r\n      <div className=\"panorama-popup\">\r\n        <button className=\"close-button\" onClick={onClose}>×</button>\r\n        <div \r\n          ref={panoramaRef} \r\n          className=\"panorama-container\"\r\n        ></div>\r\n      </div>\r\n      <button className=\"prev-image-button\" onClick={prevImage}>◄</button>\r\n      <button className=\"next-image-button\" onClick={nextImage}>►</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PanoramaViewer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Navbar from '../NavBar/Navbar';\r\nimport Hero from './Hero';\r\nimport TopAttractions from './TopAttractions';\r\nimport HotelsSection from './HotelsSection';\r\nimport RestaurantsSection from './RestaurantsSection';\r\nimport PanoramaViewer from './panorama.js';\r\nimport './CityPage.css';\r\n\r\nconst CityPage = ({ cityName }) => {\r\n  const location = useLocation();\r\n  const [showPanorama, setShowPanorama] = useState(false);\r\n  const [showTooltip, setShowTooltip] = useState(false); // State for tooltip\r\n\r\n  const handlePanoramaClick = () => {\r\n    setShowPanorama(true);\r\n  };\r\n\r\n  const closePanorama = () => {\r\n    setShowPanorama(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"City-page\">\r\n      <Navbar />\r\n      <main className=\"main-content\">\r\n        <Hero cityName={cityName} />\r\n\r\n        <div \r\n          className=\"panorama-icon-wrapper\" \r\n          onMouseEnter={() => setShowTooltip(true)}\r\n          onMouseLeave={() => setShowTooltip(false)}\r\n        >\r\n          <img \r\n            src={`${process.env.PUBLIC_URL}/images/panorama-icon.png`} \r\n            alt=\"360 Panorama\" \r\n            className=\"panorama-icon\" \r\n            onClick={handlePanoramaClick} \r\n          />\r\n          {showTooltip && (\r\n            <div className=\"tooltip\">View Panorama of City</div>\r\n          )}\r\n        </div>\r\n\r\n        <PanoramaViewer \r\n          cityName={cityName} \r\n          showPanorama={showPanorama} \r\n          onClose={closePanorama} \r\n        />\r\n\r\n        <TopAttractions cityName={cityName} />\r\n        <HotelsSection cityName={cityName} />\r\n        <RestaurantsSection cityName={cityName} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityPage;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n    \r\n            © 2025 Voyaige. All rights reserved.\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport { MessageCircle, ClipboardList, Zap } from 'lucide-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './PlanSelection.css';\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nconst PlanSelection = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoaded(true);\r\n  }, []);\r\n\r\n  const handleCardClick = (route) => {\r\n    navigate(route);\r\n  };\r\n\r\n  return (\r\n    <div className={`plan-selection ${isLoaded ? 'loaded' : ''}`}>\r\n      <Navbar />\r\n      <div className=\"message\">\r\n        <h2>Plan your trip with AI!</h2>\r\n      </div>\r\n\r\n      <div className=\"selection-container\">\r\n        <SelectionCard\r\n          title=\"AI Chatbot\"\r\n          description=\"Get personalized recommendations through interactive chat\"\r\n          route=\"/MiloChatbot\"\r\n          iconMain={<MessageCircle className=\"main-icon\" />}\r\n          features={[\r\n            { icon: <Zap size={16} />, text: \"Smart Responses\" },\r\n            { icon: <MessageCircle size={16} />, text: \"Natural Conversation\" },\r\n          ]}\r\n          buttonText=\"Start Chat\"\r\n          handleCardClick={handleCardClick}\r\n        />\r\n\r\n        <SelectionCard\r\n          title=\"Form Based\"\r\n          description=\"Quick and structured recommendation process\"\r\n          route=\"/form-plan\"\r\n          iconMain={<ClipboardList className=\"main-icon\" />}\r\n          features={[\r\n            { icon: <Zap size={16} />, text: \"Instant Results\" },\r\n            { icon: <ClipboardList size={16} />, text: \"Guided Process\" },\r\n          ]}\r\n          buttonText=\"Start Form\"\r\n          handleCardClick={handleCardClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectionCard = ({ title, description, route, iconMain, features, buttonText, handleCardClick }) => {\r\n  return (\r\n    <div className=\"selection-card\" onClick={() => handleCardClick(route)}>\r\n      <div className=\"icon-wrapper\">\r\n        {iconMain}\r\n      </div>\r\n      <h2>{title}</h2>\r\n      <p>{description}</p>\r\n      <div className=\"features\">\r\n        {features.map((feature, index) => (\r\n          <div key={index} className=\"feature\">\r\n            {feature.icon}\r\n            <span>{feature.text}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button className=\"cta-button\">{buttonText}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanSelection;","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport \"./MiloChatbot.css\";\r\n\r\nconst MiloChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\r\n  const [history, setHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\r\n\r\n  useEffect(() => {\r\n    const initialMessages = [\r\n      {\r\n        sender: \"bot\",\r\n        text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\",\r\n      },\r\n    ];\r\n    setMessages(initialMessages);\r\n  }, []);\r\n\r\n  const handleUserMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim();\r\n    setMessages((prev) => [...prev, { sender: \"user\", text: userMessage }]);\r\n    setHistory([userMessage, ...history]);\r\n    setInput(\"\");\r\n    setWelcomeVisible(false);\r\n    setIsTyping(true);\r\n\r\n    let endpoint = \"/MiloChatbot\";\r\n    let payload = { user_input: userMessage };\r\n\r\n    if (/generate itinerary|plan a trip|form a plan|create a plan|create a trip/i.test(userMessage)) {\r\n      const userInputParts = userMessage.split(\" \");\r\n      const startingCity = userInputParts.includes(\"from\")\r\n        ? userInputParts[userInputParts.indexOf(\"from\") + 1]\r\n        : \"Islamabad\";\r\n      const destinationCity = userInputParts.includes(\"to\")\r\n        ? userInputParts[userInputParts.indexOf(\"to\") + 1]\r\n        : \"Lahore\";\r\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\r\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\r\n\r\n      endpoint = \"/generate-itinerary\";\r\n      payload = {\r\n        user_input: userMessage,\r\n        starting_city: startingCity,\r\n        destination_city: destinationCity,\r\n        days,\r\n      };\r\n\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: \"Generating itinerary...\" }]);\r\n    } else if (/top|best/i.test(userMessage)) {\r\n      const match = userMessage.match(/top\\s+(\\d+)?\\s*(hotels|restaurants|attractions|airbnbs?)\\s+in\\s+([\\w\\s]+)/i);\r\n      if (match) {\r\n        const numRecommendations = parseInt(match[1], 10) || 5;\r\n        const category = match[2].toLowerCase();\r\n        const city = match[3].trim().toLowerCase();\r\n\r\n        endpoint = \"/retrieve-top-items\";\r\n        payload = {\r\n          user_input: userMessage,\r\n          num_recommendations: numRecommendations,\r\n          category,\r\n          city,\r\n        };\r\n\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"Fetching top items...\" }]);\r\n      } else {\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          {\r\n            sender: \"milo\",\r\n            text: \"Please specify what type of top information you need (e.g., 'top 5 hotels in Lahore').\",\r\n          },\r\n        ]);\r\n        setIsTyping(false);\r\n        return;\r\n      }\r\n    } else if (/tell me about|what is|describe|give details on|where is|give info on/i.test(userMessage)) {\r\n      endpoint = \"/retrieve-details\";\r\n    } else if (userMessage.toLowerCase().includes(\"compare\")) {\r\n      endpoint = \"/compare-two-options\";\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await response.json();\r\n\r\n      let botResponse;\r\n      console.log(\"Backend Response:\", data);\r\n\r\n      if (endpoint === \"/retrieve-details\" && data.result) {\r\n        botResponse = data.result.replace(/\\n/g, \"<br>\");\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: botResponse }]);\r\n      } else if (endpoint === \"/retrieve-top-items\" && data.result) {\r\n        const recommendations = data.result.split(\"\\n\").map((item, index) => (\r\n          <div key={index} className=\"recommendation-card\">\r\n            {item}\r\n          </div>\r\n        ));\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { sender: \"milo\", text: \"Here are the top recommendations:\" },\r\n          { sender: \"milo\", content: recommendations },\r\n        ]);\r\n      }  else if (endpoint === \"/generate-itinerary\" && data.messages) {\r\n        const itineraryText = data.messages.join(\"\\n\"); // Convert array to a single string\r\n        const daySections = itineraryText.split(\"----------------------\").filter(Boolean); // Split by separator\r\n        \r\n        let itineraryCards = [];\r\n        \r\n        for (let i = 1; i < daySections.length - 1; i++) { // Ignore header and total cost\r\n            const dayDetails = daySections[i].trim().split(\"\\n\").filter(line => line);\r\n            const dayNumber = dayDetails[0].match(/Day\\s+(\\d+)/i)?.[1] || `Unknown`;\r\n            \r\n            const dayContent = dayDetails.slice(1).map((detail, index) => (\r\n                <p key={index}>{detail}</p>\r\n            ));\r\n    \r\n            itineraryCards.push(\r\n                <div key={i} className=\"itinerary-day-card\">\r\n                    <h4>Day {dayNumber}</h4>\r\n                    {dayContent}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Extract total trip cost\r\n        const totalCost = data.messages.find(msg => msg.includes(\"Total Trip Cost\"));\r\n        const totalCostCard = totalCost ? (\r\n            <div className=\"total-cost-card\">\r\n                <h4>Total Trip Cost</h4>\r\n                <p>{totalCost.replace(\"Total Trip Cost:\", \"\").trim()}</p>\r\n            </div>\r\n        ) : null;\r\n    \r\n        setMessages((prev) => [\r\n            ...prev,\r\n            { sender: \"milo\", text: \"Generated itinerary is ready!\" },\r\n            { sender: \"milo\", content: itineraryCards },\r\n            totalCostCard ? { sender: \"milo\", content: totalCostCard } : null,\r\n        ].filter(Boolean)); // Remove null values;\r\n      } else {\r\n        botResponse = \"I'm here to assist you!\";\r\n        if (!data || !data.messages) {\r\n          botResponse = \"Failed to generate itinerary. Please try again.\";\r\n        }\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: botResponse }]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error communicating with backend:\", error);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"milo\", text: \"Sorry, something went wrong. Please try again later.\" },\r\n      ]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleUserMessage();\r\n    } else if (e.key === \"ArrowUp\") {\r\n      if (historyIndex < history.length - 1) {\r\n        const newIndex = historyIndex + 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      }\r\n    } else if (e.key === \"ArrowDown\") {\r\n      if (historyIndex > 0) {\r\n        const newIndex = historyIndex - 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(-1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <Navbar />\r\n      {welcomeVisible && (\r\n        <div className=\"welcome-message\">\r\n          <h3>Welcome to a chat with Milo, your personal smart AI Trip Planner!</h3>\r\n          <h4>Click on the input bar to start the chat.</h4>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"chat-container\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\r\n            {msg.content ? (\r\n              msg.content\r\n            ) : (\r\n              <span>{msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`}</span>\r\n            )}\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"chat-bubble milo\">\r\n            <span>Milo is typing...</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          onFocus={() => setWelcomeVisible(false)}\r\n        />\r\n        <button onClick={handleUserMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiloChatbot;","// src/crosswordData.js\r\n\r\nconst crosswordData = [\r\n    [\r\n        {\r\n            answer: \"NEELUMVALLY\",\r\n            hint: \"Mini Switzerland of Pakistan.\",\r\n            startx: 2,\r\n            starty: 8,\r\n            orientation: \"across\",\r\n            position: 1,\r\n        },\r\n        {\r\n            answer: \" KARAKORAM\",\r\n            hint: \"Highest paved international road, connecting Pakistan to China.\",\r\n            startx: 9,\r\n            starty: 1,\r\n            orientation: \"down\",\r\n            position: 2,\r\n        },\r\n        {\r\n            answer: \"SKARDU\",\r\n            hint: \"Region in Gilgit-Baltistan known for its apricot orchards\",\r\n            startx: 3,\r\n            starty: 11,\r\n            orientation: \"across\",\r\n            position: 3,\r\n        },\r\n        {\r\n            answer: \"KHYBERPASS\",\r\n            hint: \"Mountain pass that connects Pakistan with Afghanistan\",\r\n            startx: 4,\r\n            starty: 11,\r\n            orientation: \"down\",\r\n            position: 4,\r\n        },\r\n        {\r\n            answer: \"DERAWAR\",\r\n            hint: \"Fortress in southern Punjab, known for its 40 massive bastions\",\r\n            startx: 12,\r\n            starty: 7,\r\n            orientation: \"down\",\r\n            position: 5,\r\n        },\r\n        {\r\n            answer: \"GILGIT\",\r\n            hint: \"Ancient caravanserai town on the Silk Road\",\r\n            startx: 16,\r\n            starty: 2,\r\n            orientation: \"down\",\r\n            position: 6,\r\n        },\r\n        {\r\n            answer: \"THATTA\",\r\n            hint: \"Home to the Shah Jahan Mosque\",\r\n            startx: 16,\r\n            starty: 11,\r\n            orientation: \"across\",\r\n            position: 7,\r\n        },\r\n        {\r\n            answer: \"SHALIMAR\",\r\n            hint: \"Historic garden complex built by Emperor Shah Jahan\",\r\n            startx: 17,\r\n            starty: 10,\r\n            orientation: \"down\",\r\n            position: 8,\r\n        },\r\n        {\r\n            answer: \"CHITRAL\",\r\n            hint: \"The valley with unique Kalash culture.\",\r\n            startx: 8,\r\n            starty: 13,\r\n            orientation: \"down\",\r\n            position: 9,\r\n        },\r\n        {\r\n            answer: \"MULTAN\",\r\n            hint: \"The ancient town in Punjab, known as the City of Saints\",\r\n            startx: 13,\r\n            starty: 16,\r\n            orientation: \"across\",\r\n            position: 10,\r\n        },\r\n        {\r\n            answer: \"DAMANEKOH\",\r\n            hint: \"Islamabad scenic hill station\",\r\n            startx: 22,\r\n            starty: 1,\r\n            orientation: \"down\",\r\n            position: 12,\r\n        },\r\n        {\r\n            answer: \"FAISALMOSQUE\",\r\n            hint: \"Islamabad scenic hill station\",\r\n            startx: 25,\r\n            starty: 3,\r\n            orientation: \"down\",\r\n            position: 11,\r\n        },\r\n        {\r\n            answer: \"TAXILA\",\r\n            hint: \"A plateau famous for its Buddhist monastic complexes\",\r\n            startx: 13,\r\n            starty: 6,\r\n            orientation: \"across\",\r\n            position: 13,\r\n        },\r\n        {\r\n            answer: \"DEOSAIPLAINS\",\r\n            hint: \"A plateau famous for its Buddhist monastic complexes\",\r\n            startx: 1,\r\n            starty: 2,\r\n            orientation: \"across\",\r\n            position: 14,\r\n        },\r\n        {\r\n            answer: \"HARAPPA\",\r\n            hint: \"Ancient trading city along the Silk Road\",\r\n            startx: 6,\r\n            starty: 17,\r\n            orientation: \"across\",\r\n            position: 15,\r\n        },\r\n        {\r\n            answer: \"KAGHAN\",\r\n            hint: \"Lush northern valley known for its trout-rich rivers\",\r\n            startx: 18,\r\n            starty: 2,\r\n            orientation: \"down\",\r\n            position: 16,\r\n        }, \r\n\r\n\r\n{\r\n            answer: \"SHIMSHAL\",\r\n            hint: \"Highest village in Pakistan, located in Gilgit-Baltistan\",\r\n            startx: 17,\r\n            starty: 18,\r\n            orientation: \"across\",\r\n            position: 17,\r\n        },\r\n        {\r\n            answer: \"MURREE\",\r\n            hint: \"Famous British-era hill station\",\r\n            startx: 2,\r\n            starty: 4,\r\n            orientation: \"across\",\r\n            position: 18,\r\n        },\r\n        {\r\n            answer: \"KHAIRPUR\",\r\n            hint: \"Historical town in Sindh known for its forts, mosques\",\r\n            startx: 14,\r\n            starty: 10,\r\n            orientation: \"down\",\r\n            position: 19,\r\n        },\r\n        {\r\n            answer: \"HINGOL\",\r\n            hint: \"Saltwater lake in Balochistan\",\r\n            startx: 24,\r\n            starty: 10,\r\n            orientation: \"down\",\r\n            position: 20,\r\n        },\r\n        {\r\n            answer: \"LAHORE\",\r\n            hint: \"City of Gardens\",\r\n            startx: 12,\r\n            starty: 20,\r\n            orientation: \"across\",\r\n            position: 21,\r\n        },\r\n        {\r\n            answer: \"NANGAPARBAT\",\r\n            hint: \"Northern peak in Gilgit-Baltistan\",\r\n            startx: 1,\r\n            starty: 10,\r\n            orientation: \"down\",\r\n            position: 22,\r\n        },\r\n        {\r\n            answer: \"SAWAT\",\r\n            hint: \"A town in Khyber Pakhtunkhwa \",\r\n            startx: 20,\r\n            starty: 2,\r\n            orientation: \"down\",\r\n            position: 23,\r\n        },\r\n\r\n \r\n       \r\n    ],\r\n    [\r\n        {\r\n            answer: \"JHELUM\",\r\n            hint: \"River that forms the western border of the Punjab \",\r\n            startx: 4,\r\n            starty: 1,\r\n            orientation: \"across\",\r\n            position: 1,\r\n        },\r\n        {\r\n            answer: \"MOHENJODARO\",\r\n            hint: \"Ancient ruins near Harappa\",\r\n            startx: 9,\r\n            starty: 1,\r\n            orientation: \"down\",\r\n            position: 2,\r\n        },\r\n        {\r\n            answer: \"JASMINE\",\r\n            hint: \"National flower of Pakistan\",\r\n            startx: 16,\r\n            starty: 4,\r\n            orientation: \"across\",\r\n            position: 3,\r\n        },\r\n        {\r\n            answer: \"INDUS\",\r\n            hint: \"River that flows through Punjab \",\r\n            startx: 20,\r\n            starty: 4,\r\n            orientation: \"down\",\r\n            position: 4,\r\n        },\r\n        {\r\n            answer: \"CHOLISTAN\",\r\n            hint: \"Desert festival in Punjab\",\r\n            startx: 13,\r\n            starty: 12,\r\n            orientation: \"across\",\r\n            position: 5,\r\n        },\r\n        {\r\n            answer: \"SHALIMAR\",\r\n            hint: \"Famous Mughal-era garden in Lahore\",\r\n            startx: 3,\r\n            starty: 7,\r\n            orientation: \"down\",\r\n            position: 6,\r\n        },\r\n        {\r\n            answer: \"RUPEE\",\r\n            hint: \"Pakistani currency.\",\r\n            startx: 5,\r\n            starty: 4,\r\n            orientation: \"across\",\r\n            position: 7,\r\n        },\r\n        {\r\n            answer: \"MANCHAR\",\r\n            hint: \"The largest freshwater lake in Pakistan\",\r\n            startx: 11,\r\n            starty: 14,\r\n            orientation: \"down\",\r\n            position: 8,\r\n        },\r\n        {\r\n            answer: \"HUNZA\",\r\n            hint: \"A valley in Gilgit-Baltistan known for apricots\",\r\n            startx: 12,\r\n            starty: 2,\r\n            orientation: \"across\",\r\n            position: 9,\r\n        },\r\n        {\r\n            answer: \"MARKHOR\",\r\n            hint: \"Pakistan’s national animal.\",\r\n            startx: 15,\r\n            starty: 7,\r\n            orientation: \"down\",\r\n            position: 10,\r\n        },\r\n        {\r\n            answer: \"FAISALABAD\",\r\n            hint: \"City known as the 'Manchester of Pakistan' for its textile industry\",\r\n            startx: 24,\r\n            starty: 7,\r\n            orientation: \"down\",\r\n            position: 11,\r\n        },\r\n        {\r\n            answer: \"THAR\",\r\n            hint: \"Desert region shared by Pakistan and India.\",\r\n            startx: 22,\r\n            starty: 11,\r\n            orientation: \"across\",\r\n            position: 12,\r\n        },\r\n        {\r\n            answer: \"BADSHAHI\",\r\n            hint: \"A white marble Mughal-era mosque in Lahore\",\r\n            startx: 2,\r\n            starty: 17,\r\n            orientation: \"across\",\r\n            position: 13,\r\n        },\r\n        {\r\n            answer: \"BASANT\",\r\n            hint: \"Annual harvest festival in the Punjab region \",\r\n            startx: 20,\r\n            starty: 11,\r\n            orientation: \"down\",\r\n            position: 14,\r\n        },\r\n        {\r\n            answer: \"ATTABAD\",\r\n            hint: \"Large freshwater lake in Gilgit-Baltistan \",\r\n            startx: 15,\r\n            starty: 19,\r\n            orientation: \"across\",\r\n            position: 15,\r\n        },\r\n        {\r\n            answer: \"AJRAK\",\r\n            hint: \"Colorful handmade textile worn by women in Sindh.\",\r\n            startx: 9,\r\n            starty: 20,\r\n            orientation: \"across\",\r\n            position: 16,\r\n        },\r\n        {\r\n            answer: \"ZIARAT\",\r\n            hint: \"Mountainous area in Balochistan with scenic views and cultural heritage\",\r\n            startx: 6,\r\n            starty: 9,\r\n            orientation: \"down\",\r\n            position: 17,\r\n        },\r\n        {\r\n            answer: \"KHAIRPUR\",\r\n            hint: \"Historical city in Sindh known for its cultural heritage and forts.\",\r\n            startx: 12,\r\n            starty: 4,\r\n            orientation: \"down\",\r\n            position: 18,\r\n        },\r\n        {\r\n            answer: \"NOORMAHAL\",\r\n            hint: \"A historic garden complex built by the Mughal emperor Humayun.\",\r\n            startx: 1,\r\n            starty: 3,\r\n            orientation: \"down\",\r\n            position: 19,\r\n        },\r\n        {\r\n            answer: \"RABAB\",\r\n            hint: \"Traditional Pakistani instrument similar to a lute.\",\r\n            startx: 2,\r\n            starty: 15,\r\n            orientation: \"down\",\r\n            position: 20,\r\n        },\r\n        {\r\n            answer: \"SIACHEN\",\r\n            hint: \"Traditional Pakistani instrument similar to a lute.\",\r\n            startx: 9,\r\n            starty: 15,\r\n            orientation: \"across\",\r\n            position: 21,\r\n        },\r\n        {\r\n            answer: \"SEHWAN\",\r\n            hint: \"Largest glacier outside polar regions, in the Karakoram range.\",\r\n            startx: 19,\r\n            starty: 2,\r\n            orientation: \"across\",\r\n            position: 22,\r\n        },\r\n    ],\r\n];\r\n\r\nexport default crosswordData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './CrosswordGrid.css';\r\nimport crosswordData from './crosswordData'; // Import the crossword data\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nlet level = 0;\r\n\r\nconst generateInitialGrid = () => {\r\n    const initialGrid = Array(22).fill(0).map(() => Array(25).fill(' '));\r\n    crosswordData[level].forEach(({ answer, startx, starty, orientation }) => {\r\n        let x = startx - 1;\r\n        let y = starty - 1;\r\n\r\n        for (let i = 0; i < answer.length; i++) {\r\n            if (orientation === 'across') {\r\n                initialGrid[y][x + i] = '';\r\n            } else if (orientation === 'down') {\r\n                initialGrid[y + i][x] = '';\r\n            }\r\n        }\r\n    });\r\n    return initialGrid;\r\n};\r\n\r\nconst generateAnswerGrid = () => {\r\n    const answerGrid = Array(22).fill(0).map(() => Array(25).fill(' '));\r\n    crosswordData[level].forEach(({ answer, startx, starty, orientation }) => {\r\n        let x = startx - 1;\r\n        let y = starty - 1;\r\n\r\n        for (let i = 0; i < answer.length; i++) {\r\n            if (orientation === 'across') {\r\n                answerGrid[y][x + i] = answer[i];\r\n            } else if (orientation === 'down') {\r\n                answerGrid[y + i][x] = answer[i];\r\n            }\r\n        }\r\n    });\r\n    return answerGrid;\r\n};\r\n\r\nconst CrosswordGrid = () => {\r\n    const [grid, setGrid] = useState(generateInitialGrid());\r\n    const [hoveredHint, setHoveredHint] = useState('');\r\n    const [hintPosition, setHintPosition] = useState({ top: 0, left: 0 });\r\n    const [showWinMessage, setShowWinMessage] = useState(false);\r\n    const [showLoseMessage, setShowLoseMessage] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setGrid(generateInitialGrid());\r\n        window.scrollTo(0, 0);  // Scroll to the top when the component is mounted\r\n    }, []);\r\n\r\n    const handleInputChange = (row, col, text) => {\r\n        const newGrid = [...grid];\r\n        newGrid[row][col] = text.toUpperCase();\r\n        setGrid(newGrid);\r\n    };\r\n\r\n    const handleGenerate = () => {\r\n        level = (level + 1) % crosswordData.length;\r\n        setGrid(generateInitialGrid());\r\n    };\r\n    \r\n\r\n    const handleVerify = async () => {\r\n        const answerGrid = generateAnswerGrid();\r\n        const isCorrect = JSON.stringify(grid) === JSON.stringify(answerGrid);\r\n        if (isCorrect) {\r\n            // Correct solution: Show win message and update points and challenge status\r\n            setShowWinMessage(true);\r\n    \r\n            // Get user email from localStorage to identify user\r\n            const user = JSON.parse(localStorage.getItem(\"user\"));\r\n            if (user && user.email) {\r\n                try {\r\n                    // Send request to update points and mark challenge as completed\r\n                    await updatePointsAndStatus(user.email, 2000);\r\n                } catch (error) {\r\n                    console.error(\"Error updating points and challenge status:\", error.response?.data || error.message);\r\n                }\r\n            }\r\n    \r\n            setTimeout(() => {\r\n                navigate('/', { state: { redirectedFromChallengeId: 1 } }); // Pass challengeId in state\r\n            }, 2000);\r\n        } else {\r\n            setShowLoseMessage(true); // Show lose message if incorrect\r\n        }\r\n    };\r\n    \r\n     \r\n    const updatePointsAndStatus = async (email, points) => {\r\n        try {\r\n            console.log('Sending POST request to update points and challenge status:', { email, points });\r\n            const response = await axios.post(\"http://localhost:5000/api/users/updatePoints\", {\r\n                email,\r\n                points,\r\n                challengeId: 1 // Mark challenge ID 1 as completed\r\n            });\r\n    \r\n            console.log(\"Points and challenge status updated successfully:\", response.data);\r\n        } catch (error) {\r\n            console.error(\"Error updating points and challenge status:\", error.response?.data || error.message);\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    const handleReset = () => {\r\n        setGrid(generateInitialGrid());\r\n    };\r\n\r\n    const handleSolve = () => {\r\n        const answerGrid = generateAnswerGrid();\r\n        setGrid(answerGrid);\r\n    };\r\n\r\n    const closeMessage = () => {\r\n        setShowWinMessage(false);\r\n        setShowLoseMessage(false);\r\n    };\r\n\r\n    const renderGrid = () => (\r\n        <div className=\"grid\">\r\n            {grid.map((row, rowIndex) => (\r\n                <div key={rowIndex} className=\"row\">\r\n                    {row.map((cell, colIndex) => (\r\n                        <div key={colIndex} className=\"cellContainer\">\r\n                            {crosswordData[level].map((entry) => {\r\n                                const { startx, starty, position } = entry;\r\n                                if (rowIndex + 1 === starty && colIndex + 1 === startx) {\r\n                                    return (\r\n                                        <span\r\n                                            key={`digit-${position}`}\r\n                                            className=\"smallDigit\"\r\n                                            onMouseEnter={(e) => {\r\n                                                setHoveredHint(entry.hint);\r\n                                                const rect = e.target.getBoundingClientRect();\r\n                                                setHintPosition({\r\n                                                    top: rect.top + window.scrollY + 20,\r\n                                                    left: rect.left + window.scrollX + 5,\r\n                                                });\r\n                                            }} \r\n                                            onMouseLeave={() => setHoveredHint('')}\r\n                                        >\r\n                                            {position}\r\n                                        </span>\r\n                                    );\r\n                                }\r\n                                return null;\r\n                            })}\r\n                            <input\r\n                                type=\"text\"\r\n                                className={`cell ${grid[rowIndex][colIndex] === ' ' ? 'staticCell' : ''}`}\r\n                                value={cell}\r\n                                onChange={(e) => handleInputChange(rowIndex, colIndex, e.target.value)}\r\n                                maxLength={1}\r\n                                disabled={grid[rowIndex][colIndex] === ' '}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Navbar />\r\n            <h2>Crossword Challenge</h2>\r\n            {renderGrid()}\r\n             {/* Add Navbar at the top */}\r\n            <div className=\"buttonContainer\">\r\n                <button className=\"button\" onClick={handleGenerate}>Generate</button>\r\n                <button className=\"button\" onClick={handleVerify}>Verify</button>\r\n                <button className=\"button\" onClick={handleReset}>Reset</button>\r\n                <button className=\"button\" onClick={handleSolve}>Solve</button>\r\n            </div>\r\n\r\n            {hoveredHint && (\r\n                <div className=\"hintPopup\" style={{ top: hintPosition.top, left: hintPosition.left }}>\r\n                    <p>{hoveredHint}</p>\r\n                </div>\r\n            )}\r\n\r\n            {showWinMessage && (\r\n                <div className=\"win-message\" onClick={closeMessage}>\r\n                    Congratulations! You have earned 2000 points!\r\n                </div>\r\n            )}\r\n\r\n            {showLoseMessage && (\r\n                <div className=\"lose-message\" onClick={closeMessage}>\r\n                    Incorrect. Please try again.\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CrosswordGrid;\r\n","import React, { Component } from 'react';\r\nimport './Question.css';\r\n\r\nclass Options extends Component {\r\n  render() {\r\n    const { options, selectedOption, onOptionChange } = this.props;\r\n\r\n    return (\r\n      <div className=\"options-container\">\r\n        <div className=\"options\">\r\n          {options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              type=\"button\"\r\n              className={`option-button ${selectedOption === option ? 'selected' : ''}`}\r\n              onClick={() => onOptionChange(option)}\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Options;\r\n","// Question.js\r\nimport React, { Component } from \"react\";\r\nimport Options from \"./Option\";\r\nimport \"./Question.css\";\r\n\r\nclass Question extends Component {\r\n  state = {\r\n    selectedOption: null, // Track selected option\r\n  };\r\n\r\n  handleOptionChange = (option) => {\r\n    this.setState({ selectedOption: option });\r\n    this.props.onOptionChange(option); // Pass the selected option to the parent\r\n\r\n    // Check answer immediately when an option is selected\r\n    this.props.checkAnswer(option);\r\n\r\n    // Move to the next question after a short delay to give user feedback\r\n    setTimeout(() => {\r\n      this.props.onSubmit(); // Call onSubmit to go to the next question\r\n    }, 500); // Delay of 500ms (or any preferred delay)\r\n  };\r\n\r\n  render() {\r\n    const { question, timer } = this.props;\r\n    const { selectedOption } = this.state;\r\n\r\n    return (\r\n      <div className=\"question-container\">\r\n        <div className=\"timer\">\r\n          <h2>{`00: ${timer}`}</h2>\r\n        </div>\r\n        <h3>Question {question.id}</h3>\r\n        <img src={question.image} alt={`Image for ${question.question}`} />\r\n        <h5>{question.question}</h5>\r\n        <div className=\"options-container\">\r\n          <Options\r\n            options={question.options}\r\n            selectedOption={selectedOption}\r\n            onOptionChange={this.handleOptionChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","// QuestionBank.js\r\n\r\nconst qBank = [\r\n    {\r\n        id: 1,\r\n        question: \"Name the valley . \",\r\n        options: [\"Swat Valley\", \"Neelum Valley\", \"Hunza Valley\", \" Yarkhun Valley\"],\r\n        answer:\"Swat Valley\",\r\n        image:\"https://wander-lush.org/wp-content/uploads/2020/01/SwatValleyPakistanSAKhanPhotographyCanvaPro.jpg\"\r\n    },\r\n    {\r\n        id: 2,\r\n        question: \"Where is this mosque located?\",\r\n        options: [\"Peshawar\", \"Quetta\", \"Hyderabad\", \"Lahore\"],\r\n        answer: \"Lahore\",\r\n        image:\"https://wander-lush.org/wp-content/uploads/2020/01/LahorePakistanHomoCosmicosCanvaPro.jpg\"\r\n    },\r\n    {\r\n        id: 3,\r\n        question: \"What is the name of this pass?\",\r\n        options: [\"Siachin Glacier Pass\", \"Malakand Pass\", \"Khunjerab Pass\", \"Kaghan Pass\"],\r\n        answer: \"Khunjerab Pass\",\r\n        image:\"https://wander-lush.org/wp-content/uploads/2020/01/KhunjerabPassPakistanViroj_SupornpraditCanvaPro.jpg\"\r\n    },\r\n    {\r\n        id: 4,\r\n        question: \"Name the Hill ?\",\r\n        options: [\"Margala Hill\", \"Kaghan Valley\", \"Kashmir Hills\", \"Pir Panjal Range\"],\r\n        answer: \"Margala Hill\",\r\n        image:\"https://wander-lush.org/wp-content/uploads/2020/01/MargalaHillsPakistanNaqshCanvaPro.jpg\"\r\n    },\r\n    {\r\n        id: 5,\r\n        question: \"Name the Fort?\",\r\n        options: [\"Rohtas Fort\", \"Attock Fort\", \"Manikyala Fort\", \"Derawar Fort\"],\r\n        answer: \"Rohtas Fort\",\r\n        image:\"https://wander-lush.org/wp-content/uploads/2020/01/RohtasFortPakistanSimonImagesCanvaPro.jpg\"\r\n    },\r\n    {\r\n        id: 6,\r\n        question: \"Name the hill station?\",\r\n        options: [\"  Murree\", \"Gorakh\", \"Thandiani\", \"Pir Sohawa\"],\r\n        answer: \"Gorakh\",\r\n        image:\"https://www.tripkarao.pk/_next/image?url=https%3A%2F%2Fres.cloudinary.com%2Fdvmqrtgg8%2Fimage%2Fupload%2Fc_fill%2Cw_700%2Ch_400%2Cq_100%2Fv1605612554%2Ftrips%2Fp1caaobn3rmz7qddgavv.webp&w=1920&q=100\"\r\n    },\r\n    {\r\n        id: 7,\r\n        question: \"Identify the Lake\",\r\n        options: [\"Sheosar Lake \", \"Hanna Lake\", \"Rama Lake\", \"Rawal Lake\"],\r\n        answer: \"Rawal Lake\",\r\n        image:\"https://expatstraveltogether.com/wp-content/uploads/2023/09/1501489-Islamabadrawallake-1504933418-1290x540.jpg\"\r\n    },\r\n    {\r\n        id: 8,\r\n        question: \"Name the Beach\",\r\n        options: [\"Kapasi Beach \", \"French Beach\", \"Clifton Beach\", \"Jiwani Beach\"],\r\n        answer: \"Kapasi Beach \",\r\n        image:\"https://gda.gov.pk/wp-content/uploads/2022/06/55906354_2116340708420732_4176992962514780160_n.jpg\"\r\n    },\r\n    {\r\n        id: 9,\r\n        question: \"Name the Mosque\",\r\n        options: [\"Shah Jahan Mosque\", \"Sunehri Mosque\", \"Shahi Eidgah Mosque\", \"Badshahi Mosqu\"],\r\n        answer: \"Shah Jahan Mosque\",\r\n        image:\"https://www.orientalarchitecture.com/gallery/pakistan/thatta/shah-jahan-mosque/photos/shah-jahan_mosque02.jpg\"\r\n    },\r\n\r\n\r\n]\r\n\r\nexport default qBank;\r\n","// Score.js\r\n\r\nimport React, { Component } from 'react';\r\nimport './quiz.css'\r\n\r\nclass Score extends Component {\r\n    render() {\r\n        const { score, onNextQuestion } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <h2>Results</h2>\r\n                <h4>Your score: {score}</h4>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Score;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Question from \"./Question\";\r\nimport qBank from \"./QuestionBank\";\r\nimport Score from \"./Score\";\r\nimport \"./quiz.css\";\r\nimport Navbar from \"../NavBar/Navbar\"; // Import Navbar\r\n\r\nconst Quiz = () => {\r\n  const [questionBank] = useState(qBank);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n  const [quizEnd, setQuizEnd] = useState(false);\r\n  const [timer, setTimer] = useState(60);\r\n  const [messageVisible, setMessageVisible] = useState(false);\r\n  const [pointsSent, setPointsSent] = useState(false); // Track if points are sent\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Scroll to the top when the component loads\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setTimer((prevTimer) => {\r\n        if (prevTimer > 0) return prevTimer - 1;\r\n\r\n        clearInterval(intervalId);\r\n        setQuizEnd(true); // End the quiz when the timer runs out\r\n        return 0;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId); // Cleanup interval on unmount\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (quizEnd && !pointsSent) {\r\n      setMessageVisible(true);\r\n\r\n      // Send points to the database\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (user && user.email) {\r\n        updatePoints(user.email, score); // Call the function to update points\r\n      }\r\n\r\n      setPointsSent(true); // Ensure points are sent only once\r\n\r\n      setTimeout(() => {\r\n        navigate('/', { state: { redirectedFromChallengeId: 2 } }); // Pass challengeId in state\r\n    }, 2000); // Redirect to homepage after 2 seconds\r\n    }\r\n  }, [quizEnd, pointsSent, navigate, score]);\r\n\r\n  const updatePoints = async (email, points) => {\r\n    try {\r\n        console.log('Sending POST request to update points:', { email, points });\r\n        const response = await axios.post(\"http://localhost:5000/api/users/updatePoints\", {\r\n            email,\r\n            points,\r\n            challengeId:2\r\n        });\r\n    \r\n        console.log(\"Points updated successfully:\", response.data);\r\n    } catch (error) {\r\n        console.error(\"Error updating points:\", error.response?.data || error.message);\r\n    }\r\n};\r\n  \r\n\r\n  const handleOptionChange = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const checkAnswer = (selectedOption) => {\r\n    if (selectedOption === questionBank[currentQuestion].answer) {\r\n      setScore((prevScore) => prevScore + 500); // Add points for correct answer\r\n    }\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestion + 1 < questionBank.length) {\r\n      setCurrentQuestion((prevQuestion) => prevQuestion + 1);\r\n      setSelectedOption(\"\"); // Clear the selected option\r\n    } else {\r\n      setQuizEnd(true); // End the quiz when there are no more questions\r\n    }\r\n  };\r\n\r\n  const winMessage = score > 0 ? (\r\n    <div className=\"win-message\">\r\n      🎉 You have won {score} points! 🎉\r\n    </div>\r\n  ) : (\r\n    <div className=\"lose-message\">\r\n      Better luck next time! Your score is {score} points.\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      {!quizEnd ? (\r\n        <Question\r\n          question={questionBank[currentQuestion]}\r\n          selectedOption={selectedOption}\r\n          onOptionChange={handleOptionChange}\r\n          checkAnswer={checkAnswer}\r\n          onSubmit={handleNextQuestion}\r\n          timer={timer}\r\n        />\r\n      ) : (\r\n        <div className=\"score-container\">\r\n          <Score score={score} onNextQuestion={handleNextQuestion} className=\"score\" />\r\n          {messageVisible && winMessage} {/* Display the win/lose message */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ItineraryForm.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nconst ItineraryForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    starting_point: '',\r\n    destination: '',\r\n    duration_days: '',\r\n    num_travelers: '',\r\n    area_of_interest: '',\r\n    budget: '',\r\n    allocation_percentages: {\r\n      hotel: 50,\r\n      restaurants: 30,\r\n      attractions: 20\r\n    }\r\n  });\r\n  const navigate = useNavigate();\r\n  const [itinerary, setItinerary] = useState(null);\r\n  // Using an object for errors so we can show multiple field errors\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name.includes('allocation_percentages')) {\r\n      const field = name.split('.')[1];\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        allocation_percentages: {\r\n          ...prevState.allocation_percentages,\r\n          [field]: Number(value)\r\n        }\r\n      }));\r\n    } else {\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    // Starting point validation\r\n    if (!formData.starting_point.trim()) {\r\n      newErrors.starting_point = \"Starting point is required\";\r\n    } else if (!/^[a-zA-Z\\s\\-,.]+$/.test(formData.starting_point)) {\r\n      newErrors.starting_point = \"Starting point should contain only letters\";\r\n    }\r\n    \r\n    // Destination validation\r\n    if (!formData.destination.trim()) {\r\n      newErrors.destination = \"Destination is required\";\r\n    } else if (!/^[a-zA-Z\\s\\-,.]+$/.test(formData.destination)) {\r\n      newErrors.destination = \"Destination should contain only letters\";\r\n    } else if (formData.destination.trim().toLowerCase() === formData.starting_point.trim().toLowerCase()) {\r\n      newErrors.destination = \"Destination cannot be the same as starting point\";\r\n    }\r\n    \r\n    // Duration validation\r\n    if (!formData.duration_days) {\r\n      newErrors.duration_days = \"Duration is required\";\r\n    } else if (isNaN(formData.duration_days) || parseInt(formData.duration_days) <= 0) {\r\n      newErrors.duration_days = \"Duration must be a positive number\";\r\n    } else if (parseInt(formData.duration_days) > 7) {\r\n      newErrors.duration_days = \"Duration cannot exceed 7 days\";\r\n    }\r\n    \r\n    // Number of travelers validation\r\n    if (!formData.num_travelers) {\r\n      newErrors.num_travelers = \"Number of travelers is required\";\r\n    } else if (isNaN(formData.num_travelers) || parseInt(formData.num_travelers) <= 0) {\r\n      newErrors.num_travelers = \"Number of travelers must be a positive number\";\r\n    } else if (parseInt(formData.num_travelers) > 10) {\r\n      newErrors.num_travelers = \"Number of travelers cannot exceed 10\";\r\n    }\r\n    \r\n    // Area of interest validation\r\n    if (!formData.area_of_interest.trim()) {\r\n      newErrors.area_of_interest = \"Area of interest is required\";\r\n    } else if (!/^[a-zA-Z\\s\\-,.]+$/.test(formData.area_of_interest)) {\r\n      newErrors.area_of_interest = \"Area of interest should contain only letters\";\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setItinerary(null);\r\n    setErrors({});\r\n\r\n    // Validate form data\r\n    const formErrors = validateForm();\r\n    if (Object.keys(formErrors).length > 0) {\r\n      setErrors(formErrors);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      starting_point: formData.starting_point,\r\n      destination: formData.destination,\r\n      duration_days: Number(formData.duration_days),\r\n      num_travelers: Number(formData.num_travelers),\r\n      area_of_interest: formData.area_of_interest,\r\n      budget: Number(formData.budget),\r\n      allocation_percentages: formData.allocation_percentages\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:5002/api/ItineraryForm', payload);\r\n      setItinerary(response.data.itinerary);\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.error || err.message || 'An unknown error occurred';\r\n      // If the error comes from the API, we show it as a global error\r\n      setErrors({ global: errorMessage });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const confirmBooking = () => {\r\n    // Save itinerary to localStorage\r\n    localStorage.setItem('confirmedItinerary', JSON.stringify(itinerary));\r\n\r\n    // Optionally log for debug\r\n    console.log(\"Confirmed Itinerary:\", itinerary);\r\n\r\n    // Redirect to CheckoutPage with itinerary in state\r\n    navigate('/chekout', { state: { itinerary } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"itinerary-form-container\">\r\n      <Navbar />\r\n      <h2>Plan Your Dream Trip</h2>\r\n      \r\n      {/* Display Global Error if present */}\r\n      {errors.global && (\r\n        <div className=\"error-message\">\r\n          {errors.global}\r\n        </div>\r\n      )}\r\n\r\n      {/* Display Field-specific Errors */}\r\n      {Object.keys(errors).length > 0 && !errors.global && (\r\n        <div className=\"error-message\">\r\n          <ul>\r\n            {Object.entries(errors).map(([field, message]) => (\r\n              <li key={field}>{message}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      <form className=\"itinerary-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"starting_point\">Starting Point</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"starting_point\"\r\n              name=\"starting_point\"\r\n              value={formData.starting_point}\r\n              onChange={handleChange}\r\n              placeholder=\"e.g., Islamabad\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"destination\">Destination</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"destination\"\r\n              name=\"destination\"\r\n              value={formData.destination}\r\n              onChange={handleChange}\r\n              placeholder=\"e.g., Murree\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"duration_days\">Duration (Days)</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"duration_days\"\r\n              name=\"duration_days\"\r\n              value={formData.duration_days}\r\n              onChange={handleChange}\r\n              min=\"1\"\r\n              placeholder=\"e.g., 5\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"num_travelers\">Number of Travelers</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"num_travelers\"\r\n              name=\"num_travelers\"\r\n              value={formData.num_travelers}\r\n              onChange={handleChange}\r\n              min=\"1\"\r\n              placeholder=\"e.g., 4\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"area_of_interest\">Area of Interest</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"area_of_interest\"\r\n              name=\"area_of_interest\"\r\n              value={formData.area_of_interest}\r\n              onChange={handleChange}\r\n              placeholder=\"e.g., Urban Exploration\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"budget\">Budget (PKR)</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"budget\"\r\n              name=\"budget\"\r\n              value={formData.budget}\r\n              onChange={handleChange}\r\n              min=\"1\"\r\n              placeholder=\"e.g., 12000\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-button\" disabled={loading}>\r\n          {loading ? 'Generating Itinerary...' : 'Generate Itinerary'}\r\n        </button>\r\n      </form>\r\n\r\n      {itinerary && (\r\n        <div className=\"itinerary-result\">\r\n          <h3>Your Personalized Itinerary</h3>\r\n          <div className=\"itinerary-summary\">\r\n            <p><strong>Destination:</strong> {itinerary.destination}</p>\r\n            <p><strong>Duration:</strong> {itinerary.duration_days} Days</p>\r\n            <p><strong>Travelers:</strong> {itinerary.num_travelers}</p>\r\n            <p><strong>Total Budget:</strong> {itinerary.total_budget} PKR</p>\r\n          </div>\r\n          <div className=\"hotel-info\">\r\n            <h4>Accommodation</h4>\r\n            <p><strong>{itinerary.hotel.name}</strong></p>\r\n            <p><strong>Price per night:</strong> {itinerary.hotel.price} PKR</p>\r\n          </div>\r\n          <div className=\"transport-info\">\r\n            <h4>Transportation</h4>\r\n            <p><strong>Mode:</strong> {itinerary.transportation.mode}</p>\r\n            <p><strong>Estimated Cost:</strong> {itinerary.transportation.estimated_cost} PKR</p>\r\n          </div>\r\n          <div className=\"daily-itinerary\">\r\n            {itinerary.days.map((day) => (\r\n              <div key={day.day} className=\"day-itinerary\">\r\n                <h4>Day {day.day}</h4>\r\n                <div className=\"day-detail\">\r\n                  <p><strong>Attraction:</strong> {day.attraction.name || day.attraction}</p>\r\n                  <p><strong>Lunch:</strong> {day.lunch}</p>\r\n                  <p><strong>Dinner:</strong> {day.dinner}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"cost-breakdown\">\r\n            <p><strong>Total Cost:</strong> {itinerary.cost_breakdown.total_cost} PKR</p>\r\n            <p><strong>Status:</strong> {itinerary.cost_breakdown.status}</p>\r\n          </div>\r\n          <button className=\"confirm-button\" onClick={confirmBooking}>\r\n            Confirm Booking\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItineraryForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { CreditCard, Lock, Calendar, User, Shield } from 'lucide-react';\r\nimport './CheckoutPage.css';\r\nimport Navbar from '../NavBar/Navbar';\r\nimport './Checkout2.css'\r\n\r\nconst CheckoutPage = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [promoCode, setPromoCode] = useState('');\r\n  const [isCardFocused, setIsCardFocused] = useState(false);\r\n  const [tripData, setTripData] = useState(null);\r\n  const [initialLoad, setInitialLoad] = useState(true);\r\n  const [applyingPromo, setApplyingPromo] = useState(false);\r\n  const [promoDiscount, setPromoDiscount] = useState(0);\r\n  const [promoError, setPromoError] = useState(null);\r\n\r\n  // Load trip data from location state or API\r\n  useEffect(() => {\r\n    const fetchTripData = async () => {\r\n      try {\r\n        if (location.state?.tripId) {\r\n          const response = await axios.get(`http://localhost:5000/api/trips/${location.state.tripId}`);\r\n          console.log(response);\r\n          if (response.data && response.data.checkoutData) {\r\n            setTripData({\r\n              days: response.data.checkoutData.days || [],\r\n              discountPercentage: response.data.checkoutData.discountPercentage || 0,\r\n              summary: response.data.checkoutData.summary || {}\r\n            });\r\n            \r\n          } else {\r\n            setError(\"Trip data not found or incomplete\");\r\n          }\r\n        } else {\r\n          // Redirect to customization page if no trip ID is provided\r\n          navigate('/UserCustomization');\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching trip data:\", err);\r\n        setError(\"Could not load trip data. Please try again.\");\r\n      } finally {\r\n        setInitialLoad(false);\r\n      }\r\n    };\r\n\r\n    fetchTripData();\r\n  }, [location.state, navigate]);\r\n\r\n  // Calculate totals from trip data\r\n  const calculateTotals = () => {\r\n    if (!tripData || !tripData.days) return { subtotal: 0, discount: 0, total: 0 };\r\n    \r\n    const subtotal = tripData.days.reduce((sum, day) => sum + day.totalCost, 0);\r\n    const pointsDiscount = (subtotal * (tripData.discountPercentage || 0)) / 100;\r\n    const promoAmount = (subtotal * promoDiscount) / 100;\r\n    const totalDiscount = pointsDiscount + promoAmount;\r\n    const total = subtotal - totalDiscount;\r\n    return { subtotal, discount: totalDiscount, total, pointsDiscount, promoAmount };\r\n  };\r\n\r\n  // Handle promo code application\r\n  const handleApplyPromo = async () => {\r\n    if (!promoCode.trim()) {\r\n      setPromoError(\"Please enter a promo code\");\r\n      return;\r\n    }\r\n    \r\n    setApplyingPromo(true);\r\n    setPromoError(null);\r\n    \r\n    try {\r\n      // Mock API call for promo code validation\r\n      // In a real application, this would be a call to your backend\r\n      // const response = await axios.post('http://localhost:5000/api/validate-promo', { code: promoCode });\r\n      \r\n      // Simulating API response for demo purposes\r\n      const mockValidCodes = {\r\n        'WELCOME10': 10,\r\n        'TRAVEL20': 20,\r\n        'FIRSTTRIP': 15\r\n      };\r\n      \r\n      if (mockValidCodes[promoCode.toUpperCase()]) {\r\n        setPromoDiscount(mockValidCodes[promoCode.toUpperCase()]);\r\n        setPromoError(null);\r\n      } else {\r\n        setPromoError(\"Invalid promo code\");\r\n        setPromoDiscount(0);\r\n      }\r\n    } catch (err) {\r\n      setPromoError(\"Error applying promo code\");\r\n      setPromoDiscount(0);\r\n    } finally {\r\n      setApplyingPromo(false);\r\n    }\r\n  };\r\n\r\n  // Handle redirection after successful payment\r\n  useEffect(() => {\r\n    if (success) {\r\n      const timer = setTimeout(() => {\r\n        navigate('/cart', { \r\n          state: { \r\n            tripData: tripData,\r\n            paymentDetails: {\r\n              amount: calculateTotals().total,\r\n              date: new Date().toISOString(),\r\n              status: 'Paid'\r\n            }\r\n          } \r\n        });\r\n      }, 2000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [success, navigate, tripData, calculateTotals]); // Added calculateTotals to dependency array\r\n\r\n  // Handle payment submission\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    if (!stripe || !elements) {\r\n      setError(\"Stripe is not properly initialized\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const { total } = calculateTotals();\r\n      \r\n      // Create payment intent\r\n      const response = await axios.post('http://localhost:5000/api/payment-intent', {\r\n        amount: total\r\n      });\r\n  \r\n      if (response.status !== 200) {\r\n        throw new Error(`Error: ${response.data.message}`);\r\n      }\r\n      \r\n      const { clientSecret } = response.data;\r\n  \r\n      // Confirm card payment\r\n      const { error: stripeError, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        }\r\n      });\r\n  \r\n      if (stripeError) {\r\n        setError(stripeError.message);\r\n        setSuccess(false);\r\n      } else if (paymentIntent.status === 'succeeded') {\r\n        // Update trip status to 'paid' in the database\r\n        if (location.state?.tripId) {\r\n          await axios.patch(`http://localhost:5000/api/trips/${location.state.tripId}`, {\r\n            status: 'paid',\r\n            paymentDetails: {\r\n              amount: total,\r\n              date: new Date().toISOString(),\r\n              method: 'card',\r\n              promoApplied: promoDiscount > 0 ? promoCode : null,\r\n              promoDiscount: promoDiscount\r\n            }\r\n          });\r\n        }\r\n        \r\n        setSuccess(true);\r\n        setError(null);\r\n      } else {\r\n        setError(`Payment status: ${paymentIntent.status}. Please try again.`);\r\n        setSuccess(false);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || \"An error occurred while processing your payment\");\r\n      setSuccess(false);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Show loading state during initial data fetch\r\n  if (initialLoad) {\r\n    return (\r\n      <div className=\"checkout-container\">\r\n        <Navbar />\r\n        <div className=\"checkout-content fade-in loading-state\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading your trip details...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show error state if trip data couldn't be loaded\r\n  if (!tripData && !initialLoad) {\r\n    return (\r\n      <div className=\"checkout-container\">\r\n        <Navbar />\r\n        <div className=\"checkout-content fade-in error-state\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h2>Unable to load trip details</h2>\r\n          <p>{error || \"Please try again or contact support.\"}</p>\r\n          <button className=\"retry-button\" onClick={() => window.location.reload()}>\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { subtotal, discount, total, pointsDiscount, promoAmount } = calculateTotals();\r\n\r\n  return (\r\n    <div className=\"checkout-container\">\r\n      <Navbar />\r\n      <div className=\"checkout-content fade-in\">\r\n        <div className=\"checkout-header\">\r\n          <h1>Complete Your Payment</h1>\r\n          <div className=\"secure-badge\">\r\n            <Shield size={18} /> Secured & Encrypted\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"checkout-grid\">\r\n          <div className=\"summary-card\">\r\n            <div className=\"card-header\">\r\n              <h2>Trip Summary</h2>\r\n              <CreditCard size={20} />\r\n            </div>\r\n\r\n            {/* Trip details summary */}\r\n            {tripData && tripData.summary && (\r\n              <div className=\"trip-overview\">\r\n                <div className=\"trip-route\">\r\n                  <span className=\"from\">{tripData.summary.from}</span>\r\n                  <span className=\"separator\">→</span>\r\n                  <span className=\"to\">{tripData.summary.to}</span>\r\n                </div>\r\n                <div className=\"trip-dates\">\r\n                  <Calendar size={14} />\r\n                  <span>\r\n                    {new Date(tripData.summary.startDate).toLocaleDateString('en-US', { \r\n                      month: 'short', day: 'numeric' \r\n                    })} - {new Date(tripData.summary.endDate).toLocaleDateString('en-US', { \r\n                      month: 'short', day: 'numeric', year: 'numeric' \r\n                    })}\r\n                  </span>\r\n                </div>\r\n                <div className=\"trip-guests\">\r\n                  <User size={14} />\r\n                  <span>Budget: {tripData.summary.guests === 1 ? 'Economic' : tripData.summary.guests === 2 ? 'Normal' : tripData.summary.guests === 3 ? 'Deluxe' : 'N/A'} • {tripData.summary.duration} {tripData.summary.duration > 1 ? 'Days' : 'Day'}</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"cost-breakdown\">\r\n              {tripData && tripData.days.map((day, index) => (\r\n                <div key={index} className=\"cost-item slide-in\">\r\n                  <span>{day.title}</span>\r\n                  <span className=\"cost\">{day.totalCost.toLocaleString()}</span>\r\n                </div>\r\n              ))}\r\n              \r\n              <div className=\"cost-divider\"></div>\r\n              \r\n              <div className=\"subtotal cost-item\">\r\n                <span>Sub-total</span>\r\n                <span className=\"cost\">{subtotal.toLocaleString()}</span>\r\n              </div>\r\n              \r\n              {pointsDiscount > 0 && (\r\n                <div className=\"discount cost-item\">\r\n                  <span>Points Discount ({tripData.discountPercentage}%)</span>\r\n                  <span className=\"cost-discount\">-{pointsDiscount.toLocaleString()}</span>\r\n                </div>\r\n              )}\r\n              \r\n              {promoDiscount > 0 && (\r\n                <div className=\"discount cost-item\">\r\n                  <span>Promo Discount ({promoCode.toUpperCase()}: {promoDiscount}%)</span>\r\n                  <span className=\"cost-discount\">-{promoAmount.toLocaleString()}</span>\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"total cost-item\">\r\n                <span>Total Amount</span>\r\n                <span className=\"cost-total\">{total.toLocaleString()}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"promosection\">\r\n              <h3>Promo Code</h3>\r\n              <div className=\"promo-input\">\r\n                <input \r\n                  type=\"text\" \r\n                  value={promoCode}\r\n                  onChange={(e) => setPromoCode(e.target.value)}\r\n                  placeholder=\"Enter your code\"\r\n                  disabled={applyingPromo || success}\r\n                />\r\n                <button \r\n                  className={`promo-button ${applyingPromo ? 'loading' : ''}`}\r\n                  onClick={handleApplyPromo}\r\n                  disabled={applyingPromo || success}\r\n                >\r\n                  {applyingPromo ? 'Applying...' : 'Apply'}\r\n                </button>\r\n              </div>\r\n              {promoError && <div className=\"promo-error\">{promoError}</div>}\r\n              {promoDiscount > 0 && <div className=\"promo-success\">Promo code applied successfully!</div>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"payment-card\">\r\n            <div className=\"card-header\">\r\n              <h2>Card Payment</h2>\r\n              <Lock size={20} />\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"payment-form\">\r\n              <div className={`stripe-card ${isCardFocused ? 'focused' : ''}`}>\r\n                <CardElement \r\n                  onFocus={() => setIsCardFocused(true)}\r\n                  onBlur={() => setIsCardFocused(false)}\r\n                  options={{\r\n                    style: {\r\n                      base: {\r\n                        fontSize: '16px',\r\n                        fontWeight: '500',\r\n                        fontFamily: 'Inter, system-ui, sans-serif',\r\n                        color: '#1a1f36',\r\n                        '::placeholder': {\r\n                          color: '#6b7280',\r\n                        },\r\n                        padding: '20px 0',\r\n                      },\r\n                      invalid: {\r\n                        color: '#ef4444',\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              {error && <div className=\"error-message slide-in\">{error}</div>}\r\n              {success && <div className=\"success-message slide-in\">Payment successful! Redirecting to confirmation page...</div>}\r\n\r\n              <button \r\n                className={`payment-button ${loading ? 'loading' : ''}`}\r\n                type=\"submit\"\r\n                disabled={!stripe || loading || success}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <div className=\"spinner\"></div>\r\n                    Processing Payment...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Lock size={18} />\r\n                    Pay {total.toLocaleString()}\r\n                  </>\r\n                )}\r\n              </button>\r\n            </form>\r\n\r\n            <div className=\"security-info\">\r\n              <Shield size={16} />\r\n              <span>Your payment information is encrypted and secure</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport './Tripdetail.css';\r\nimport Navbar from '../../NavBar/Navbar';\r\nimport { User } from 'lucide-react';\r\n\r\nconst TripDetails = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { cityData, tripTitle, tripImage } = location.state || {};\r\n  const [reviewsData, setReviewsData] = useState([]);\r\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\r\n  const [HotelReviewsData, setHotelReviewsData] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  const [selectedHotel, setSelectedHotel] = useState(null);\r\n  const [selectedAttraction, setSelectedAttraction] = useState(null);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const [currentAttractionImageIndex, setCurrentAttractionImageIndex] = useState(0);\r\n  const [currentRestaurantImageIndex, setCurrentRestaurantImageIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n     window.scrollTo(0, 0);\r\n   \r\n     // Fetch restaurant reviews data from JSON file\r\n     const fetchReviews = async () => {\r\n       try {\r\n         const response = await fetch('/restaurants_reviews.json');\r\n         const data = await response.json();\r\n   \r\n         // Convert ratings to numbers and calculate average ratings\r\n         const formattedReviews = data.map((review) => ({\r\n           ...review,\r\n           rating: parseFloat(review.rating) || 0, // Convert rating to number\r\n         }));\r\n   \r\n         setReviewsData(formattedReviews);\r\n       } catch (error) {\r\n         console.error('Error fetching reviews:', error);\r\n       }\r\n     };\r\n   // Fetch restaurant reviews data from JSON file\r\n   const fetchHotelReviews = async () => {\r\n     try {\r\n       const response = await fetch('/hotel_reviews.json');\r\n       const data = await response.json();\r\n \r\n       // Convert ratings to numbers and calculate average ratings\r\n       const formattedHotelReviews = data.map((review) => ({\r\n         ...review,\r\n         rating: parseFloat(review.rating) || 0, // Convert rating to number\r\n       }));\r\n \r\n       setHotelReviewsData(formattedHotelReviews);\r\n     } catch (error) {\r\n       console.error('Error fetching reviews:', error);\r\n     }\r\n   };\r\n \r\n \r\n     fetchReviews();\r\n     fetchHotelReviews();\r\n     \r\n    \r\n    \r\n   }, [cityData]); // Re-fetch when cityData change\r\n \r\n  // Calculate total price based on hotel prices and number of days for each city\r\n  useEffect(() => {\r\n   if (cityData) {\r\n     let total = 0;\r\n     cityData.forEach((city) => {\r\n       if (city.hotels && city.hotels.length > 0) {\r\n         const hotelPrice = city.hotels[0].price; // Assuming there's only one hotel per city\r\n         total += hotelPrice * city.days;\r\n       }\r\n     });\r\n     setTotalPrice(total);\r\n   }\r\n }, [cityData]);\r\n  \r\n \r\n  // Function to calculate the average rating of a restaurant\r\n  const calculateAverageRating = (restaurantId) => {\r\n   const restaurantReviews = reviewsData.filter(\r\n     (review) => review.restaurant_id === restaurantId\r\n     \r\n   );\r\n   if (restaurantReviews.length === 0) return 0;\r\n \r\n   // Calculate the average rating using _.mean\r\n   const averageRating = _.mean(restaurantReviews.map((review) => review.rating));\r\n   return averageRating.toFixed(1); // Round to 1 decimal place\r\n };\r\n \r\n // Function to get reviews for a restaurant\r\n const getRestaurantReviews = (restaurantId) => {\r\n   return reviewsData.filter((review) => review.restaurant_id === restaurantId);\r\n };\r\n  \r\n  // Function to calculate the average rating of a restaurant\r\n  const calculateAverageHotelRating = (hotelId) => {\r\n   const HotelReviews = HotelReviewsData.filter(\r\n     (review) => review.hotel_id === hotelId\r\n     \r\n   );\r\n   if (HotelReviews.length === 0) return 0;\r\n   // Calculate the average rating using _.mean\r\n   const averageHotelRating = _.mean(HotelReviews.map((review) => review.rating)); \r\n   return averageHotelRating.toFixed(1); // Round to 1 decimal place\r\n };\r\n \r\n // Function to get reviews for a restaurant\r\n const getHotelReviews = (hotelId) => {\r\n   \r\n   return HotelReviewsData.filter((review) => review.hotel_id === hotelId);\r\n };\r\n \r\n   // Handle restaurant click\r\n   const handleRestaurantClick = (restaurant) => {\r\n     const reviews = getRestaurantReviews(restaurant.id);\r\n     setSelectedRestaurant({ \r\n       ...restaurant, \r\n       reviews, \r\n       rating: calculateAverageRating(restaurant.id) \r\n     });\r\n   };\r\n \r\n   const handleAttractionClick = (attraction) => {\r\n     setSelectedAttraction(attraction);\r\n   };\r\n \r\n \r\n // Handle restaurant click\r\n \r\n   const handleHotelClick = (hotel) => {\r\n     const hotelReviews = getHotelReviews(hotel.hotel_id);\r\n     setSelectedHotel({ \r\n       ...hotel, \r\n       reviews: hotelReviews,\r\n       rating: calculateAverageHotelRating(hotel.hotel_id) \r\n     });\r\n   };\r\n   const handlePrevImage = () => {\r\n     setCurrentImageIndex((prevIndex) =>\r\n       prevIndex === 0 ? selectedHotel.images.length - 1 : prevIndex - 1\r\n     );\r\n   };\r\n \r\n   const handleNextImage = () => {\r\n     setCurrentImageIndex((prevIndex) =>\r\n       prevIndex === selectedHotel.images.length - 1 ? 0 : prevIndex + 1\r\n     );\r\n   };  \r\n \r\n \r\n const closeHotelCard = () => {setSelectedHotel(null)};\r\n \r\n   const closeDetailCard = () => {\r\n     setSelectedRestaurant(null);\r\n     setSelectedAttraction(null);\r\n   };\r\n \r\n   const handleNextRestaurantImage = () => {\r\n     setCurrentRestaurantImageIndex((prevIndex) =>\r\n       prevIndex === selectedRestaurant.images.length - 1 ? 0 : prevIndex + 1\r\n     );\r\n   };\r\n \r\n   const handlePrevRestaurantImage = () => {\r\n     setCurrentRestaurantImageIndex((prevIndex) =>\r\n       prevIndex === 0 ? selectedRestaurant.images.length - 1 : prevIndex - 1\r\n     );\r\n   };\r\n \r\n   const handleNextAttractionImage = () => {\r\n     setCurrentAttractionImageIndex((prevIndex) =>\r\n       prevIndex === selectedAttraction.images.length - 1 ? 0 : prevIndex + 1\r\n     );\r\n   };\r\n \r\n   const handlePrevAttractionImage = () => {\r\n     setCurrentAttractionImageIndex((prevIndex) =>\r\n       prevIndex === 0 ? selectedAttraction.images.length - 1 : prevIndex - 1\r\n     );\r\n   };\r\n   const fallbackDescriptions = [\r\n     'A cozy dining spot offering a delightful blend of flavors, perfect for savoring both traditional and modern dishes.',\r\n     'With a warm ambiance and attentive service, it’s an ideal place for casual meals or special occasions.',\r\n     'The menu features fresh, locally sourced ingredients, ensuring every bite is a memorable experience.'\r\n   ];\r\n\r\n  const handleBooking = async () => {\r\n    if (!cityData || !tripTitle) {\r\n      alert('Missing trip data');\r\n      return;\r\n    }\r\n  \r\n    const userData = JSON.parse(localStorage.getItem('user'));\r\n    const userEmail = userData?.email;\r\n  \r\n    if (!userEmail) {\r\n      alert('User not logged in. Please log in to book the trip.');\r\n      return;\r\n    }\r\n  \r\n    const bookingData = {\r\n      tripTitle,\r\n      email: userEmail,\r\n      cityBookings: cityData.map((city) => ({\r\n        cityName: city.cityName,\r\n        days: city.days,\r\n      })),\r\n    };\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/add-preplanned', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(bookingData),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const hotelData = cityData.map((city) => ({\r\n          hotelName: city.hotels[0]?.name || 'Unknown',\r\n          hotelPrice: city.hotels[0]?.price || 0,\r\n        }));\r\n  \r\n        navigate('/checkout2', { state: { hotelData, totalPrice } });\r\n      } else {\r\n        const data = await response.json();\r\n        alert(`Failed to book trip: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error booking trip:', error);\r\n      alert('An error occurred while booking the trip');\r\n    }\r\n  };\r\n  \r\n\r\n  // Split data by days and limit to 4 items max per day\r\n  const splitDataByDays = (items, days) => {\r\n    const itemsPerDay = Math.ceil(items.length / days);\r\n    return Array.from({ length: days }, (_, i) =>\r\n      items.slice(i * itemsPerDay, (i + 1) * itemsPerDay).slice(0, 4) // Limit to 4 items per day\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"trip-details-page\">\r\n      <Navbar />\r\n      {tripImage && (\r\n        <div className=\"trip-detail-trip-image-container\">\r\n          <img src={tripImage} alt={tripTitle} className=\"trip-detail-trip-image\" />\r\n        </div>\r\n      )}\r\n      {tripTitle && <h1 className=\"trip-detail-trip-title\">{tripTitle}</h1>}\r\n\r\n      {cityData?.map((city, index) => {\r\n        const splitRestaurants = splitDataByDays(city.restaurants || [], city.days);\r\n        const splitAttractions = splitDataByDays(city.attractions || [], city.days);\r\n\r\n        return (\r\n          <div className=\"trip-detail-city-section\" key={index}>\r\n            <h2 className=\"trip-detail-city-name\">\r\n              {city.days} Days in {city.cityName}\r\n            </h2>\r\n\r\n            {Array.from({ length: city.days }, (_, dayIndex) => (\r\n              <div key={dayIndex} className=\"trip-detail-day-section\">\r\n                <h3>Day {dayIndex + 1}</h3>\r\n\r\n                {/* Restaurants */}\r\n                <h4>Restaurants</h4>\r\n                <div className=\"trip-detail-list-container\">\r\n                  {splitRestaurants[dayIndex]?.map((restaurant, idx) => {\r\n                    const avgRating = calculateAverageRating(restaurant.id);\r\n                    return (\r\n                      <div\r\n                        key={idx}\r\n                        className=\"trip-detail-list-item\"\r\n                        onClick={() => handleRestaurantClick(restaurant)}\r\n                      >\r\n                        <div className=\"trip-detail-hover-card\">\r\n                          <img\r\n                            src={encodeURI(restaurant.images?.[0]) || '/placeholder.png'}\r\n                            alt={restaurant.name}\r\n                            className=\"trip-detail-card-image\"\r\n                            onError={(e) => {\r\n                              e.target.onerror = null; // Prevent infinite loop in case fallback fails\r\n                              e.target.src =\r\n                                'https://cdn.vectorstock.com/i/preview-2x/44/16/spoon-and-fork-abstract-logo-graphic-food-icon-vector-26574416.webp';\r\n                            }}\r\n                          />\r\n                          <div className=\"trip-detail-hover-card-content\">\r\n                            <h4>{restaurant.name}</h4>\r\n                            <p>⭐ Rating : {avgRating} ({getRestaurantReviews(restaurant.id).length} reviews)</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* Attractions */}\r\n                <h4>Attractions</h4>\r\n                <div className=\"trip-detail-list-container\">\r\n                  {splitAttractions[dayIndex]?.map((attraction, idx) => (\r\n                    <div\r\n                      key={idx}\r\n                      className=\"trip-detail-list-item\"\r\n                      onClick={() => handleAttractionClick(attraction)}\r\n                    >\r\n                      <div className=\"trip-detail-hover-card\">\r\n                        <img\r\n                          src={attraction.images?.[0] || '/placeholder.png'}\r\n                          alt={attraction.name}\r\n                          className=\"trip-detail-card-image\"\r\n                        />\r\n                        <div className=\"trip-detail-hover-card-content\">\r\n                          <h4>{attraction.name}</h4>\r\n                          <p>⭐ Rating: {attraction.rating}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            {/* Hotels Section */}\r\n            <h3>Hotels</h3>\r\n            <div className=\"trip-detail-list-container\">\r\n              {city.hotels?.map((hotel, idx) => {\r\n                const avgHotelRating = calculateAverageHotelRating(hotel.hotel_id);\r\n\r\n                return (\r\n                  <div key={idx} className=\"trip-detail-list-item\" onClick={() => handleHotelClick(hotel)}>\r\n                    <div className=\"trip-detail-hover-card\">\r\n                      <img\r\n                        src={hotel.images?.[0] || '/placeholder.png'}\r\n                        alt={hotel.name}\r\n                        className=\"trip-detail-card-image\"\r\n                        onError={(e) => {\r\n                          e.target.onerror = null;\r\n                          e.target.src = '/placeholder.png';\r\n                        }}\r\n                      />\r\n                      <div className=\"trip-detail-hover-card-content\">\r\n                        <h4>{hotel.name}</h4>\r\n                        <p>⭐ Rating : {avgHotelRating} ({getHotelReviews(hotel.hotel_id).length} reviews)</p>\r\n                        {hotel.price && <p>💰 {hotel.price}</p>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {/* BOOK NOW BUTTON */}\r\n      <button className=\"trip-detail-booking\" onClick={handleBooking}>\r\n        BOOK NOW ({totalPrice > 0 ? `💰 Rs ${totalPrice.toFixed(2)}` : 'Calculating...'})\r\n      </button>\r\n   \r\n         {selectedRestaurant && (\r\n           <div className=\"overlay\">\r\n             <div className=\"trip-detail-restaurant-detail-card\">\r\n               <button className=\"trip-detail-close-btn\" onClick={closeDetailCard}>✕</button>\r\n               \r\n               <img\r\n                 src={selectedRestaurant.images?.[0] || '/placeholder.png'}\r\n                 alt={selectedRestaurant.name}\r\n                 className=\"trip-detail-restaurant-detail-image\"\r\n               />\r\n   \r\n               {/* Section: Restaurant Details */}\r\n               <div className=\"trip-detail-restaurant-section\">\r\n                 <h2><i>{selectedRestaurant.name}</i></h2>\r\n                 <p> Description : \r\n                     {selectedRestaurant.description ||\r\n                   fallbackDescriptions[Math.floor(Math.random() * fallbackDescriptions.length)]} </p>\r\n                 <p>📍Address : {selectedRestaurant.address}</p>\r\n                 <p>📞 Phone Number : {selectedRestaurant.phoneNumber}</p>\r\n                 <p>🕒 Opning Time : {selectedRestaurant.openHour}</p>\r\n                 <p>⭐ Rating: {selectedRestaurant.rating} ({selectedRestaurant.reviews.length} reviews)</p>\r\n                 <p>🛎️Services Provided : {selectedRestaurant.service}</p>\r\n               \r\n               </div>\r\n   \r\n               {/* Section: Reviews */}\r\n               <div className=\"trip-detail-restaurant-section\">\r\n                 <h3>Reviews:</h3>\r\n                 {selectedRestaurant.reviews.length > 0 ? (\r\n                   <ul className=\"trip-detail-review-list\">\r\n                     {selectedRestaurant.reviews.map((review, idx) => (\r\n                       <li key={idx} className=\"trip-detail-review-item\">\r\n                         <div className=\"review-header\">\r\n                           {/* Circular User Icon */}\r\n                           <div className=\"profile-icon-circle\">\r\n                             <User className=\"profile-icon\" />\r\n                           </div>\r\n                           <div className=\"review-info\">\r\n                             <strong>{review.username}</strong>\r\n                             <div className=\"rating\">\r\n                               {'★'.repeat(Math.round(review.rating))}\r\n                               {'☆'.repeat(5 - Math.round(review.rating))}\r\n                               <span>({review.rating})</span>\r\n                             </div>\r\n                           </div>\r\n                         </div>\r\n                         <p>{review.review}</p>\r\n                       </li>\r\n                     ))}\r\n                   </ul>\r\n                 ) : (\r\n                   <p>No reviews available.</p>\r\n                 )}\r\n               </div>\r\n             </div>\r\n           </div>\r\n         )}\r\n   \r\n   {selectedHotel && (\r\n     <div className=\"overlay\">\r\n       <div className=\"trip-detail-hotel-detail-card scrollable-card\">\r\n         <button className=\"trip-detail-close-btn\" onClick={closeHotelCard}>✕</button>\r\n          {/* Image Carousel */}\r\n          {selectedHotel.images?.length > 0 && (\r\n                 <div className=\"trip-detail-hotel-detail-image\">\r\n                   <button className=\"carousel-arrow-hotel left-arrow\" onClick={handlePrevImage}>\r\n                     ❮\r\n                   </button>\r\n                   <img\r\n                     src={selectedHotel.images[currentImageIndex]}\r\n                     alt={selectedHotel.name}\r\n                     className=\"trip-detail-hotel-detail-image\"\r\n                   />\r\n                   <button className=\"carousel-arrow-hotel right-arrow\" onClick={handleNextImage}>\r\n                     ❯\r\n                   </button>\r\n                 </div>\r\n               )}\r\n         {/* Section: Hotel Details */}\r\n         <div className=\"trip-detail-hotel-section\">\r\n           <h2><i>{selectedHotel.name}</i></h2>\r\n           <p>\r\n             Description: {selectedHotel.description ||\r\n               fallbackDescriptions[Math.floor(Math.random() * fallbackDescriptions.length)]}\r\n           </p>\r\n           <p>📍Address : {selectedHotel.address}</p>\r\n           <p>📞 Phone Number : {selectedHotel.phoneNumber}</p>\r\n           <p>⭐ Rating: {selectedHotel.rating} ({selectedHotel.reviews.length} reviews)</p>\r\n           <p>🛎️Services Provided : {selectedHotel.facilities}</p>\r\n         </div>\r\n   \r\n         {/* Section: Reviews */}\r\n         <div className=\"trip-detail-restaurant-section\">\r\n           <h3>Reviews:</h3>\r\n           {selectedHotel.reviews.length > 0 ? (\r\n             <ul className=\"trip-detail-review-list\">\r\n               {selectedHotel.reviews.map((review, idx) => (\r\n                 <li key={idx} className=\"trip-detail-review-item\">\r\n                   <div className=\"review-header\">\r\n                     <div className=\"profile-icon-circle\">\r\n                       <User className=\"profile-icon\" />\r\n                     </div>\r\n                     <div className=\"review-info\">\r\n                       <strong>{review.username}</strong>\r\n                       <div className=\"rating\">\r\n                         {'★'.repeat(Math.round(review.rating))}\r\n                         {'☆'.repeat(5 - Math.round(review.rating))}\r\n                         <span>({review.rating})</span>\r\n                       </div>\r\n                     </div>\r\n                   </div>\r\n                   <p>{review.review_text}</p>\r\n                 </li>\r\n               ))}\r\n             </ul>\r\n           ) : (\r\n             <p>No reviews available.</p>\r\n           )}\r\n         </div>\r\n       </div>\r\n     </div>\r\n   )}\r\n      {/* Attraction Detail Card */}\r\n      {selectedAttraction && (\r\n           <div className=\"overlay\">\r\n             <div className=\"trip-detail-attraction-detail-card\">\r\n               <button className=\"trip-detail-close-btn\" onClick={closeDetailCard}>\r\n                 ✕\r\n               </button>\r\n               {selectedAttraction.images?.length > 0 && (\r\n                 <div className=\"trip-detail-attraction-detail-image\">\r\n                   <button className=\"carousel-arrow-attraction left-arrow\" onClick={handlePrevAttractionImage}>\r\n                     ❮\r\n                   </button>\r\n                   <img\r\n                     src={selectedAttraction.images[currentAttractionImageIndex]}\r\n                     alt={selectedAttraction.name}\r\n                     className=\"trip-detail-attraction-detail-image\"\r\n                   />\r\n                   <button className=\"carousel-arrow-attraction right-arrow\" onClick={handleNextAttractionImage}>\r\n                     ❯\r\n                   </button>\r\n                 </div>\r\n               )}\r\n               <div className=\"trip-detail-restaurant-section\">\r\n                 <h2>{selectedAttraction.name}</h2>\r\n                 <p>\r\n                   Description: {selectedAttraction.description || 'No description available'}\r\n                 </p>\r\n                 <p>📍 Address: {selectedAttraction.address}</p>\r\n                 <p>📞 Phone: {selectedAttraction.phoneNumber || 'N/A'}</p>\r\n                 <p>⭐ Rating: {selectedAttraction.rating}</p>\r\n                 <p>\r\n                   🏷️ Category: {selectedAttraction.category || 'N/A'}\r\n                 </p>\r\n                 <p>🕒 Availability: {selectedAttraction.availability || 'N/A'}</p>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         )}\r\n        \r\n   \r\n       </div>\r\n     );\r\n   };\r\n   \r\n   \r\n   export default TripDetails;\r\n   ","import React, { useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './AllTrips.css';\r\nimport Navbar from '../../NavBar/Navbar';\r\n\r\nconst AllTrips = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { trips } = location.state; // Receive trips with city data\r\n\r\n  // Scroll to top when the page is opened\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const handleViewDetails = (trip) => {\r\n    navigate('/trip-details', {\r\n      state: {\r\n        cityData: trip.cityData,\r\n        tripTitle: trip.title,\r\n        tripImage: trip.image\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"all_trips-page\">\r\n      <Navbar />\r\n      <div className=\"all_trips-container\">\r\n        <h2>All Pre-Planned Trips</h2>\r\n        <div className=\"all_trips-trips_list\">\r\n          {trips.map((trip) => (\r\n            <div className=\"all_trips-trip_card\" key={trip.id}>\r\n              <img src={trip.image} alt={trip.title} />\r\n              <div className=\"all_trips-trip_info\">\r\n                <h3>{trip.title}</h3>\r\n                <p>{trip.description}</p>\r\n                <button onClick={() => handleViewDetails(trip)}>View Details</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AllTrips;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Navbar from '../../NavBar/Navbar';\r\nimport './UserCustomization.css';\r\n\r\n\r\nconst UserCustomization = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { customizationData, bookingData } = location.state || {};\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [tripId, setTripId] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n    console.log(customizationData);\r\n    console.log(bookingData);\r\n  // Trip summary details\r\n  const [tripSummary, setTripSummary] = useState({\r\n    startingPoint: '',\r\n    destination: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    guests: 1,\r\n    numberOfDays: 0\r\n  });\r\n\r\n  // Trip-level details (hotel and transport)\r\n  const [tripDetails, setTripDetails] = useState({\r\n    hotel: null,\r\n    transport: null\r\n  });\r\n\r\n  // Day-by-day details for food and attractions\r\n  const [dayDetails, setDayDetails] = useState({});\r\n\r\n  // City options for various destinations\r\n  const cityOptions = {\r\n    \"Islamabad\": {\r\n      lunch: [\"Monal Restaurant\", \"Tandoori Restaurant\", \"Chaaye Khana\"],\r\n      dinner: [\"Savour Foods\", \"Kabul Restaurant\", \"Dynasty Restaurant\"],\r\n      attractions: [\"Faisal Mosque\", \"Daman-e-Koh\", \"Pakistan Monument\"]\r\n    },\r\n    \"Lahore\": {\r\n      lunch: [\"Haveli Restaurant\", \"Andaaz Restaurant\", \"Spice Bazaar\"],\r\n      dinner: [\"Cooco's Den\", \"Village Restaurant\", \"Fujiyama Restaurant\"],\r\n      attractions: [\"Badshahi Mosque\", \"Lahore Fort\", \"Shalimar Gardens\"]\r\n    },\r\n    \"Karachi\": {\r\n      lunch: [\"BBQ Tonight\", \"Kolachi Restaurant\", \"Kababjees\"],\r\n      dinner: [\"Port Grand\", \"Okra Restaurant\", \"Cafe Flo\"],\r\n      attractions: [\"Clifton Beach\", \"Mazar-e-Quaid\", \"Mohatta Palace\"]\r\n    },\r\n    \"Murree\": {\r\n      lunch: [\"Gloria Jeans\", \"Lockwood Restaurant\", \"Red Onion\"],\r\n      dinner: [\"Usmania Restaurant\", \"Pines View\", \"Cecil Restaurant\"],\r\n      attractions: [\"Mall Road\", \"Patriata Chair Lift\", \"Kashmir Point\"]\r\n    },\r\n    \"Peshawar\": {\r\n      lunch: [\"Charsi Tikka\", \"Chief Burger\", \"Cafe Crunch\"],\r\n      dinner: [\"Shiraz Restaurant\", \"Namak Mandi\", \"Khyber Restaurant\"],\r\n      attractions: [\"Qissa Khwani Bazaar\", \"Peshawar Museum\", \"Bala Hisar Fort\"]\r\n    },\r\n    \"Skardu\": {\r\n      lunch: [\"Shangri-La Resort Restaurant\", \"K2 Restaurant\", \"Indus View Restaurant\"],\r\n      dinner: [\"Mashabrum Hotel Restaurant\", \"Baltistan Continental\", \"Snow Leopard Inn\"],\r\n      attractions: [\"Shangrila Resort\", \"Upper Kachura Lake\", \"Deosai National Park\"]\r\n    },\r\n    \"Hunza\": {\r\n      lunch: [\"Cafe de Hunza\", \"Hidden Paradise Restaurant\", \"Eagle's Nest\"],\r\n      dinner: [\"Hunza Serena Inn\", \"Karimabad Restaurant\", \"Panorama Restaurant\"],\r\n      attractions: [\"Baltit Fort\", \"Attabad Lake\", \"Passu Cones\"]\r\n    },\r\n    \"Quetta\": {\r\n      lunch: [\"Pishin Restaurant\", \"Lehri Sajji House\", \"Cafe Monal\"],\r\n      dinner: [\"Usmania Restaurant\", \"Lal Kabab\", \"Quetta Continental\"],\r\n      attractions: [\"Hanna Lake\", \"Hazarganji Chiltan National Park\", \"Quetta Geological Museum\"]\r\n    },\r\n    \"Multan\": {\r\n      lunch: [\"Chen One Restaurant\", \"Multan Khaas\", \"Bundu Khan\"],\r\n      dinner: [\"Savoury Restaurant\", \"Village Restaurant\", \"Multan Continental\"],\r\n      attractions: [\"Shrine of Shah Rukn-e-Alam\", \"Multan Fort\", \"Ghanta Ghar\"]\r\n    },\r\n    \"Faisalabad\": {\r\n      lunch: [\"La Atrium\", \"Lasania Restaurant\", \"Sandal Bar\"],\r\n      dinner: [\"Lasania Bar-B-Q\", \"Khan Baba Restaurant\", \"Pearl Continental\"],\r\n      attractions: [\"Clock Tower\", \"Jinnah Garden\", \"Lyallpur Museum\"]\r\n    },\r\n    // Default options for any city not in the list\r\n    \"Default\": {\r\n      lunch: [\"Local Restaurant 1\", \"Local Restaurant 2\", \"Local Restaurant 3\"],\r\n      dinner: [\"Evening Dining 1\", \"Evening Dining 2\", \"Evening Dining 3\"],\r\n      attractions: [\"Local Attraction 1\", \"Local Attraction 2\", \"Local Attraction 3\"]\r\n    }\r\n  };\r\n  \r\n  // Load or create trip data on component mount\r\n // Load or create trip data on component mount\r\nuseEffect(() => {\r\n  const loadOrCreateTrip = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const storedUser = localStorage.getItem('user');\r\n      if (!storedUser) {\r\n        console.error('User not logged in.');\r\n        return;\r\n      }\r\n      const user = JSON.parse(storedUser);\r\n      \r\n      //  Check for user email instead of _id\r\n      if (!user.email) {\r\n        console.error('User object is missing the email field.');\r\n        return;\r\n      }\r\n\r\n      if (customizationData) {\r\n        const { startingPoint, destination, startDate, endDate, guests } = customizationData;\r\n        \r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n        const timeDiff = end - start;\r\n        const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) + 1;\r\n        const numberOfDays = daysDiff > 0 ? daysDiff : 0;\r\n        \r\n        const existingTripId = sessionStorage.getItem('currentTripId');\r\n        \r\n        if (existingTripId) {\r\n          const response = await axios.get(`http://localhost:5000/api/trips/${existingTripId}`);\r\n          const tripData = response.data;\r\n          \r\n          setTripId(existingTripId);\r\n          setTripSummary({\r\n            startingPoint: tripData.startingPoint,\r\n            destination: tripData.destination,\r\n            startDate: tripData.startDate,\r\n            endDate: tripData.endDate,\r\n            guests: tripData.guests,\r\n            numberOfDays: tripData.numberOfDays\r\n          });\r\n          setTripDetails({\r\n            hotel: tripData.hotel || null,\r\n            transport: tripData.transport || null\r\n          });\r\n          setDayDetails(tripData.dayDetails || {});\r\n          \r\n        } else {\r\n          // ✅ Send userEmail instead of userId\r\n          const response = await axios.post('http://localhost:5000/api/trips', {\r\n            userEmail: user.email,\r\n            startingPoint,\r\n            destination,\r\n            startDate,\r\n            endDate,\r\n            guests,\r\n            numberOfDays,\r\n            hotel: null,\r\n            transport: null,\r\n            dayDetails: {},\r\n            status: 'draft'\r\n          });\r\n          \r\n          const newTripId = response.data.tripId;\r\n          setTripId(newTripId);\r\n          sessionStorage.setItem('currentTripId', newTripId);\r\n          \r\n          setTripSummary({\r\n            startingPoint,\r\n            destination,\r\n            startDate,\r\n            endDate,\r\n            guests,\r\n            numberOfDays\r\n          });\r\n        }\r\n      } else if (location.state?.tripId) {\r\n        const response = await axios.get(`http://localhost:5000/api/trips/${location.state.tripId}`);\r\n        const tripData = response.data;\r\n        \r\n        setTripId(tripData._id);\r\n        sessionStorage.setItem('currentTripId', tripData._id);\r\n        \r\n        setTripSummary({\r\n          startingPoint: tripData.startingPoint,\r\n          destination: tripData.destination,\r\n          startDate: tripData.startDate,\r\n          endDate: tripData.endDate,\r\n          guests: tripData.guests,\r\n          numberOfDays: tripData.numberOfDays\r\n        });\r\n        setTripDetails({\r\n          hotel: tripData.hotel || null,\r\n          transport: tripData.transport || null\r\n        });\r\n        setDayDetails(tripData.dayDetails || {});\r\n        \r\n      } else {\r\n        const existingTripId = sessionStorage.getItem('currentTripId');\r\n        \r\n        if (existingTripId) {\r\n          const response = await axios.get(`http://localhost:5000/api/trips/${existingTripId}`);\r\n          const tripData = response.data;\r\n          \r\n          setTripId(existingTripId);\r\n          setTripSummary({\r\n            startingPoint: tripData.startingPoint,\r\n            destination: tripData.destination,\r\n            startDate: tripData.startDate,\r\n            endDate: tripData.endDate,\r\n            guests: tripData.guests,\r\n            numberOfDays: tripData.numberOfDays\r\n          });\r\n          setTripDetails({\r\n            hotel: tripData.hotel || null,\r\n            transport: tripData.transport || null\r\n          });\r\n          setDayDetails(tripData.dayDetails || {});\r\n        } else {\r\n          navigate('/');\r\n          return;\r\n        }\r\n      }\r\n      \r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error loading trip data:\", error);\r\n      setError(\"Failed to load trip data. Please try again.\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  loadOrCreateTrip();\r\n}, [customizationData, location.state, navigate, location.pathname]);\r\n\r\n\r\n// Handle booking data updates (when returning from BookOption page) — UNCHANGED\r\nuseEffect(() => {\r\n  const updateBookingDetails = async () => {\r\n    if (bookingData && tripId) {\r\n      const { selectedHotel, selectedTransport } = bookingData;\r\n      \r\n      try {\r\n        const updatedDetails = {\r\n          ...tripDetails,\r\n          hotel: selectedHotel || tripDetails.hotel,\r\n          transport: selectedTransport || tripDetails.transport\r\n        };\r\n        \r\n        setTripDetails(updatedDetails);\r\n        \r\n        await axios.patch(`http://localhost:5000/api/trips/${tripId}`, {\r\n          hotel: selectedHotel || tripDetails.hotel,\r\n          transport: selectedTransport || tripDetails.transport\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error updating booking details:\", error);\r\n        setError(\"Failed to update booking details. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n  \r\n  updateBookingDetails();\r\n}, [bookingData, tripId]);\r\n\r\n  // Navigate to BookOption page\r\n  const handleEditTripDetails = () => {\r\n    navigate('/bookoption', { \r\n      state: { \r\n        customizationData: {\r\n          startingPoint: tripSummary.startingPoint,\r\n          destination: tripSummary.destination,\r\n          startDate: tripSummary.startDate,\r\n          endDate: tripSummary.endDate,\r\n          guests: tripSummary.guests\r\n        },\r\n        currentDetails: tripDetails,\r\n        tripId: tripId\r\n      } \r\n    });\r\n  };\r\n\r\n  // Handle change for lunch, dinner, and attractions\r\n  const handleDetailChange = async (day, type, value) => {\r\n    try {\r\n      // Update in state\r\n      const updatedDayDetails = {\r\n        ...dayDetails,\r\n        [day]: {\r\n          ...dayDetails[day],\r\n          [type]: value\r\n        }\r\n      };\r\n      \r\n      setDayDetails(updatedDayDetails);\r\n      \r\n      // Update in the database\r\n      await axios.patch(`http://localhost:5000/api/trips/${tripId}`, {\r\n        dayDetails: updatedDayDetails\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating day details:\", error);\r\n      setError(\"Failed to update day options. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Helper function to safely access nested properties\r\n  const getPropertyValue = (obj, property, fallback = 'N/A') => {\r\n    if (!obj) return fallback;\r\n    \r\n    const properties = property.split('.');\r\n    let value = obj;\r\n    \r\n    for (const prop of properties) {\r\n      if (value && typeof value === 'object' && prop in value) {\r\n        value = value[prop];\r\n      } else {\r\n        return fallback;\r\n      }\r\n    }\r\n    \r\n    return value || fallback;\r\n  };\r\n\r\n  // Format date to be more readable\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', { \r\n      weekday: 'short', \r\n      month: 'short', \r\n      day: 'numeric', \r\n      year: 'numeric' \r\n    });\r\n  };\r\n\r\n  // Get options for the current destination\r\n  const getOptionsForDestination = () => {\r\n    return cityOptions[tripSummary.destination] || cityOptions[\"Default\"];\r\n  };\r\n\r\n  // Calculate total cost including food and attractions\r\n  const calculateTotalCost = () => {\r\n    let totalCost = 0;\r\n    let hotelCost = 0;\r\n    let transportCost = 0;\r\n    let foodCost = 0;\r\n    let attractionsCost = 0;\r\n    \r\n    // Fixed costs for hotel and transport (per trip)\r\n    if (tripDetails.hotel && tripDetails.hotel.price) {\r\n      const price = parseFloat(tripDetails.hotel.price);\r\n      if (!isNaN(price)) {\r\n        hotelCost = price;\r\n        totalCost += price;\r\n      }\r\n    }\r\n    \r\n    if (tripDetails.transport && tripDetails.transport.price) {\r\n      const price = parseFloat(tripDetails.transport.price);\r\n      if (!isNaN(price)) {\r\n        transportCost = price;\r\n        totalCost += price;\r\n      }\r\n    }\r\n    \r\n    // Dynamic costs for food based on number of guests\r\n    let LUNCH_COST;\r\n    let DINNER_COST;\r\n    \r\n    // Set lunch and dinner costs based on number of guests\r\n    switch (tripSummary.guests) {\r\n      case 1:\r\n        LUNCH_COST = 1500; // PKR\r\n        DINNER_COST = 2000; // PKR\r\n        break;\r\n      case 2:\r\n        LUNCH_COST = 2000; // PKR\r\n        DINNER_COST = 3000; // PKR\r\n        break;\r\n      case 3:\r\n        LUNCH_COST = 3000; // PKR\r\n        DINNER_COST = 4000; // PKR\r\n        break;\r\n      default:\r\n        // Fallback for other guest numbers\r\n        LUNCH_COST = 1000; // PKR\r\n        DINNER_COST = 1500; // PKR\r\n    }\r\n    \r\n    const ATTRACTION_COST = 500; // PKR per person\r\n    \r\n    // Calculate daily food and attraction costs\r\n    Object.values(dayDetails).forEach(day => {\r\n      // Add lunch cost if selected\r\n      if (day.lunch) {\r\n        foodCost += LUNCH_COST;\r\n        totalCost += LUNCH_COST;\r\n      }\r\n      \r\n      // Add dinner cost if selected\r\n      if (day.dinner) {\r\n        foodCost += DINNER_COST;\r\n        totalCost += DINNER_COST;\r\n      }\r\n      \r\n      // Add attractions cost if selected (per person)\r\n      if (day.attraction) {\r\n        const attractionFee = ATTRACTION_COST * tripSummary.guests;\r\n        attractionsCost += attractionFee;\r\n        totalCost += attractionFee;\r\n      }\r\n    });\r\n    \r\n    return { totalCost, hotelCost, transportCost, foodCost, attractionsCost };\r\n  };\r\n\r\n  // Create an array of days\r\n  const getDaysArray = () => {\r\n    const days = [];\r\n    for (let i = 0; i < tripSummary.numberOfDays; i++) {\r\n      const dayNumber = i + 1;\r\n      const dayDate = new Date(tripSummary.startDate);\r\n      dayDate.setDate(dayDate.getDate() + i);\r\n      days.push({ dayNumber, dayDate });\r\n    }\r\n    return days;\r\n  };\r\n\r\n// Build itinerary day details for checkout\r\n// Build itinerary day details for checkout\r\nconst buildItineraryDays = () => {\r\n  return getDaysArray().map(({ dayNumber }) => {\r\n    const details = dayDetails[dayNumber] || {};\r\n    const dayTitle = `Day ${dayNumber}: ${getPropertyValue(tripDetails.transport, 'type', 'Trip')} + Hotel`;\r\n    \r\n    // Calculate day cost\r\n    let dayCost = 0;\r\n    \r\n    // Add hotel cost (divided by number of days)\r\n    if (tripDetails.hotel && tripDetails.hotel.price) {\r\n      const hotelPrice = parseFloat(tripDetails.hotel.price);\r\n      if (!isNaN(hotelPrice)) {\r\n        dayCost += hotelPrice / tripSummary.numberOfDays;\r\n      }\r\n    }\r\n    \r\n    // Add transport cost (divided by number of days)\r\n    if (tripDetails.transport && tripDetails.transport.price) {\r\n      const transportPrice = parseFloat(tripDetails.transport.price);\r\n      if (!isNaN(transportPrice)) {\r\n        dayCost += transportPrice / tripSummary.numberOfDays;\r\n      }\r\n    }\r\n    \r\n    // Get dynamic meal costs based on number of guests\r\n    let LUNCH_COST;\r\n    let DINNER_COST;\r\n    \r\n    // Set lunch and dinner costs based on number of guests\r\n    switch (tripSummary.guests) {\r\n      case 1:\r\n        LUNCH_COST = 1500; // PKR\r\n        DINNER_COST = 2000; // PKR\r\n        break;\r\n      case 2:\r\n        LUNCH_COST = 2000; // PKR\r\n        DINNER_COST = 3000; // PKR\r\n        break;\r\n      case 3:\r\n        LUNCH_COST = 3000; // PKR\r\n        DINNER_COST = 4000; // PKR\r\n        break;\r\n      default:\r\n        // Fallback for other guest numbers\r\n        LUNCH_COST = 1000; // PKR\r\n        DINNER_COST = 1500; // PKR\r\n    }\r\n    \r\n    const ATTRACTION_COST = 500; // PKR per person\r\n    \r\n    // Add food and attraction costs using the same dynamic pricing as calculateTotalCost\r\n    if (details.lunch) dayCost += LUNCH_COST;\r\n    if (details.dinner) dayCost += DINNER_COST;\r\n    if (details.attraction) dayCost += ATTRACTION_COST * tripSummary.guests;\r\n    \r\n    return {\r\n      dayNumber,\r\n      title: dayTitle,\r\n      transportMode: getPropertyValue(tripDetails.transport, 'type', 'Transport'),\r\n      hotel: getPropertyValue(tripDetails.hotel, 'name', 'Hotel'),\r\n      lunch: details.lunch || null,\r\n      dinner: details.dinner || null,\r\n      attraction: details.attraction || null,\r\n      totalCost: Math.round(dayCost) // Round to nearest integer\r\n    };\r\n  });\r\n};\r\n// Handle proceed to checkout\r\n// Handle proceed to checkout\r\nconst handleProceedToCheckout = async () => {\r\n  try {\r\n    const { totalCost } = calculateTotalCost();\r\n    \r\n    // Calculate user discount based on points (mock implementation)\r\n    // In a real app, you would fetch this from user data\r\n    const userPointsDiscount = 0; // Default no discount\r\n    \r\n    // Build the daily breakdown with corrected costs\r\n    const daysData = buildItineraryDays();\r\n    \r\n    // Create trip data object for checkout\r\n    const tripData = {\r\n      summary: {\r\n        from: tripSummary.startingPoint,\r\n        to: tripSummary.destination,\r\n        startDate: tripSummary.startDate,\r\n        endDate: tripSummary.endDate,\r\n        guests: tripSummary.guests,\r\n        duration: tripSummary.numberOfDays\r\n      },\r\n      days: daysData,\r\n      discountPercentage: userPointsDiscount,\r\n      totalCost // This should match what's calculated in the checkout page now\r\n    };\r\n    \r\n    // Verify the total cost matches the sum of all days' costs\r\n    const sumOfDayCosts = daysData.reduce((sum, day) => sum + day.totalCost, 0);\r\n    console.log(\"Sum of all day costs:\", sumOfDayCosts);\r\n    console.log(\"Total calculated cost:\", totalCost);\r\n    \r\n    // Update trip status to 'checkout' in database\r\n    await axios.patch(`http://localhost:5000/api/trips/${tripId}`, {\r\n      status: 'checkout',\r\n      checkoutData: tripData\r\n    });\r\n    \r\n    // Navigate to checkout page with tripId\r\n    navigate('/checkout', { \r\n      state: { \r\n        tripId: tripId \r\n      } \r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error proceeding to checkout:\", error);\r\n    setError(\"Failed to proceed to checkout. Please try again.\");\r\n  }\r\n};\r\n\r\n// Show loading spinner while data is being fetched\r\nif (isLoading) {\r\n  return (\r\n    <div className=\"customization-container\">\r\n      <Navbar />\r\n      <div className=\"content-wrapper loading-container\">\r\n        \r\n        <p>Loading your trip details...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Show error message if there was an error\r\nif (error) {\r\n  return (\r\n    <div className=\"customization-container\">\r\n      <Navbar />\r\n      <div className=\"content-wrapper error-container\">\r\n        <div className=\"error-message\">\r\n          <i className=\"fas fa-exclamation-circle\"></i>\r\n          <p>{error}</p>\r\n          <button className=\"retry-button\" onClick={() => window.location.reload()}>\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <div className=\"customization-container\">\r\n    <Navbar />\r\n    <div className=\"content-wrapper\">\r\n      <h2 className=\"customization-title\">Your Trip Details</h2>\r\n      \r\n      <div className=\"trip-summary\">\r\n        <h3>Trip Summary</h3>\r\n        <div className=\"summary-details\">\r\n          <div className=\"summary-col\">\r\n            <p><span>From:</span> {tripSummary.startingPoint}</p>\r\n            <p><span>To:</span> {tripSummary.destination}</p>\r\n            <p>\r\n              <span>Budget:</span> \r\n              {tripSummary.guests === 1 ? \" Economic\" : tripSummary.guests === 2 ? \" Normal\" : tripSummary.guests === 3 ? \" Luxury\" : \" N/A\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"summary-col\">\r\n            <p><span>Start:</span> {formatDate(tripSummary.startDate)}</p>\r\n            <p><span>End:</span> {formatDate(tripSummary.endDate)}</p>\r\n            <p><span>Duration:</span> {tripSummary.numberOfDays} {tripSummary.numberOfDays === 1 ? 'Day' : 'Days'}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Trip-level Accommodation & Transport */}\r\n      <div className=\"trip-accommodations\">\r\n        <div className=\"section-header\">\r\n          <h3>Accommodation & Transport</h3>\r\n          <button className=\"edit-button\" onClick={handleEditTripDetails}>\r\n            <i className=\"fas fa-edit\"></i> Edit\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"trip-details-container\">\r\n          <div className=\"trip-detail-card\">\r\n            <div className=\"detail-icon\">\r\n              <i className=\"fas fa-hotel\"></i>\r\n            </div>\r\n            <div className=\"detail-content\">\r\n              <h4>Hotel</h4>\r\n              {tripDetails.hotel ? (\r\n                <div className=\"detail-info\">\r\n                  <p className=\"detail-name\">{getPropertyValue(tripDetails.hotel, 'name')}</p>\r\n                  <p className=\"detail-price\">{getPropertyValue(tripDetails.hotel, 'price')} PKR</p>\r\n                  <p className=\"detail-rating\">Rating: {getPropertyValue(tripDetails.hotel, 'rating')}/5</p>\r\n                  {tripDetails.hotel.address && (\r\n                    <p className=\"detail-address\">{tripDetails.hotel.address}</p>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"no-detail-info\">\r\n                  <p>No hotel selected</p>\r\n                  <button className=\"small-add-button\" onClick={handleEditTripDetails}>\r\n                    Add Hotel\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"trip-detail-card\">\r\n            <div className=\"detail-icon\">\r\n              <i className=\"fas fa-bus\"></i>\r\n            </div>\r\n            <div className=\"detail-content\">\r\n              <h4>Transport</h4>\r\n              {tripDetails.transport ? (\r\n                <div className=\"detail-info\">\r\n                  <p className=\"detail-type\">{getPropertyValue(tripDetails.transport, 'type', 'Vehicle')}</p>\r\n                  <p className=\"detail-name\">{\r\n                    getPropertyValue(tripDetails.transport, 'name') || \r\n                    getPropertyValue(tripDetails.transport, 'car_name') || \r\n                    getPropertyValue(tripDetails.transport, 'bus_name') || \r\n                    getPropertyValue(tripDetails.transport, 'train_name')\r\n                  }</p>\r\n                  <p className=\"detail-price\">{getPropertyValue(tripDetails.transport, 'price')} PKR</p>\r\n                  <p className=\"detail-time\">\r\n                    {getPropertyValue(tripDetails.transport, 'departure_time')}\r\n                    {tripDetails.transport.arrival_time && ` - ${tripDetails.transport.arrival_time}`}\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"no-detail-info\">\r\n                  <p>No transport selected</p>\r\n                  <button className=\"small-add-button\" onClick={handleEditTripDetails}>\r\n                    Add Transport\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Day-by-Day Itinerary */}\r\n      {tripSummary.numberOfDays > 0 && (\r\n        <div className=\"days-section\">\r\n          <h3>Day-by-Day Itinerary</h3>\r\n          <div className=\"days-grid\">\r\n            {getDaysArray().map(({ dayNumber, dayDate }, index) => {\r\n              const details = dayDetails[dayNumber] || {};\r\n              const options = getOptionsForDestination();\r\n              \r\n              return (\r\n                <div key={index} className=\"day-card\">\r\n                  <div className=\"day-header\">\r\n                    <div className=\"day-number\">DAY {dayNumber}</div>\r\n                    <div className=\"day-date\">{formatDate(dayDate)}</div>\r\n                  </div>\r\n                  \r\n                  <div className=\"food-attractions-section\">\r\n                    <div className=\"select-container\">\r\n                      <label htmlFor={`lunch-day-${dayNumber}`}>Lunch:</label>\r\n                      <select\r\n                        id={`lunch-day-${dayNumber}`}\r\n                        value={details.lunch || ''}\r\n                        onChange={(e) => handleDetailChange(dayNumber, 'lunch', e.target.value)}\r\n                        className=\"custom-select\"\r\n                      >\r\n                        <option value=\"\">Select Lunch Place</option>\r\n                        {options.lunch.map((place, i) => (\r\n                          <option key={i} value={place}>{place}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    \r\n                    <div className=\"select-container\">\r\n                      <label htmlFor={`dinner-day-${dayNumber}`}>Dinner:</label>\r\n                      <select\r\n                        id={`dinner-day-${dayNumber}`}\r\n                        value={details.dinner || ''}\r\n                        onChange={(e) => handleDetailChange(dayNumber, 'dinner', e.target.value)}\r\n                        className=\"custom-select\"\r\n                      >\r\n                        <option value=\"\">Select Dinner Place</option>\r\n                        {options.dinner.map((place, i) => (\r\n                          <option key={i} value={place}>{place}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    \r\n                    <div className=\"select-container\">\r\n                      <label htmlFor={`attraction-day-${dayNumber}`}>Attraction:</label>\r\n                      <select\r\n                        id={`attraction-day-${dayNumber}`}\r\n                        value={details.attraction || ''}\r\n                        onChange={(e) => handleDetailChange(dayNumber, 'attraction', e.target.value)}\r\n                        className=\"custom-select\"\r\n                      >\r\n                        <option value=\"\">Select Attraction</option>\r\n                        {options.attractions.map((place, i) => (\r\n                          <option key={i} value={place}>{place}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    \r\n                    <div className=\"selected-options\">\r\n                      {details.lunch && (\r\n                        <div className=\"selected-item\">\r\n                          <span className=\"icon lunch-icon\"><i className=\"fas fa-utensils\"></i></span>\r\n                          <span className=\"item-name\">{details.lunch}</span>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {details.dinner && (\r\n                        <div className=\"selected-item\">\r\n                          <span className=\"icon dinner-icon\"><i className=\"fas fa-moon\"></i></span>\r\n                          <span className=\"item-name\">{details.dinner}</span>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {details.attraction && (\r\n                        <div className=\"selected-item\">\r\n                          <span className=\"icon attraction-icon\"><i className=\"fas fa-map-marker-alt\"></i></span>\r\n                          <span className=\"item-name\">{details.attraction}</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Calculate and display total trip cost */}\r\n      {(tripDetails.hotel || tripDetails.transport || Object.keys(dayDetails).length > 0) && (\r\n        <div className=\"trip-cost-summary\">\r\n          <h3>Total Trip Cost</h3>\r\n          {(() => {\r\n            const { totalCost, hotelCost, transportCost, foodCost, attractionsCost } = calculateTotalCost();\r\n            \r\n            return (\r\n              <div className=\"cost-breakdown\">\r\n                <div className=\"cost-grid\">\r\n                  <div className=\"cost-itemm\">\r\n                    <span className=\"cost-labell\">Hotel:</span>\r\n                    <span className=\"cost-value\">{hotelCost.toLocaleString()} PKR</span>\r\n                  </div>\r\n                  <div className=\"cost-itemm\">\r\n                    <span className=\"cost-labell\">Transport:</span>\r\n                    <span className=\"cost-value\">{transportCost.toLocaleString()} PKR</span>\r\n                  </div>\r\n                  <div className=\"cost-itemm\">\r\n                    <span className=\"cost-labell\">Food:</span>\r\n                    <span className=\"cost-value\">{foodCost.toLocaleString()} PKR</span>\r\n                  </div>\r\n                  <div className=\"cost-itemm\">\r\n                    <span className=\"cost-labell\">Attractions:</span>\r\n                    <span className=\"cost-value\">{attractionsCost.toLocaleString()} PKR</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"total-cost\">\r\n                  <span>Total Cost:</span> {totalCost.toLocaleString()} PKR\r\n                </div>\r\n              </div>\r\n            );\r\n          })()}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"action-buttons\">\r\n        <button className=\"back-button\" onClick={() => navigate(-1)}>\r\n          Back\r\n        </button>\r\n        <button \r\n          className=\"save-button\"\r\n          onClick={handleProceedToCheckout}\r\n          disabled={!tripDetails.hotel || !tripDetails.transport || tripSummary.numberOfDays === 0}\r\n        >\r\n          Pay\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default UserCustomization;","// import React, { useState, useEffect } from \"react\";\r\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n// import Navbar from \"../NavBar/Navbar\";\r\n// import transportImg from \"./images/transport.png\";\r\n// import hotelImg from \"./images/hotel.jpg\";\r\n// import airbnbImg from \"./images/airbnb.jpg\";\r\n// import \"./BookingOptions.css\";\r\n// import { FaEdit } from \"react-icons/fa\";\r\n\r\n// const BookingOptions = () => {\r\n//   // State for selected hotel and transport (load from localStorage)\r\n//   const [selectedHotel, setSelectedHotel] = useState(\r\n//     JSON.parse(localStorage.getItem(\"selectedHotel\")) || null\r\n//   );\r\n//   const [selectedTransport, setSelectedTransport] = useState(\r\n//     JSON.parse(localStorage.getItem(\"selectedTransport\")) || null\r\n//   );\r\n\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n//   const { tripDetails, dayIndex, dayData } = location.state || {};\r\n\r\n//   // Handle editing the hotel selection\r\n//   const handleEditHotel = () => {\r\n//     navigate(\"/BookHotel\");\r\n//   };\r\n\r\n//   // Confirm Booking and Send Data Back to UserCustomization\r\n//   const handleConfirmBooking = () => {\r\n//     const updatedDayData = {\r\n//       ...dayData,\r\n//       transport: selectedTransport,\r\n//       accommodation: selectedHotel,\r\n//       cost: calculateTotalPrice(),\r\n//     };\r\n\r\n//     const bookingData = {\r\n//       selectedHotel,\r\n//       selectedTransport,\r\n//       totalPrice: calculateTotalPrice(),\r\n//       tripDetails,\r\n//       dayIndex,\r\n//       updatedDayData,\r\n//     };\r\n\r\n//     // Navigate back to UserCustomization with all booking data\r\n//     navigate(\"/UserCustomization\", { state: { bookingData } });\r\n//   };\r\n\r\n//   // Update localStorage whenever hotel or transport is selected\r\n//   useEffect(() => {\r\n//     if (selectedHotel) {\r\n//       localStorage.setItem(\"selectedHotel\", JSON.stringify(selectedHotel));\r\n//     }\r\n//     if (selectedTransport) {\r\n//       localStorage.setItem(\"selectedTransport\", JSON.stringify(selectedTransport));\r\n//     }\r\n//   }, [selectedHotel, selectedTransport]);\r\n\r\n//   // Calculate total price\r\n//   const calculateTotalPrice = () => {\r\n//     let totalPrice = 0;\r\n//     if (selectedHotel?.price) totalPrice += parseFloat(selectedHotel.price) || 0;\r\n//     if (selectedTransport?.price) totalPrice += parseFloat(selectedTransport.price) || 0;\r\n//     return totalPrice;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <Navbar />\r\n\r\n//       {/* Back Arrow Icon */}\r\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/UserCustomization\")}>\r\n//         ←\r\n//       </div>\r\n\r\n//       {/* Centered Heading */}\r\n//       <div className=\"center-heading\">\r\n//       </div>\r\n\r\n//       {/* Booking Options */}\r\n//       <div className=\"booking-options\">\r\n//         <div className=\"option-card\">\r\n//           <h3>1. Customize Transport</h3>\r\n//           <img src={transportImg} alt=\"Transport\" />\r\n//           {selectedTransport ? (\r\n//             <div className=\"booked-transport\">\r\n//               <p><strong>Transport Selected:</strong> {selectedTransport.name || selectedTransport.car_name || selectedTransport.bus_name || selectedTransport.train_name}</p>\r\n//               <p>Departure: {selectedTransport.departure_time || \"N/A\"}</p>\r\n//               <p>Price: {selectedTransport.price ? `${selectedTransport.price} PKR` : \"Price Not Available\"}</p>\r\n//               <button className=\"edit-btn\" onClick={() => navigate(\"/BookTransport\")}>\r\n//                 <FaEdit /> Edit\r\n//               </button>\r\n//             </div>\r\n//           ) : (\r\n//             <Link to=\"/BookTransport\" className=\"explore-btn\">\r\n//               Explore\r\n//             </Link>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"option-card\">\r\n//           <h3>2. Book a Hotel</h3>\r\n//           <img src={hotelImg} alt=\"Hotel\" />\r\n//           {selectedHotel ? (\r\n//             <div className=\"booked-hotel\">\r\n//               <p><strong>Hotel Booked:</strong> {selectedHotel.name}</p>\r\n//               <p>Rating: {selectedHotel.rating} / 5</p>\r\n//               <p>Price: {selectedHotel.price} Rs per night</p>\r\n//               <p>Status: <span style={{ color: \"green\" }}>✔</span> Booked</p>\r\n//               <button className=\"edit-btn\" onClick={handleEditHotel}>\r\n//                 <FaEdit /> Edit\r\n//               </button>\r\n//             </div>\r\n//           ) : (\r\n//             <Link to=\"/BookHotel\" className=\"explore-btn\">\r\n//               Explore\r\n//             </Link>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"option-card\">\r\n//           <h3>3. Book an Airbnb</h3>\r\n//           <img src={airbnbImg} alt=\"Airbnb\" />\r\n//           <Link to=\"/BookAirbnb\" className=\"explore-btn\">\r\n//             Explore\r\n//           </Link>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Confirm Button */}\r\n//       <div className=\"confirm-btn-container\">\r\n//         <button className=\"confirm-btn\" onClick={handleConfirmBooking}>\r\n//           Confirm: {calculateTotalPrice()} PKR ➔\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingOptions;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport transportImg from \"./images/transport.png\";\r\nimport hotelImg from \"./images/hotel.jpg\";\r\nimport \"./BookingOptions.css\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nconst BookingOptions = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { customizationData, currentDetails, tripId } = location.state || {};\r\n  \r\n  // Initialize state with current details from UserCustomization if available\r\n  const [selectedHotel, setSelectedHotel] = useState(currentDetails?.hotel || null);\r\n  const [selectedTransport, setSelectedTransport] = useState(currentDetails?.transport || null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Validate that we have trip data\r\n  useEffect(() => {\r\n    if (!customizationData && !tripId) {\r\n      setError(\"Missing trip information. Please go back and try again.\");\r\n    } else {\r\n      setError(\"\");\r\n    }\r\n  }, [customizationData, tripId]);\r\n\r\n  // Handle booking transport\r\n  const handleBookTransport = () => {\r\n    if (!customizationData && !tripId) {\r\n      setError(\"Cannot proceed without trip information.\");\r\n      return;\r\n    }\r\n    \r\n    navigate(\"/BookTransport\", { \r\n      state: { \r\n        customizationData,\r\n        currentTransport: selectedTransport,\r\n        tripId,\r\n        returnTo: '/bookoption'\r\n      } \r\n    });\r\n  };\r\n\r\n  // Handle booking hotel\r\n  const handleBookHotel = () => {\r\n    if (!customizationData && !tripId) {\r\n      setError(\"Cannot proceed without trip information.\");\r\n      return;\r\n    }\r\n    \r\n    navigate(\"/BookHotel\", { \r\n      state: { \r\n        customizationData,\r\n        currentHotel: selectedHotel,\r\n        tripId,\r\n        returnTo: '/bookoption'\r\n      } \r\n    });\r\n  };\r\n\r\n  // Handle edit transport selection\r\n  const handleEditTransport = () => {\r\n    handleBookTransport();\r\n  };\r\n\r\n  // Handle edit hotel selection\r\n  const handleEditHotel = () => {\r\n    handleBookHotel();\r\n  };\r\n\r\n  // Calculate total price\r\n  const calculateTotalPrice = () => {\r\n    let totalPrice = 0;\r\n    \r\n    if (selectedHotel?.price) {\r\n      const hotelPrice = parseFloat(selectedHotel.price);\r\n      if (!isNaN(hotelPrice)) {\r\n        totalPrice += hotelPrice;\r\n      }\r\n    }\r\n    \r\n    if (selectedTransport?.price) {\r\n      const transportPrice = parseFloat(selectedTransport.price);\r\n      if (!isNaN(transportPrice)) {\r\n        totalPrice += transportPrice;\r\n      }\r\n    }\r\n    \r\n    return totalPrice.toLocaleString();\r\n  };\r\n\r\n  // Listen for incoming data from child components\r\n  useEffect(() => {\r\n    if (location.state?.selectedHotel) {\r\n      setSelectedHotel(location.state.selectedHotel);\r\n    }\r\n    \r\n    if (location.state?.selectedTransport) {\r\n      setSelectedTransport(location.state.selectedTransport);\r\n    }\r\n  }, [location.state]);\r\n\r\n  // Confirm selections and navigate back to UserCustomization\r\n  const handleConfirmBooking = () => {\r\n    if (!selectedHotel && !selectedTransport) {\r\n      setError(\"Please select at least one hotel or transport option before confirming.\");\r\n      return;\r\n    }\r\n    \r\n    navigate(\"/UserCustomization\", { \r\n      state: { \r\n        customizationData,\r\n        bookingData: {\r\n          selectedHotel,\r\n          selectedTransport\r\n        },\r\n        tripId\r\n      } \r\n    });\r\n  };\r\n\r\n  // Go back to UserCustomization without changes\r\n  const handleGoBack = () => {\r\n    navigate(\"/UserCustomization\", { state: { tripId } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n\r\n      {/* Back Arrow Icon */}\r\n      <div className=\"back-arrow\" onClick={handleGoBack}>\r\n        ←\r\n      </div>\r\n\r\n      {/* Centered Heading */}\r\n      <div className=\"center-heading\">\r\n        <h2>Book Your Trip Options</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n      </div>\r\n\r\n      {/* Booking Options */}\r\n      <div className=\"booking-options\">\r\n        <div className=\"option-card\">\r\n          <h3>1. Select Transport</h3>\r\n          <img src={transportImg} alt=\"Transport\" />\r\n          {selectedTransport ? (\r\n            <div className=\"booked-transport\">\r\n              <p><strong>Transport Selected:</strong> {selectedTransport.type || \"Vehicle\"}</p>\r\n              <p>Name: {selectedTransport.name || \r\n                         selectedTransport.car_name || \r\n                         selectedTransport.bus_name || \r\n                         selectedTransport.train_name || \r\n                         \"N/A\"}</p>\r\n              <p>Departure: {selectedTransport.departure_time || \"N/A\"}</p>\r\n              <p>Price: {selectedTransport.price ? `${selectedTransport.price} PKR` : \"Price Not Available\"}</p>\r\n              <button className=\"edit-btn\" onClick={handleEditTransport}>\r\n                <FaEdit /> Edit Selection\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <button onClick={handleBookTransport} className=\"explore-btnnn\">\r\n              Choose Transport\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"option-card\">\r\n          <h3>2. Select Hotel</h3>\r\n          <img src={hotelImg} alt=\"Hotel\" />\r\n          {selectedHotel ? (\r\n            <div className=\"booked-hotel\">\r\n              <p><strong>Hotel Selected:</strong> {selectedHotel.name}</p>\r\n              <p>Rating: {selectedHotel.rating || \"N/A\"} / 5</p>\r\n              <p>Price: {selectedHotel.price ? `${selectedHotel.price} PKR` : \"Price Not Available\"}</p>\r\n              <p>Status: <span style={{ color: \"green\" }}>✔</span> Selected</p>\r\n              <button className=\"edit-btn\" onClick={handleEditHotel}>\r\n                <FaEdit /> Edit Selection\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <button onClick={handleBookHotel} className=\"explore-btnnn\">\r\n              Choose Hotel\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Confirm Button */}\r\n      <div className=\"confirm-btn-container\">\r\n        <button \r\n          className=\"confirm-bt\" \r\n          onClick={handleConfirmBooking}\r\n          disabled={!selectedHotel && !selectedTransport}\r\n        >\r\n          Confirm: {calculateTotalPrice()} PKR\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingOptions;\r\n\r\n\r\n\r\n","// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate, useLocation } from \"react-router-dom\";\r\n// import hotelData from \"./images/clean_hotel_data.json\";\r\n// import \"./BookHotel.css\";\r\n// import defaultImage from \"./images/hotel.jpg\";\r\n// import Navbar from \"../NavBar/Navbar\";\r\n\r\n// const ConfirmationModal = ({ hotel, onConfirm, onCancel }) => {\r\n//   return (\r\n//     <div className=\"confirmation-modal\">\r\n//       <div className=\"modal-content\">\r\n//         <h2>Confirm Booking</h2>\r\n//         <p>Are you sure you want to book <strong>{hotel.name}</strong>?</p>\r\n//         <p><strong>Price:</strong> {hotel.price} PKR per night</p>\r\n//         <div className=\"modal-buttons\">\r\n//           <button className=\"confirm-btnnn\" onClick={onConfirm}>Yes, Book Now</button>\r\n//           <button className=\"cancel-btnnn\" onClick={onCancel}>Cancel</button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const BookHotel = () => {\r\n//   const [hotels, setHotels] = useState([]);\r\n//   const [selectedHotel, setSelectedHotel] = useState(null);\r\n//   const [showConfirmation, setShowConfirmation] = useState(false);\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n//   const { customizationData, currentDetails, tripId } = location.state || {};\r\n\r\n//   // Get destination city from customizationData\r\n//   const destinationCity = customizationData?.destination || \"\";\r\n\r\n//   useEffect(() => {\r\n//     // Filter hotels by destination city and add ratings\r\n//     const filteredHotels = hotelData\r\n//       .filter(hotel => hotel.city && hotel.city.toLowerCase() === destinationCity.toLowerCase())\r\n//       .map(hotel => ({\r\n//         ...hotel,\r\n//         rating: hotel.rating || (Math.random() * (5 - 4) + 4).toFixed(1), // Generate high ratings between 4-5\r\n//       }))\r\n//       .sort((a, b) => b.rating - a.rating) // Sort by highest rating\r\n//       .slice(0, 5); // Take only top 5 hotels\r\n\r\n//     setHotels(filteredHotels);\r\n//   }, [destinationCity]);\r\n\r\n//   const handleHotelSelect = (hotel) => {\r\n//     setSelectedHotel(hotel);\r\n//   };\r\n\r\n//   const handleClosePopUp = () => {\r\n//     setSelectedHotel(null);\r\n//   };\r\n\r\n//   const handleBooking = () => {\r\n//     setShowConfirmation(true);\r\n//   };\r\n\r\n//   const confirmBooking = () => {\r\n//     setShowConfirmation(false);\r\n    \r\n//     // Navigate back to booking options with the selected hotel\r\n//     navigate(\"/bookoption\", {\r\n//       state: {\r\n//         customizationData,\r\n//         currentDetails: { \r\n//           ...currentDetails,\r\n//           hotel: selectedHotel\r\n//         },\r\n//         tripId\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"book-hotel-container\">\r\n//       <Navbar />\r\n \r\n\r\n//       <div className=\"trans\">\r\n//         <h2>Book a Hotel in {destinationCity}</h2>\r\n\r\n//         <div className=\"hotel-list\">\r\n//           {hotels.length > 0 ? (\r\n//             hotels.map((hotel) => (\r\n//               <div className=\"hotel-card\" key={hotel.id} onClick={() => handleHotelSelect(hotel)}>\r\n//                 {/* <img src={(hotel.images && hotel.images[0]) || defaultImage} alt={hotel.name} className=\"hotel-image\" /> */}\r\n//                 <h3>{hotel.name}</h3>\r\n//                 <div className=\"hotel-info\">\r\n//                   <p><span className=\"rating-stars\">{'★'.repeat(Math.round(hotel.rating))}</span> {hotel.rating}/5</p>\r\n//                   <p>{hotel.price} PKR per night</p>\r\n//                   <p className=\"hotel-location\">{hotel.city}</p>\r\n//                 </div>\r\n//                 <button className=\"book-btn\">View Details</button>\r\n//               </div>\r\n//             ))\r\n//           ) : (\r\n//             <div className=\"no-hotels\">\r\n//               <p>No hotels found in {destinationCity}. Please try another destination.</p>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n\r\n//         {selectedHotel && (\r\n//           <div className=\"hotel-popup\">\r\n//             <div className=\"popup-content\">\r\n//               <button className=\"clos-btn\" onClick={handleClosePopUp}>&times;</button>\r\n//               <h2>{selectedHotel.name}</h2>\r\n//               <div className=\"popup-images\">\r\n//                 {selectedHotel.images && selectedHotel.images.slice(0, 3).map((img, index) => (\r\n//                   <img key={index} src={img || defaultImage} alt={`Hotel ${index + 1}`} className=\"popup-image\" />\r\n//                 ))}\r\n//                 {(!selectedHotel.images || selectedHotel.images.length === 0) && (\r\n//                   <img src={defaultImage} alt=\"Default Hotel\" className=\"popup-image\" />\r\n//                 )}\r\n//               </div>\r\n//               <div className=\"hotel-details\">\r\n//                 <p><strong>Rating:</strong> <span className=\"rating-stars\">{'★'.repeat(Math.round(selectedHotel.rating))}</span> {selectedHotel.rating}/5</p>\r\n//                 <p><strong>Price:</strong> {selectedHotel.price} PKR per night</p>\r\n//                 <p><strong>Location:</strong> {selectedHotel.city}</p>\r\n//                 <p><strong>Address:</strong> {selectedHotel.address || \"\"}</p>\r\n//                 <p><strong>Description:</strong> {selectedHotel.description || \"Luxury hotel with modern amenities and excellent service.\"}</p>\r\n//                 <p><strong>Facilities:</strong> {selectedHotel.facilities ? selectedHotel.facilities.join(\", \") : \"WiFi, AC, Swimming Pool, Gym, Restaurant, Room Service\"}</p>\r\n//               </div>\r\n//               <button className=\"book-btn\" onClick={handleBooking}>Book Now</button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {showConfirmation && selectedHotel && (\r\n//           <ConfirmationModal\r\n//             hotel={selectedHotel}\r\n//             onConfirm={confirmBooking}\r\n//             onCancel={() => setShowConfirmation(false)}\r\n//           />\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookHotel;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport hotelData from \"./images/clean_hotel_data.json\";\r\nimport \"./BookHotel.css\";\r\nimport defaultImage from \"./images/hotel.jpg\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\n\r\nconst BhConfirmationModal = ({ hotel, onConfirm, onCancel }) => {\r\n  return (\r\n    <div className=\"bh-confirmation-modal\">\r\n      <div className=\"bh-modal-content\">\r\n        <h2 className=\"bh-modal-title\">Confirm Booking</h2>\r\n        <p className=\"bh-modal-text\">Are you sure you want to book <strong>{hotel.name}</strong>?</p>\r\n        <p className=\"bh-modal-price\"><strong>Price:</strong> {hotel.price} PKR per night</p>\r\n        <div className=\"bh-modal-buttons\">\r\n          <button className=\"bh-confirm-booking-btn\" onClick={onConfirm}>Yes, Book Now</button>\r\n          <button className=\"bh-cancel-booking-btn\" onClick={onCancel}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BhHotelCard = ({ hotel, onClick }) => {\r\n  return (\r\n    <div className=\"bh-hotel-card\" onClick={onClick}>\r\n      <div className=\"bh-hotel-image-container\">\r\n        <img \r\n          src={(hotel.images && hotel.images[0]) || defaultImage} \r\n          alt={hotel.name} \r\n          className=\"bh-hotel-image\" \r\n        />\r\n      </div>\r\n      <div className=\"bh-hotel-details\">\r\n        <h3 className=\"bh-hotel-name\">{hotel.name}</h3>\r\n        <div className=\"bh-hotel-info\">\r\n          <p className=\"bh-hotel-rating\">\r\n            <span className=\"bh-rating-stars\">{'★'.repeat(Math.round(hotel.rating))}</span> \r\n            {hotel.rating}/5\r\n          </p>\r\n          <p className=\"bh-hotel-price\">{hotel.price} PKR per night</p>\r\n          <p className=\"bh-hotel-location\">\r\n            <span className=\"bh-location-icon\">📍</span> {hotel.city}\r\n          </p>\r\n        </div>\r\n        <button className=\"bh-view-details-btn\">View Details</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BhHotelPopup = ({ hotel, onClose, onBookNow }) => {\r\n  return (\r\n    <div className=\"bh-hotel-popup\">\r\n      <div className=\"bh-popup-content\">\r\n        <button className=\"bh-close-popup-btn\" onClick={onClose}>&times;</button>\r\n        <h2 className=\"bh-popup-title\">{hotel.name}</h2>\r\n        \r\n        <div className=\"bh-popup-image-container\">\r\n          <img \r\n            src={(hotel.images && hotel.images[0]) || defaultImage} \r\n            alt={hotel.name} \r\n            className=\"bh-popup-image\" \r\n          />\r\n        </div>\r\n        \r\n        <div className=\"bh-hotel-full-details\">\r\n          <div className=\"bh-detail-item\">\r\n            <span className=\"bh-detail-label\">Rating</span>\r\n            <div className=\"bh-detail-value\">\r\n              <span className=\"bh-rating-stars\">{'★'.repeat(Math.round(hotel.rating))}</span> \r\n              {hotel.rating}/5\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bh-detail-item\">\r\n            <span className=\"bh-detail-label\">Price</span>\r\n            <div className=\"bh-detail-value\">{hotel.price} PKR per night</div>\r\n          </div>\r\n          \r\n          <div className=\"bh-detail-item\">\r\n            <span className=\"bh-detail-label\">Location</span>\r\n            <div className=\"bh-detail-value\">{hotel.city}</div>\r\n          </div>\r\n          \r\n          <div className=\"bh-detail-item\">\r\n            <span className=\"bh-detail-label\">Address</span>\r\n            <div className=\"bh-detail-value\">{hotel.address || \"Address information not available\"}</div>\r\n          </div>\r\n          \r\n          <div className=\"bh-detail-item\" style={{ gridColumn: \"1 / -1\" }}>\r\n            <span className=\"bh-detail-label\">Description</span>\r\n            <div className=\"bh-detail-value\">\r\n              {hotel.description || \"Luxury hotel with modern amenities and excellent service.\"}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bh-detail-item\" style={{ gridColumn: \"1 / -1\" }}>\r\n            <span className=\"bh-detail-label\">Facilities</span>\r\n            <div className=\"bh-facilities-list\">\r\n              {(hotel.facilities || [\"WiFi\", \"AC\", \"Swimming Pool\", \"Gym\", \"Restaurant\", \"Room Service\"])\r\n                .map((facility, index) => (\r\n                  <span key={index} className=\"bh-facility-tag\">{facility}</span>\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <button className=\"bh-book-now-btn\" onClick={onBookNow}>Book Now</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BookHotel = () => {\r\n  const [hotels, setHotels] = useState([]);\r\n  const [selectedHotel, setSelectedHotel] = useState(null);\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { customizationData, currentDetails, tripId } = location.state || {};\r\n\r\n  // Get destination city from customizationData\r\n  const destinationCity = customizationData?.destination || \"\";\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    // Filter hotels by destination city and add ratings\r\n    const filteredHotels = hotelData\r\n      .filter(hotel => hotel.city && hotel.city.toLowerCase() === destinationCity.toLowerCase())\r\n      .map(hotel => ({\r\n        ...hotel,\r\n        rating: hotel.rating || (Math.random() * (5 - 4) + 4).toFixed(1), // Generate high ratings between 4-5\r\n      }))\r\n      .sort((a, b) => b.rating - a.rating) // Sort by highest rating\r\n      .slice(0, 5); // Take only top 5 hotels\r\n\r\n    setHotels(filteredHotels);\r\n    setIsLoading(false);\r\n  }, [destinationCity]);\r\n\r\n  const handleHotelSelect = (hotel) => {\r\n    setSelectedHotel(hotel);\r\n  };\r\n\r\n  const handleClosePopUp = () => {\r\n    setSelectedHotel(null);\r\n  };\r\n\r\n  const handleBooking = () => {\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n  const confirmBooking = () => {\r\n    setShowConfirmation(false);\r\n    \r\n    // Navigate back to booking options with the selected hotel\r\n    navigate(\"/bookoption\", {\r\n      state: {\r\n        customizationData,\r\n        currentDetails: { \r\n          ...currentDetails,\r\n          hotel: selectedHotel\r\n        },\r\n        tripId\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bh-container\">\r\n      <Navbar />\r\n      \r\n      <div className=\"bh-back-button\" onClick={handleGoBack}>\r\n        &#8592;\r\n      </div>\r\n\r\n      <h1 className=\"bh-page-title\">\r\n        Book a Hotel in <span className=\"bh-destination\">{destinationCity}</span>\r\n      </h1>\r\n\r\n      {isLoading ? (\r\n        <div className=\"bh-loading\">Loading hotels...</div>\r\n      ) : (\r\n        <div className=\"bh-hotel-grid\">\r\n          {hotels.length > 0 ? (\r\n            hotels.map((hotel) => (\r\n              <BhHotelCard \r\n                key={hotel.id} \r\n                hotel={hotel} \r\n                onClick={() => handleHotelSelect(hotel)} \r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"bh-no-hotels\">\r\n              <p>No hotels found in {destinationCity}. Please try another destination.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {selectedHotel && (\r\n        <BhHotelPopup \r\n          hotel={selectedHotel} \r\n          onClose={handleClosePopUp} \r\n          onBookNow={handleBooking} \r\n        />\r\n      )}\r\n\r\n      {showConfirmation && selectedHotel && (\r\n        <BhConfirmationModal\r\n          hotel={selectedHotel}\r\n          onConfirm={confirmBooking}\r\n          onCancel={() => setShowConfirmation(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookHotel;","// import React, { useState, useEffect } from \"react\";\r\n// import Papa from \"papaparse\";\r\n// import \"./BookTransport.css\"; \r\n// import Navbar from \"../NavBar/Navbar\";\r\n// import { useNavigate } from \"react-router-dom\";  // Import useNavigate\r\n\r\n// const ConfirmationModal = ({ selectedItem, onConfirm, onCancel }) => {\r\n//   if (!selectedItem) return null;\r\n\r\n//   return (\r\n//     <div className=\"confirmation-modal\">\r\n//       <div className=\"modal-content\">\r\n//         <h2>Confirm Booking</h2>\r\n//         <p>Are you sure you want to book <strong>{selectedItem.name || selectedItem.car_name || selectedItem.bus_name}</strong>?</p>\r\n//         <p><strong>Price:</strong> {selectedItem.price || selectedItem.price_per_day} Rs</p>\r\n//         <div className=\"modal-buttons\">\r\n//           <button className=\"confirm-btn\" onClick={onConfirm}>Yes, Book Now</button>\r\n//           <button className=\"cancel-btn\" onClick={onCancel}>Cancel</button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const BookTransport = () => {\r\n//   const [cars, setCars] = useState([]);\r\n//   const [buses, setBuses] = useState([]);\r\n//   const [trains, setTrains] = useState([]);\r\n//   const [selectedItem, setSelectedItem] = useState(null);\r\n//   const [isBooking, setIsBooking] = useState(false);\r\n//   const [showConfirmPopup, setShowConfirmPopup] = useState(false);  // State for controlling the confirmation popup\r\n//   const [notification, setNotification] = useState(\"\"); // State for managing notifications\r\n//   const [filter, setFilter] = useState({\r\n//     name: \"\",\r\n//     price: \"\",\r\n//     city: \"\"\r\n//   });\r\n//   const [sortBy, setSortBy] = useState(\"price\");  // Default sorting by price\r\n//   const navigate = useNavigate();  // useNavigate hook for navigation\r\n//   const [showNotification, setShowNotification] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const carResponse = await fetch(\"/Cleaned_Cars.csv\");\r\n//         const busResponse = await fetch(\"/Cleaned_busses.csv\");\r\n//         const trainResponse = await fetch(\"/Cleaned_trains.csv\");\r\n  \r\n//         const carText = await carResponse.text();\r\n//         const busText = await busResponse.text();\r\n//         const trainText = await trainResponse.text();\r\n  \r\n//         Papa.parse(carText, {\r\n//           header: true,\r\n//           complete: (result) => {\r\n//             console.log(\"Cars data:\", result.data);\r\n//             setCars(result.data);\r\n//           },\r\n//         });\r\n  \r\n//         Papa.parse(busText, {\r\n//           header: true,\r\n//           complete: (result) => setBuses(result.data),\r\n//         });\r\n  \r\n//         Papa.parse(trainText, {\r\n//           header: true,\r\n//           complete: (result) => {\r\n//             setTrains(result.data);\r\n//           },\r\n\r\n//         });\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n  \r\n//     fetchData();\r\n//   }, []);  \r\n\r\n//     // Function to get the image path based on transport type\r\n//     const getImagePath = (name, type) => {\r\n//       const nameLower = name ? name.toLowerCase() : \"\";\r\n    \r\n//       if (type === \"bus\") {\r\n//         const busImages = [\r\n//           \"akmovers\", \"daewoo\", \"e.k.movers\", \"fmtravels\", \"mashabrum\",\r\n//           \"natco\", \"qconnect\", \"roadmaster\", \"skyways\", \"warraich\"\r\n//         ];\r\n//         const matchedBus = busImages.find(img => nameLower.includes(img));\r\n//         return matchedBus ? `/images/${matchedBus}.jpg` : \"/images/bus.jpg\";\r\n//       }\r\n    \r\n//       if (type === \"train\") {\r\n//         const trainImages = [\"fareed_express\", \"mehr_express\", \"rawalpindi_express\", \"subak_karam\"];\r\n//         const matchedTrain = trainImages.find(img => nameLower.includes(img)); \r\n//         return matchedTrain ? `/images_trains/${matchedTrain}.jpg` : \"/images_trains/rawalpindi_express.jpg\";\r\n//       }\r\n    \r\n//       if (type === \"car\") {\r\n//         const carImages = [\r\n//           \"karvaan\", \"brv\", \"city\", \"prado\",\r\n//           \"wagon r\", \"fielder\",\r\n//           \"fortuner\", \"corolla\", \"hiace\",\r\n//           \"yaris\", \"voxy\", \"civic\", \"land cruiser\", \"alto\",\r\n//           \"cultus\", \"coaster\", \"revo\"\r\n//         ];\r\n//         const matchedCar = carImages.find(img => nameLower.includes(img));\r\n//         return matchedCar ? `/images_cars/${matchedCar}.jpg` : \"/images_cars/car.jpg\";\r\n//       }\r\n    \r\n//       return \"\";\r\n//     };\r\n    \r\n\r\n//   // Modify the handleBooking to show the popup with the selected item\r\n//   const handleBooking = (item) => {\r\n//     setSelectedItem(item);  // Set selected item for booking\r\n//     setShowConfirmPopup(true);  // Show the confirmation popup\r\n//   };\r\n\r\n//   const confirmBooking = () => {\r\n//     setShowConfirmPopup(false);\r\n//     localStorage.setItem(\"selectedTransport\", JSON.stringify(selectedItem));\r\n  \r\n//     setNotification(`✅ You have successfully booked ${selectedItem.name || selectedItem.car_name || selectedItem.bus_name}`);\r\n//     setShowNotification(true);\r\n  \r\n//     // Ensure the notification is displayed before redirecting\r\n//     setTimeout(() => {\r\n//       setShowNotification(false);\r\n//       navigate(\"/bookoption\");\r\n//     }, 1000); // Increased timeout to 1 seconds for better visibility\r\n//   };\r\n  \r\n\r\n//   const cancelBooking = () => {\r\n//     setShowConfirmPopup(false);\r\n//     setSelectedItem(null);\r\n//   };\r\n\r\n//   const handleFilterChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFilter((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleSortChange = (e) => {\r\n//     setSortBy(e.target.value);\r\n//   };\r\n\r\n//   // Filter and sort transport items\r\n//   const filteredCars = cars.filter((car) => {\r\n//     return (\r\n//       (car.car_name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\r\n//       (car.price_per_day >= filter.price || !filter.price)\r\n//     );\r\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price_per_day - b.price_per_day : a.car_name.localeCompare(b.car_name)));\r\n\r\n//   const filteredBuses = buses.filter((bus) => {\r\n//     return (\r\n//       (bus.name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\r\n//       (bus.price >= filter.price || !filter.price) &&\r\n//       (bus.starting?.toLowerCase().includes(filter.city.toLowerCase()) || !filter.city)\r\n//     );\r\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price - b.price : a.name.localeCompare(b.name)));\r\n\r\n//   const filteredTrains = trains.filter((train) => {\r\n//     return (\r\n//       (train.name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\r\n//       (train.price >= filter.price || !filter.price) &&\r\n//       (train.starting?.toLowerCase().includes(filter.city.toLowerCase()) || !filter.city)\r\n//     );\r\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price - b.price : a.name.localeCompare(b.name)));\r\n  \r\n\r\n//   return (\r\n//     <div className=\"book-transport\">\r\n//       <Navbar />\r\n//       {/* Back Arrow Icon */}\r\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/bookoption\")}>\r\n//         ←\r\n//       </div>\r\n      \r\n//       <div className=\"trans\">\r\n//         <h2>Customize Your Transport</h2>\r\n\r\n//         {/* Filter and Sort */}\r\n//         <div className=\"filters\">\r\n//           <input \r\n//             type=\"text\" \r\n//             name=\"name\" \r\n//             placeholder=\"Filter by Name\" \r\n//             value={filter.name} \r\n//             onChange={handleFilterChange}\r\n//           />\r\n//           <input \r\n//             type=\"number\" \r\n//             name=\"price\" \r\n//             placeholder=\"Filter by Price\" \r\n//             value={filter.price} \r\n//             onChange={handleFilterChange}\r\n//           />\r\n//           <input \r\n//             type=\"text\" \r\n//             name=\"city\" \r\n//             placeholder=\"Filter by City\" \r\n//             value={filter.city} \r\n//             onChange={handleFilterChange}\r\n//           />\r\n//           <select onChange={handleSortChange} value={sortBy}>\r\n//             <option value=\"price\">Sort by Price</option>\r\n//             <option value=\"name\">Sort by Name</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Cars Section with Carousel */}\r\n//         <div className=\"transport-section\">\r\n//         <h3>Cars</h3>\r\n//         <div className=\"carousel\">\r\n//           {filteredCars.length > 0 ? (\r\n//               filteredCars.map((car, index) => {\r\n//               console.log(\"Rendering Car:\", car);\r\n//               const carImage = getImagePath(car?.car_name || car?.brand_Name, \"car\");\r\n//               console.log(\"Filtered Cars:\", filteredCars);\r\n//               console.log(\"Car image path:\", carImage); // Debugging log\r\n//               console.log(\"Car Object Keys:\", Object.keys(filteredCars[0] || {}));\r\n//               return (\r\n//                 <div\r\n//                   key={index}\r\n//                   className=\"carousel-item\"\r\n//                   onClick={() => handleBooking(car)} // Handle booking for each car\r\n//                 >\r\n//                   <img src={carImage} alt={car?.car_name || \"Car\"} className=\"transport-image\" />\r\n//                   <p>\r\n//                     {car?.brand_Name || \"Unknown Brand\"} {car?.car_name || \"Unknown Car\"} -{\" \"}\r\n//                     {car?.price_per_day || \"Price Not Available\"} per day\r\n//                   </p>\r\n//                   <p>\r\n//                     {car?.doors || \"N/A\"} Doors, {car?.passengers || \"N/A\"} Passengers,{\" \"}\r\n//                     {car?.transmission || \"N/A\"} Transmission,{\" \"}\r\n//                     {car?.ac ? \"AC Available\" : \"No AC\"}\r\n//                   </p>\r\n//                   <button>Book</button>\r\n//                 </div>\r\n//               );\r\n//             })\r\n//           ) : (\r\n//             <p>Loading Cars...</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n\r\n//         {/* Buses Section */}\r\n//         <div className=\"transport-section\">\r\n//           <h3>Buses</h3>\r\n//           {filteredBuses.length > 0 ? (\r\n//             filteredBuses.map((bus, index) => {\r\n//               const busImage = getImagePath(bus.name, \"bus\");\r\n//               return (\r\n//                 <div key={index} className=\"transport-item\" onClick={() => handleBooking(bus)}>  \r\n//                   <img src={busImage} alt={bus.name} className=\"transport-image\" />\r\n//                   <p>\r\n//                     {bus.name} - {bus.departure_time} - {bus.price} PKR\r\n//                   </p>\r\n//                   <p>\r\n//                     From: {bus.starting || \"Unknown\"} To: {bus.ending || \"Unknown\"}\r\n//                   </p>\r\n//                   <button>Book</button>\r\n//                 </div>\r\n//               );\r\n//             })\r\n//           ) : (\r\n//             <p>Loading buses...</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Trains Section */}\r\n//         <div className=\"transport-section\">\r\n//           <h3>Trains</h3>\r\n//           {filteredTrains.length > 0 ? (\r\n//             filteredTrains.map((train, index) => {\r\n//               const trainImage = getImagePath(train.name, \"train\");\r\n//               return (\r\n//                 <div key={index} className=\"transport-item\" onClick={() => handleBooking(train)}>  \r\n//                   <img src={trainImage} alt={train.name} className=\"transport-image\" />\r\n//                   <p>\r\n//                     {train.name || \"Unknown Train\"} - {train.departure_time || \"--\"} -{\" \"}\r\n//                     {train.price ? `${train.price} PKR` : \"Price Not Available\"}\r\n//                   </p>\r\n//                   <p>\r\n//                     From: {train.starting || \"Unknown\"} To: {train.ending || \"Unknown\"}\r\n//                   </p>\r\n//                   <button>Book</button>\r\n//                 </div>\r\n//               );\r\n//             })\r\n//           ) : (\r\n//             <p>Loading trains...</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Confirmation Pop-up */}\r\n//         {showConfirmPopup && (\r\n//           <div className=\"popup\">\r\n//             <div className=\"popup-content\">\r\n//               <span className=\"close\" onClick={cancelBooking}>&times;</span>\r\n//               <h3>Booking Confirmation</h3>\r\n//               <p>Are you sure you want to book this transport?</p>\r\n//               <div className=\"details\">\r\n//                 {selectedItem.name && <p><strong>Name:</strong> {selectedItem.name}</p>}\r\n//                 {selectedItem.departure_time && <p><strong>Departure Time:</strong> {selectedItem.departure_time}</p>}\r\n//                 {selectedItem.price && <p><strong>Price:</strong> {selectedItem.price} PKR</p>}\r\n//                 {selectedItem.passengers && <p><strong>Passengers:</strong> {selectedItem.passengers}</p>}\r\n//                 {selectedItem.starting && <p><strong>From:</strong> {selectedItem.starting}</p>}\r\n//                 {selectedItem.ending && <p><strong>To:</strong> {selectedItem.ending}</p>}\r\n//               </div>\r\n//               <button onClick={confirmBooking}>Confirm</button>\r\n//               <button onClick={cancelBooking}>Cancel</button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Notification */}\r\n//         {showNotification && <div className=\"notification\">{notification}</div>}\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookTransport;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport \"./BookTransport.css\"; \r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst ConfirmationModal = ({ selectedItem, onConfirm, onCancel }) => {\r\n  if (!selectedItem) return null;\r\n\r\n  return (\r\n    <div className=\"confirmation-modal\">\r\n      <div className=\"modal-content\">\r\n        <h2>Confirm Booking</h2>\r\n        <p>Are you sure you want to book <strong>{selectedItem.name}</strong>?</p>\r\n        <p><strong>Price:</strong> {selectedItem.price} PKR</p>\r\n        <div className=\"modal-buttons\">\r\n          <button className=\"confirm-btn\" onClick={onConfirm}>Yes, Book Now</button>\r\n          <button className=\"cancel-btn\" onClick={onCancel}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BookTransport = () => {\r\n  const [buses, setBuses] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [showConfirmPopup, setShowConfirmPopup] = useState(false);\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  \r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { customizationData, currentDetails, tripId } = location.state || {};\r\n  \r\n  // Get destination city from customizationData\r\n  const destinationCity = customizationData?.destination || \"\";\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const busResponse = await fetch(\"/Cleaned_busses.csv\");\r\n        const busText = await busResponse.text();\r\n  \r\n        Papa.parse(busText, {\r\n          header: true,\r\n          complete: (result) => {\r\n            // Filter buses by destination city\r\n            const filteredBuses = result.data\r\n              .filter(bus => bus.ending && bus.ending.toLowerCase() === destinationCity.toLowerCase())\r\n              .sort((a, b) => {\r\n                // Sort by departure time - earlier times first\r\n                if (a.departure_time && b.departure_time) {\r\n                  return a.departure_time.localeCompare(b.departure_time);\r\n                }\r\n                return 0;\r\n              })\r\n              .slice(0, 5); // Take only top 5 buses\r\n              \r\n            setBuses(filteredBuses);\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching bus data:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [destinationCity]);  \r\n\r\n  // Function to get the image path for buses\r\n  const getBusImagePath = (name) => {\r\n    const nameLower = name ? name.toLowerCase() : \"\";\r\n    \r\n    const busImages = [\r\n      \"akmovers\", \"daewoo\", \"e.k.movers\", \"fmtravels\", \"mashabrum\",\r\n      \"natco\", \"qconnect\", \"roadmaster\", \"skyways\", \"warraich\"\r\n    ];\r\n    \r\n    const matchedBus = busImages.find(img => nameLower.includes(img));\r\n    return matchedBus ? `/images/${matchedBus}.jpg` : \"/images/bus.jpg\";\r\n  };\r\n\r\n  const handleBooking = (item) => {\r\n    setSelectedItem(item);\r\n    setShowConfirmPopup(true);\r\n  };\r\n\r\n  const confirmBooking = () => {\r\n    setShowConfirmPopup(false);\r\n    \r\n    // Navigate back to booking options with the selected transport\r\n    navigate(\"/bookoption\", {\r\n      state: {\r\n        customizationData,\r\n        currentDetails: { \r\n          ...currentDetails,\r\n          transport: selectedItem\r\n        },\r\n        tripId\r\n      }\r\n    });\r\n  };\r\n\r\n  const cancelBooking = () => {\r\n    setShowConfirmPopup(false);\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"book-transport\">\r\n      <Navbar />\r\n\r\n      \r\n      <div className=\"trans\">\r\n        <h2>Choose Bus Transport to {destinationCity}</h2>\r\n\r\n        {/* Buses Section */}\r\n        <div className=\"transport-section\">\r\n          {buses.length > 0 ? (\r\n            buses.map((bus, index) => {\r\n              const busImage = getBusImagePath(bus.name);\r\n              return (\r\n                <div key={index} className=\"transport-item\" onClick={() => handleBooking(bus)}>  \r\n                  <img src={busImage} alt={bus.name} className=\"transport-image\" />\r\n                  <div className=\"transport-details\">\r\n                    <h3>{bus.name || \"Bus Service\"}</h3>\r\n                    <div className=\"transport-info\">\r\n                      <p><strong>Departure:</strong> {bus.departure_time || \"Schedule not available\"}</p>\r\n                      <p><strong>Route:</strong> {bus.starting || \"Origin\"} → {bus.ending || \"Destination\"}</p>\r\n                      <p><strong>Price:</strong> {bus.price ? `${bus.price} PKR` : \"Price not available\"}</p>\r\n                      <p><strong>Type:</strong> {bus.type || \"Standard\"}</p>\r\n                      <p><strong>Facilities:</strong> {bus.facilities || \"AC, Comfortable Seating, WiFi\"}</p>\r\n                    </div>\r\n                    <button className=\"book-btn\">Select This Bus</button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"no-buses\">\r\n              <p>No buses found going to {destinationCity}. Please try another destination.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Confirmation Pop-up */}\r\n        {showConfirmPopup && (\r\n          <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n              <span className=\"close\" onClick={cancelBooking}>&times;</span>\r\n              <h3>Booking Confirmation</h3>\r\n              <p>Are you sure you want to book this bus?</p>\r\n              <div className=\"details\">\r\n                <p><strong>Name:</strong> {selectedItem.name || \"Bus Service\"}</p>\r\n                <p><strong>Departure Time:</strong> {selectedItem.departure_time || \"Not specified\"}</p>\r\n                <p><strong>Price:</strong> {selectedItem.price || \"0\"} PKR</p>\r\n                <p><strong>From:</strong> {selectedItem.starting || \"Origin\"}</p>\r\n                <p><strong>To:</strong> {selectedItem.ending || \"Destination\"}</p>\r\n                <p><strong>Type:</strong> {selectedItem.type || \"Standard\"}</p>\r\n              </div>\r\n              <div className=\"confirmation-buttons\">\r\n                <button className=\"confirm-btnnn\" onClick={confirmBooking}>Confirm Booking</button>\r\n                <button className=\"cancel-btnnn\" onClick={cancelBooking}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Notification */}\r\n        {showNotification && <div className=\"notification\">{notification}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookTransport;","import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport hotelData from \"./clean_hotel_data.json\";\r\nimport \"./Hotels.css\";\r\nimport NavBar from \"../NavBar/Navbar\";\r\n\r\nconst hotelImages = [\r\n  require(\"./hotel.jpg\"),\r\n  require(\"./hotel1.jpg\"),\r\n  require(\"./hotel2.jpg\"),\r\n  require(\"./hotel3.jpg\"),\r\n  require(\"./hotel4.jpg\"),\r\n  require(\"./hotel5.jpeg\"),\r\n  require(\"./hotel6.jpg\"),\r\n  require(\"./hotel7.jpg\"),\r\n  require(\"./hotel8.jpeg\"),\r\n  require(\"./hotel9.jpg\"),\r\n  require(\"./hotel10.jpg\"),\r\n  require(\"./hotel11.jpeg\"),\r\n  require(\"./hotel12.jpg\"),\r\n  require(\"./hotel13.jpg\"),\r\n  require(\"./hotel14.jpg\"),\r\n  require(\"./hotel15.jpeg\"),\r\n];\r\n\r\nconst getRandomImage = () => hotelImages[Math.floor(Math.random() * hotelImages.length)];\r\nconst getRandomRating = () => (3.5 + Math.random() * Math.random() * 1.5).toFixed(1);\r\n\r\nconst Hotels = () => {\r\n  const [hotelsByCity, setHotelsByCity] = useState({});\r\n  const [ratings, setRatings] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"./ratings.csv\")\r\n      .then((response) => response.text())\r\n      .then((csvText) => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            const ratingsMap = {};\r\n            result.data.forEach(({ name, rating, category }) => {\r\n              ratingsMap[name] = { rating: parseFloat(rating), category };\r\n            });\r\n            setRatings(ratingsMap);\r\n          },\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(ratings).length === 0) return;\r\n\r\n    const enrichedHotels = hotelData.map((hotel) => ({\r\n      ...hotel,\r\n      rating: ratings[hotel.name]?.rating || getRandomRating(),\r\n      category: ratings[hotel.name]?.category || hotel.category,\r\n    }));\r\n\r\n    const groupedHotels = enrichedHotels.reduce((acc, hotel) => {\r\n      const { city } = hotel;\r\n      if (!acc[city]) acc[city] = [];\r\n      acc[city].push(hotel);\r\n      return acc;\r\n    }, {});\r\n\r\n    Object.keys(groupedHotels).forEach((city) => {\r\n      groupedHotels[city] = groupedHotels[city]\r\n        .sort((a, b) => b.rating - a.rating)\r\n        .slice(0, 10);\r\n    });\r\n\r\n    setHotelsByCity(groupedHotels);\r\n  }, [ratings]);\r\n\r\n  const scroll = (id, direction) => {\r\n    const container = document.getElementById(id);\r\n    if (container) {\r\n      container.scrollBy({ left: direction === \"left\" ? -300 : 300, behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"hotels-container\">\r\n      <NavBar />\r\n      {Object.entries(hotelsByCity).map(([city, hotels]) => (\r\n        <div key={city} className=\"city-section\">\r\n          <h2 className=\"city-title\">Hotels in {city}</h2>\r\n          <div className=\"scroll-container\">\r\n            <button className=\"scroll-btn left\" onClick={() => scroll(city, \"left\")}>←</button>\r\n            <div className=\"hotels-row\" id={city}>\r\n              {hotels.map((hotel) => (\r\n                <div key={hotel.id} className=\"hotel-card\">\r\n                  <img src={getRandomImage()} alt={hotel.name} className=\"hotel-image\" />\r\n                  <h3>{hotel.name}</h3>\r\n                  <p>⭐ {hotel.rating} ({hotel.category})</p>\r\n                  <p>📍<strong>Location:</strong> {hotel.city}, {hotel.state || hotel.country}</p>\r\n                  <p>💰<strong>Price:</strong> {hotel.price || \"N/A\"}Rs per night</p>\r\n                  <p>🏊<strong>Facilities:</strong> {hotel.facilities?.join(\", \") || \"Not Available\"}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button className=\"scroll-btn right\" onClick={() => scroll(city, \"right\")}>→</button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hotels;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport NavBar from \"../NavBar/Navbar\";\r\nimport \"./Restaurants.css\";\r\n\r\nconst restaurantImages = [\r\n  require(\"./restaurant.jpg\"),\r\n  require(\"./restaurant1.jpg\"),\r\n  require(\"./restaurant2.jpg\"),\r\n  require(\"./restaurant3.jpg\"),\r\n  require(\"./restaurant4.jpg\"),\r\n  require(\"./restaurant5.jpg\"),\r\n  require(\"./restaurant6.jpg\"),\r\n  require(\"./restaurant7.jpg\"),\r\n  require(\"./restaurant8.jpg\"),\r\n  require(\"./restaurant9.jpg\"),\r\n  require(\"./restaurant10.jpg\"),\r\n  require(\"./restaurant11.jpg\")\r\n];\r\n\r\nconst getRandomImage = () => restaurantImages[Math.floor(Math.random() * restaurantImages.length)];\r\n\r\nconst Restaurants = () => {\r\n  const [restaurantsByCity, setRestaurantsByCity] = useState({});\r\n  const scrollRefs = useRef({}); // Store refs for each city's scrollable row\r\n\r\n  useEffect(() => {\r\n    fetch(process.env.PUBLIC_URL + \"/cleaned_restaurants.csv\")\r\n      .then((response) => response.text())\r\n      .then((csvText) => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            console.log(\"Raw CSV Data:\", result.data); // Debugging\r\n\r\n            if (result.data.length === 0) {\r\n              console.error(\"No data found in CSV!\");\r\n              return;\r\n            }\r\n\r\n            console.log(\"CSV Headers:\", Object.keys(result.data[0])); // Check column names\r\n\r\n            const enrichedRestaurants = result.data.map((restaurant) => ({\r\n              city: restaurant.City || \"Unknown City\",\r\n              id: restaurant[\"Restaurant ID\"] || Math.random(),\r\n              name: restaurant.Name || \"Unknown Restaurant\",\r\n              rating: parseFloat(restaurant[\"Average Rating\"]) || \"N/A\",\r\n              phone: restaurant[\"Phone Number\"] || \"N/A\",\r\n              hours: restaurant[\"Open Hours\"] || \"Not Available\",\r\n              services: restaurant[\"Service Options\"] || \"Not Available\",\r\n              image: getRandomImage(),\r\n            }));\r\n\r\n            const groupedRestaurants = enrichedRestaurants.reduce((acc, restaurant) => {\r\n              if (!acc[restaurant.city]) acc[restaurant.city] = [];\r\n              acc[restaurant.city].push(restaurant);\r\n              return acc;\r\n            }, {});\r\n\r\n            Object.keys(groupedRestaurants).forEach((city) => {\r\n              groupedRestaurants[city] = groupedRestaurants[city]\r\n                .sort((a, b) => b.rating - a.rating)\r\n                .slice(0, 10);\r\n            });\r\n\r\n            setRestaurantsByCity(groupedRestaurants);\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => console.error(\"Error fetching CSV:\", error));\r\n  }, []);\r\n\r\n  const scroll = (city, direction) => {\r\n    if (scrollRefs.current[city]) {\r\n      const scrollAmount = 320; // Adjust based on card width + gap\r\n      scrollRefs.current[city].scrollBy({\r\n        left: direction === \"left\" ? -scrollAmount : scrollAmount,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"restaurants-container\">\r\n      <NavBar />\r\n      {Object.entries(restaurantsByCity).map(([city, restaurants]) => (\r\n        <div key={city} className=\"city-section\">\r\n          <h2 className=\"city-heading\">Restaurants in {city}</h2>\r\n          <div className=\"scroll-container\">\r\n            <button className=\"scroll-btn left\" onClick={() => scroll(city, \"left\")}>←</button>\r\n\r\n            <div className=\"restaurants-row\" ref={(el) => (scrollRefs.current[city] = el)}>\r\n              {restaurants.map((restaurant) => (\r\n                <div key={restaurant.id} className=\"restaurant-card\">\r\n                  <img src={restaurant.image} alt={restaurant.name} className=\"restaurant-image\" />\r\n                  <h3>{restaurant.name}</h3>\r\n                  <p>⭐ <strong>{restaurant.rating}</strong></p>\r\n                  <p>📍 <strong>Location:</strong> {city}</p>\r\n                  <p>📞 <strong>Contact:</strong> {restaurant.phone}</p>\r\n                  <p>🕒 <strong>Hours:</strong> {restaurant.hours}</p>\r\n                  <p>🍽️ <strong>Services:</strong> {restaurant.services}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <button className=\"scroll-btn right\" onClick={() => scroll(city, \"right\")}>→</button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restaurants;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Calendar, User, CreditCard, Printer, Mail, Home } from 'lucide-react';\r\nimport './Cart.css';\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nconst Cart = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [tripData, setTripData] = useState(null);\r\n  const [paymentDetails, setPaymentDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [dayDetails, setDayDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Get data from location state (sent from CheckoutPage)\r\n    if (location.state?.tripData) {\r\n      setTripData(location.state.tripData);\r\n      setPaymentDetails(location.state.paymentDetails || {});\r\n      \r\n      // Get day details from local storage\r\n      try {\r\n        const storedDayDetails = localStorage.getItem('dayDetails');\r\n        if (storedDayDetails) {\r\n          setDayDetails(JSON.parse(storedDayDetails));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing day details from localStorage:\", error);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } else {\r\n      // If no data in state, could fetch from API using stored ID in localStorage or redirect\r\n      setLoading(false);\r\n    }\r\n  }, [location]);\r\n\r\n  // Function to format date\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      return new Date(dateString).toLocaleDateString('en-US', {\r\n        month: 'numeric',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      });\r\n    } catch (error) {\r\n      return dateString || 'N/A';\r\n    }\r\n  };\r\n\r\n  // Handle email itinerary\r\n  const handleEmailItinerary = () => {\r\n    // In a real application, this would call an API endpoint to send an email\r\n    alert('Itinerary has been sent to your email!');\r\n  };\r\n\r\n  // Handle print itinerary\r\n  const handlePrintItinerary = () => {\r\n    window.print();\r\n  };\r\n\r\n  // Handle navigation back to homepage\r\n  const handleBackToHome = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  // Display loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"itinerary-card\">\r\n        <Navbar />\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading your itinerary...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Display fallback if no data available\r\n  if (!tripData && !loading) {\r\n    return (\r\n      <div className=\"itinerary-card\">\r\n        <Navbar />\r\n        <div className=\"no-data-container\">\r\n          <h2>No Itinerary Data Available</h2>\r\n          <p>We couldn't find your itinerary details.</p>\r\n          <button className=\"bttn home-bttn\" onClick={handleBackToHome}>BACK TO HOMEPAGE</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Extract user and itinerary data from the trip data\r\n  const summary = tripData?.summary || {};\r\n  const days = tripData?.days || [];\r\n  \r\n  // Format payment date\r\n  const paymentDate = formatDate(paymentDetails?.date || new Date());\r\n\r\n  // Generate booking ID - in real app this would come from backend\r\n  const bookingId = `TRP${Math.floor(1000 + Math.random() * 9000)}`;\r\n\r\n  return (\r\n    <div className=\"itinerary-card\">\r\n      <Navbar />\r\n      <div className=\"receipt-container print-section\">\r\n        <div className=\"header\">\r\n          <h1>Trip Confirmation</h1>\r\n          <div className=\"booking-confirmation\">\r\n            <div className=\"confirmation-badge\">\r\n              <span>Payment Successful</span>\r\n              <span className=\"confirmation-date\">{paymentDate}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"user-info\">\r\n            <div className=\"info-row\">\r\n              <span><strong>Booking ID:</strong> {bookingId}</span>\r\n              <span><strong>Payment Date:</strong> {paymentDate}</span>\r\n            </div>\r\n            <div className=\"info-row\">\r\n              <span><strong>Amount Paid:</strong> {paymentDetails?.amount?.toLocaleString() || 'N/A'}</span>\r\n              <span><strong>Status:</strong> {paymentDetails?.status || 'Paid'}</span>\r\n            </div>\r\n            <div className=\"info-row trip-overview\">\r\n              <div className=\"trip-route\">\r\n                <span className=\"from\">{summary.from || 'Origin'}</span>\r\n                <span className=\"separator\">→</span>\r\n                <span className=\"to\">{summary.to || 'Destination'}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"info-row\">\r\n              <div className=\"trip-dates\">\r\n                <Calendar size={14} />\r\n                <span>\r\n                  {formatDate(summary.startDate)} - {formatDate(summary.endDate)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"info-row\">\r\n              <div className=\"trip-guests\">\r\n                <User size={14} />\r\n                <span>Budget: {tripData.summary.guests === 1 ? 'Economic' : tripData.summary.guests === 2 ? 'Normal' : tripData.summary.guests === 3 ? 'Deluxe' : 'N/A'} • {tripData.summary.duration} {tripData.summary.duration > 1 ? 'Days' : 'Day'}</span>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"payment-summary\">\r\n          <h2>Payment Summary</h2>\r\n          <div className=\"payment-details\">\r\n            <div className=\"payment-method\">\r\n              <CreditCard size={18} />\r\n              <span>Card Payment</span>\r\n            </div>\r\n            \r\n            <div className=\"cost-breakdown\">\r\n  {days.map((day, index) => {\r\n    // Get details for this day from localStorage\r\n    const dayDetail = dayDetails[day.dayNumber] || {};\r\n\r\n    return (\r\n      <div key={index} className=\"cost-item\">\r\n        <div>\r\n          <div>Day {day.dayNumber}: {day.title}</div>\r\n          <div className=\"day-detail-summary\">\r\n            <span>Attraction: {dayDetail.attraction || 'No selected'}</span>\r\n            <span> • Lunch: {dayDetail.lunch || 'No selected'}</span>\r\n            <span> • Dinner: {dayDetail.dinner || 'No selected'}</span>\r\n          </div>\r\n        </div>\r\n        <span className=\"cost\">{day.totalCost?.toLocaleString()}</span>\r\n      </div>\r\n    );\r\n  })}\r\n\r\n  <div className=\"cost-divider\"></div>\r\n\r\n  {tripData.discountPercentage > 0 && (\r\n    <div className=\"discount cost-item\">\r\n      <span>Points Discount ({tripData.discountPercentage}%)</span>\r\n      <span className=\"cost-discount\">\r\n        -{((days.reduce((sum, day) => sum + (day.totalCost || 0), 0) * tripData.discountPercentage) / 100).toLocaleString()}\r\n      </span>\r\n    </div>\r\n  )}\r\n\r\n  {paymentDetails?.promoDiscount > 0 && (\r\n    <div className=\"discount cost-item\">\r\n      <span>Promo Discount ({paymentDetails.promoApplied}: {paymentDetails.promoDiscount}%)</span>\r\n      <span className=\"cost-discount\">\r\n        -{((days.reduce((sum, day) => sum + (day.totalCost || 0), 0) * paymentDetails.promoDiscount) / 100).toLocaleString()}\r\n      </span>\r\n    </div>\r\n  )}\r\n\r\n  <div className=\"total cost-item\">\r\n    <span><strong>Total Amount Paid</strong></span>\r\n    <span className=\"cost-total\">{paymentDetails?.amount?.toLocaleString() || 'N/A'}</span>\r\n  </div>\r\n</div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"button-group\">\r\n       \r\n        <button className=\"bttn print-bttn\" onClick={handlePrintItinerary}>\r\n          <Printer size={16} /> PRINT COPY\r\n        </button>\r\n        <button className=\"bttn home-bttn\" onClick={handleBackToHome}>\r\n          <Home size={16} /> BACK TO HOMEPAGE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;","import React, { useState, useEffect } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { CreditCard, Lock, Calendar, User, Shield } from 'lucide-react';\r\nimport './ChekoutPage.css';\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nconst ChekoutPage = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const navigate = useNavigate();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [itinerary, setItinerary] = useState(null);\r\n\r\n  // Read itinerary data solely from localStorage\r\n  useEffect(() => {\r\n    const storedItinerary = localStorage.getItem('confirmedItinerary');\r\n    if (storedItinerary) {\r\n      setItinerary(JSON.parse(storedItinerary));\r\n    } else {\r\n      setError(\"No itinerary found in local storage.\");\r\n    }\r\n  }, []);\r\n\r\n  // Calculate total cost to be paid by Stripe\r\n  const calculateTotal = () => {\r\n    if (itinerary && itinerary.cost_breakdown) {\r\n      return itinerary.cost_breakdown.total_cost;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  // Payment submission handler\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    if (!stripe || !elements) {\r\n      setError(\"Stripe is not initialized\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      const total = calculateTotal();\r\n      // Create payment intent on the backend\r\n      const response = await axios.post('http://localhost:5000/api/payment-intent', {\r\n        amount: total\r\n      });\r\n      if (response.status !== 200) {\r\n        throw new Error(response.data.message || \"Payment intent error\");\r\n      }\r\n      const { clientSecret } = response.data;\r\n      // Confirm card payment\r\n      const { error: stripeError, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement)\r\n        }\r\n      });\r\n      if (stripeError) {\r\n        setError(stripeError.message);\r\n        setSuccess(false);\r\n      } else if (paymentIntent.status === 'succeeded') {\r\n        setSuccess(true);\r\n        // Redirect to confirmation page after a short delay\r\n        setTimeout(() => {\r\n          navigate('/confirmation', { \r\n            state: { \r\n              itinerary,\r\n              paymentDetails: {\r\n                amount: total,\r\n                date: new Date().toISOString(),\r\n                status: 'Paid'\r\n              }\r\n            } \r\n          });\r\n        }, 2000);\r\n      } else {\r\n        setError(`Payment status: ${paymentIntent.status}. Please try again.`);\r\n        setSuccess(false);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || \"An error occurred during payment.\");\r\n      setSuccess(false);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  if (!itinerary) {\r\n    return (\r\n      <div className=\"chekout-container\">\r\n        <Navbar />\r\n        <div className=\"chekout-content\">\r\n          {error ? (\r\n            <div className=\"chekout-error-message\">\r\n              <h2>Error</h2>\r\n              <p>{error}</p>\r\n            </div>\r\n          ) : (\r\n            <div>Loading itinerary...</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { destination, duration_days, hotel, cost_breakdown } = itinerary;\r\n  const totalCost = calculateTotal();\r\n\r\n  return (\r\n    <div className=\"chekout-container\">\r\n      <Navbar />\r\n      <div className=\"chekout-content\">\r\n        <div className=\"chekout-header\">\r\n          <h1>Complete Your Payment</h1>\r\n          <div className=\"chekout-secure-badge\">\r\n            <Shield size={18} /> Secured & Encrypted\r\n          </div>\r\n        </div>\r\n        <div className=\"chekout-grid\">\r\n          <div className=\"chekout-summary-card\">\r\n            <div className=\"chekout-card-header\">\r\n              <h2>Trip Summary</h2>\r\n              <CreditCard size={20} />\r\n            </div>\r\n            <div className=\"chekout-trip-overview\">\r\n              <div className=\"chekout-trip-route\">\r\n                <span className=\"chekout-from\">{destination}</span>\r\n              </div>\r\n              <div className=\"chekout-trip-dates\">\r\n                <Calendar size={14} />\r\n                <span>{duration_days} {duration_days > 1 ? 'Days' : 'Day'}</span>\r\n              </div>\r\n              <div className=\"chekout-trip-guests\">\r\n                <User size={14} />\r\n                <span>Hotel: {hotel?.name || 'N/A'}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"chekout-cost-breakdown\">\r\n              <div className=\"chekout-cost-item\">\r\n                <span>Cost of Hotel</span>\r\n                <span className=\"chekout-cost\">{cost_breakdown?.hotel_cost?.toLocaleString() || 0}</span>\r\n              </div>\r\n              <div className=\"chekout-cost-item\">\r\n                <span>Cost of Accommodation</span>\r\n                <span className=\"chekout-cost\">{cost_breakdown?.restaurant_cost?.toLocaleString() || 0}</span>\r\n              </div>\r\n              <div className=\"chekout-cost-divider\"></div>\r\n              <div className=\"chekout-total chekout-cost-item\">\r\n                <span>Total Amount</span>\r\n                <span className=\"chekout-cost-total\">{totalCost.toLocaleString()}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"chekout-payment-card\">\r\n            <div className=\"chekout-card-header\">\r\n              <h2>Card Payment</h2>\r\n              <Lock size={20} />\r\n            </div>\r\n            <form onSubmit={handleSubmit} className=\"chekout-payment-form\">\r\n              <div className=\"chekout-stripe-card\">\r\n                <CardElement \r\n                  options={{\r\n                    style: {\r\n                      base: {\r\n                        fontSize: '16px',\r\n                        fontWeight: '500',\r\n                        fontFamily: 'Inter, system-ui, sans-serif',\r\n                        color: '#1a1f36',\r\n                        '::placeholder': {\r\n                          color: '#6b7280'\r\n                        },\r\n                        padding: '20px 0'\r\n                      },\r\n                      invalid: {\r\n                        color: '#ef4444'\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              {error && <div className=\"chekout-error-message chekout-slide-in\">{error}</div>}\r\n              {success && <div className=\"chekout-success-message chekout-slide-in\">Payment successful! Redirecting...</div>}\r\n              <button \r\n                className={`chekout-payment-button ${loading ? 'loading' : ''}`} \r\n                type=\"submit\" \r\n                disabled={!stripe || loading || success}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <div className=\"chekout-spinner\"></div>\r\n                    Processing Payment...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Lock size={18} />\r\n                    Pay {totalCost.toLocaleString()}\r\n                  </>\r\n                )}\r\n              </button>\r\n            </form>\r\n            <div className=\"chekout-security-info\">\r\n              <Shield size={16} />\r\n              <span>Your payment information is encrypted and secure</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChekoutPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Calendar, User, CreditCard, Printer, Home } from 'lucide-react';\r\nimport './Confirmation.css';\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nconst Confirmation = () => {\r\n  const navigate = useNavigate();\r\n  const [itinerary, setItinerary] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Read confirmed itinerary solely from localStorage\r\n  useEffect(() => {\r\n    const storedItinerary = localStorage.getItem('confirmedItinerary');\r\n    if (storedItinerary) {\r\n      setItinerary(JSON.parse(storedItinerary));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Format date (using current date as payment date)\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      return new Date(dateString).toLocaleDateString('en-US', {\r\n        month: 'numeric',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      });\r\n    } catch (error) {\r\n      return dateString || 'N/A';\r\n    }\r\n  };\r\n\r\n  // Handle print and navigation actions\r\n  const handlePrintItinerary = () => {\r\n    window.print();\r\n  };\r\n\r\n  const handleBackToHome = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"itinerary-card\">\r\n        <Navbar />\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading your itinerary...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!itinerary) {\r\n    return (\r\n      <div className=\"itinerary-card\">\r\n        <Navbar />\r\n        <div className=\"no-data-container\">\r\n          <h2>No Itinerary Data Available</h2>\r\n          <p>We couldn't find your itinerary details.</p>\r\n          <button className=\"bttn home-bttn\" onClick={handleBackToHome}>\r\n            BACK TO HOMEPAGE\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Extract necessary details from the confirmed itinerary\r\n  const { destination, duration_days, hotel, cost_breakdown, days, transportation } = itinerary;\r\n  const paymentDate = formatDate(new Date().toISOString());\r\n  const bookingId = `TRP${Math.floor(1000 + Math.random() * 9000)}`;\r\n\r\n  return (\r\n    <div className=\"itinerary-card\">\r\n      <Navbar />\r\n      <div className=\"receipt-container print-section\">\r\n        <div className=\"header\">\r\n          <h1>Trip Confirmation</h1>\r\n          <div className=\"booking-confirmation\">\r\n            <div className=\"confirmation-badge\">\r\n              <span>Payment Successful</span>\r\n              <span className=\"confirmation-date\">{paymentDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"user-info\">\r\n            <div className=\"info-row\">\r\n              <span><strong>Booking ID:</strong> {bookingId}</span>\r\n              <span><strong>Payment Date:</strong> {paymentDate}</span>\r\n            </div>\r\n            <div className=\"info-row\">\r\n              <span>\r\n                <strong>Total Amount:</strong> {cost_breakdown?.total_cost?.toLocaleString() || 'N/A'}\r\n              </span>\r\n              <span>\r\n                <strong>Status:</strong> Paid\r\n              </span>\r\n            </div>\r\n            <div className=\"info-row trip-overview\">\r\n              <div className=\"trip-route\">\r\n                <span className=\"from\">{destination}</span>\r\n                <span className=\"separator\">→</span>\r\n                <span className=\"to\">{destination}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"info-row\">\r\n              <div className=\"trip-dates\">\r\n                <Calendar size={14} />\r\n                <span>{duration_days} {duration_days > 1 ? 'Days' : 'Day'}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"info-row\">\r\n              <div className=\"trip-guests\">\r\n                <User size={14} />\r\n                <span>Hotel: {hotel?.name || 'N/A'}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"payment-summary\">\r\n          <h2>Payment Summary</h2>\r\n          <div className=\"payment-method\">\r\n            <CreditCard size={18} />\r\n            <span>Card Payment</span>\r\n          </div>\r\n          <div className=\"cost-breakdown\">\r\n            <div className=\"cost-item\">\r\n              <span>Attraction Cost</span>\r\n              <span className=\"cost\">{cost_breakdown?.attraction_cost?.toLocaleString() || '0'}</span>\r\n            </div>\r\n            <div className=\"cost-item\">\r\n              <span>Hotel Cost</span>\r\n              <span className=\"cost\">{cost_breakdown?.hotel_cost?.toLocaleString() || '0'}</span>\r\n            </div>\r\n            <div className=\"cost-item\">\r\n              <span>Restaurant Cost</span>\r\n              <span className=\"cost\">{cost_breakdown?.restaurant_cost?.toLocaleString() || '0'}</span>\r\n            </div>\r\n            <div className=\"cost-item\">\r\n              <span>Transport Cost</span>\r\n              <span className=\"cost\">{cost_breakdown?.transport_cost?.toLocaleString() || '0'}</span>\r\n            </div>\r\n            <div className=\"cost-divider\"></div>\r\n            <div className=\"total cost-item\">\r\n              <span><strong>Total Amount Paid</strong></span>\r\n              <span className=\"cost-total\">{cost_breakdown?.total_cost?.toLocaleString() || 'N/A'}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* New Trip Itinerary Section */}\r\n        <div className=\"trip-summary\">\r\n          <h2>Trip Itinerary</h2>\r\n          {days && days.map((day, index) => (\r\n            <div key={index} className=\"day-item\">\r\n              <h3>Day {day.day}</h3>\r\n              <div className=\"day-detail\">\r\n                <span><strong>Attraction:</strong> {day.attraction?.name} ({day.attraction?.city})</span>\r\n              </div>\r\n              <div className=\"day-detail\">\r\n                <span><strong>Lunch:</strong> {day.lunch}</span>\r\n              </div>\r\n              <div className=\"day-detail\">\r\n                <span><strong>Dinner:</strong> {day.dinner}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div className=\"overall-summary\">\r\n            <h3>Overall Trip Details</h3>\r\n            <div className=\"summary-detail\">\r\n              <span><strong>Hotel:</strong> {hotel?.name}</span>\r\n            </div>\r\n            <div className=\"summary-detail\">\r\n              <span><strong>Transportation:</strong> {transportation?.mode} (Estimated Cost: {transportation?.estimated_cost?.toLocaleString() || '0'})</span>\r\n            </div>\r\n            <div className=\"summary-detail\">\r\n              <span><strong>Total Budget:</strong> {cost_breakdown?.budget?.toLocaleString() || '0'}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"button-group\">\r\n        <button className=\"bttn print-bttn\" onClick={handlePrintItinerary}>\r\n          <Printer size={16} /> PRINT COPY\r\n        </button>\r\n        <button className=\"bttn home-bttn\" onClick={handleBackToHome}>\r\n          <Home size={16} /> BACK TO HOMEPAGE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Profile.css\"; // Ensure styles match login/signup\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nconst Profile = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [itineraries, setItineraries] = useState([]);\r\n  const [challenges, setChallenges] = useState([]);\r\n  const [vouchers, setVouchers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch user data dynamically (Replace with API call)\r\n    setUser({\r\n      firstName: \"Eman\",\r\n      lastName: \"Furrukh\",\r\n      email: \"fu@gmail.com\",\r\n      phone: \"1234567890\",\r\n    });\r\n\r\n    // Fetch itineraries dynamically (Replace with API call)\r\n    setItineraries([\r\n      { start: \"Islamabad\", destination: \"Lahore\", date: \"March 10, 2025\" },\r\n      { start: \"Karachi\", destination: \"Murree\", date: \"Feb 22, 2025\" },\r\n    ]);\r\n\r\n    // Fetch challenges dynamically (Replace with API call)\r\n    setChallenges([\r\n      { name: \"Think Fast, Earn Faster (Play Crosswords for Big Points!)\", points: 2000 }\r\n    ]);\r\n\r\n    // Fetch vouchers dynamically (Replace with API call)\r\n    setVouchers([\r\n      { name: \"50% Off Hotel Stay\", requiredPoints: 10000, isRedeemed: false },\r\n      { name: \"Free Coffee at Café\", requiredPoints: 1500, isRedeemed: false },\r\n    ]);\r\n  }, []);\r\n\r\n  const handleEditToggle = () => setIsEditing(!isEditing);\r\n\r\n  const handleInputChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleRedeem = (index) => {\r\n    if (challenges.reduce((acc, challenge) => acc + challenge.points, 0) >= vouchers[index].requiredPoints) {\r\n      const updatedVouchers = [...vouchers];\r\n      updatedVouchers[index].isRedeemed = true;\r\n      setVouchers(updatedVouchers);\r\n      alert(\"🎉 Voucher Redeemed!\");\r\n    } else {\r\n      alert(\"❌ Not enough points.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <Navbar />\r\n      <div className=\"profile-content\">\r\n        <h2 className=\"profile-title\">User Profile</h2>\r\n\r\n        {/* Personal Details Section */}\r\n        <div className=\"profile-section\">\r\n          <h3>Personal Details</h3>\r\n          <div className=\"profile-details\">\r\n            {Object.keys(user).map((key) => (\r\n              <div className=\"profile-field\" key={key}>\r\n                <label>{key.replace(/([A-Z])/g, \" $1\")}:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name={key}\r\n                  value={user[key] || \"\"}\r\n                  onChange={handleInputChange}\r\n                  disabled={!isEditing}\r\n                  className=\"profile-input\"\r\n                />\r\n              </div>\r\n            ))}\r\n            <button className=\"edit-btn\" onClick={handleEditToggle}>\r\n              {isEditing ? \"Save\" : \"Edit\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Itineraries Section */}\r\n        <div className=\"profile-section\">\r\n          <h3>Past Itineraries</h3>\r\n          <div className=\"itineraries\">\r\n            {itineraries.length > 0 ? (\r\n              itineraries.map((trip, index) => (\r\n                <div key={index} className=\"itinerary-card\">\r\n                  <p><strong>From:</strong> {trip.start}</p>\r\n                  <p><strong>To:</strong> {trip.destination}</p>\r\n                  <p><strong>Date:</strong> {trip.date}</p>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No itineraries available.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Challenges Section */}\r\n        <div className=\"profile-section\">\r\n          <h3>Challenges Completed</h3>\r\n          <ul>\r\n            {challenges.length > 0 ? (\r\n              challenges.map((challenge, index) => (\r\n                <li key={index}>\r\n                  {challenge.name} - <strong>{challenge.points} points</strong>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p>No challenges completed.</p>\r\n            )}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Vouchers Section */}\r\n        <div className=\"profile-section\">\r\n          <h3>Vouchers</h3>\r\n          <div className=\"vouchers\">\r\n            {vouchers.length > 0 ? (\r\n              vouchers.map((voucher, index) => (\r\n                <div key={index} className=\"voucher-card\">\r\n                  <p><strong>{voucher.name}</strong></p>\r\n                  <p>Required Points: {voucher.requiredPoints}</p>\r\n                  {!voucher.isRedeemed ? (\r\n                    <button onClick={() => handleRedeem(index)}>Redeem</button>\r\n                  ) : (\r\n                    <div className=\"redeemed-voucher\">\r\n                      🎊 Code: <strong>{Math.random().toString(36).substr(2, 8).toUpperCase()}</strong> 🎊\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No vouchers available.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Lock, CreditCard } from 'lucide-react';\r\nimport './CheckoutPage.css';\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nconst Checkout2 = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [promoCode, setPromoCode] = useState('');\r\n  const [promoDiscount, setPromoDiscount] = useState(0);\r\n  const [promoError, setPromoError] = useState(null);\r\n  const [hotelData, setHotelData] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (location.state?.hotelData && location.state?.totalPrice) {\r\n      setHotelData(location.state.hotelData);\r\n      setTotalPrice(location.state.totalPrice);\r\n    } else {\r\n      setError(\"Missing trip details.\");\r\n      navigate('/tripdetails'); // Redirect if data is missing\r\n    }\r\n  }, [location.state, navigate]);\r\n\r\n  const calculateTotals = () => {\r\n    const discount = (totalPrice * promoDiscount) / 100;\r\n    const finalTotal = totalPrice - discount;\r\n    return { subtotal: totalPrice, discount, total: finalTotal };\r\n  };\r\n\r\n  const handleApplyPromo = () => {\r\n    const promoCodes = { 'SAVE10': 10, 'DISCOUNT20': 20 };\r\n\r\n    if (promoCodes[promoCode.toUpperCase()]) {\r\n      setPromoDiscount(promoCodes[promoCode.toUpperCase()]);\r\n      setPromoError(null);\r\n    } else {\r\n      setPromoError(\"Invalid promo code.\");\r\n      setPromoDiscount(0);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    if (!stripe || !elements) {\r\n      setError(\"Stripe not initialized.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { total } = calculateTotals();\r\n      const response = await axios.post('http://localhost:5000/api/payment-intent', { amount: total });\r\n\r\n      if (response.status !== 200) throw new Error(response.data.message);\r\n\r\n      const { clientSecret } = response.data;\r\n      const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: { card: elements.getElement(CardElement) },\r\n      });\r\n\r\n      if (error) {\r\n        setError(error.message);\r\n        setSuccess(false);\r\n      } else if (paymentIntent.status === 'succeeded') {\r\n        setSuccess(true);\r\n        alert(\"Booking Successful\")\r\n        setTimeout(() => navigate('/'), 2000); // Redirect after success\r\n      }\r\n    } catch (err) {\r\n      setError(\"Payment error.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  if (!hotelData.length) {\r\n    return <div className=\"loading\">Loading trip details...</div>;\r\n  }\r\n\r\n  const { subtotal, discount, total } = calculateTotals();\r\n\r\n  return (\r\n    <div className=\"checkout-container\">\r\n      <Navbar />\r\n      <div className=\"checkout-content\">\r\n        <div className=\"checkout-header\">\r\n          <h1>Checkout - Trip Details</h1>\r\n          <div className=\"secure-badge\">\r\n            <Lock size={16} />\r\n            Secure Payment\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"checkout-grid\">\r\n          {/* Order Summary */}\r\n          <div className=\"summary-card\">\r\n            <div className=\"card-header\">\r\n              <h2>Trip Summary</h2>\r\n            </div>\r\n            {hotelData.map((hotel, index) => (\r\n              <div key={index} className=\"cost-item\">\r\n                <span>{hotel.hotelName}</span>\r\n                <span>${hotel.hotelPrice} / night</span>\r\n              </div>\r\n            ))}\r\n            <div className=\"cost-divider\"></div>\r\n            <div className=\"cost-item\">\r\n              <span>Subtotal</span>\r\n              <span className=\"cost\">${subtotal}</span>\r\n            </div>\r\n            <div className=\"cost-item\">\r\n              <span>Discount</span>\r\n              <span className=\"cost-discount\">-${discount}</span>\r\n            </div>\r\n            <div className=\"cost-divider\"></div>\r\n            <div className=\"cost-item cost-total\">\r\n              <span>Total</span>\r\n              <span>${total}</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Payment Section */}\r\n          <div className=\"payment-card\">\r\n            <div className=\"card-header\">\r\n              <h2>Payment Details</h2>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className=\"payment-form\">\r\n              {/* Promo Code Section */}\r\n              <div className=\"promosection\">\r\n                <h3>Promo Code</h3>\r\n                <div className=\"promo-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={promoCode}\r\n                    onChange={(e) => setPromoCode(e.target.value)}\r\n                    placeholder=\"Enter promo code\"\r\n                  />\r\n                  <button className=\"promo-button\" onClick={handleApplyPromo}>\r\n                    Apply\r\n                  </button>\r\n                </div>\r\n                {promoError && <p className=\"error-message\">{promoError}</p>}\r\n              </div>\r\n\r\n              {/* Card Input */}\r\n              <div className=\"stripe-card\">\r\n                <CardElement />\r\n              </div>\r\n\r\n              {/* Payment Button */}\r\n              <button\r\n                type=\"submit\"\r\n                className={`payment-button ${loading ? 'loading' : ''}`}\r\n                disabled={loading}\r\n              >\r\n                {loading ? <div className=\"spinner\"></div> : <CreditCard size={16} />}\r\n                Pay ${total}\r\n              </button>\r\n\r\n              {/* Error/Success Messages */}\r\n              {error && <p className=\"error-message\">{error}</p>}\r\n              {success && <p className=\"success-message\">Payment Successful! Redirecting...</p>}\r\n\r\n              {/* Security Info */}\r\n              <div className=\"security-info\">\r\n                <Lock size={16} />\r\n                Your payment is encrypted and secure.\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout2;\r\n","/*\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport LoginForm from './components/LoginForm/Login';\r\nimport SignupForm from './components/SignupForm/Signup';\r\nimport Home from './components/HomePage/Homepage';\r\nimport HeroSection from \"./components/HomePage/HeroSection\";\r\nimport City from \"./components/CityPage/City\";\r\nimport CityPage from './components/CityPage/CityPage';\r\nimport Footer from './components/CityPage/Footer';\r\nimport PlanSelection from './components/HomePage/PlanSelection';\r\nimport MiloChatbot from './components/ChatbotPage/MiloChatbot';\r\nimport Challenges from \"./components/HomePage/Challenges\";\r\nimport CrosswordGrid from \"./components/HomePage/CrosswordGrid\";\r\nimport Quiz from \"./components/HomePage/quiz\"; \r\nimport ItineraryForm from \"./components/RecommendationForm/ItineraryForm\";\r\nimport CheckoutPage from \"./components/CheckoutPage/CheckoutPage\";\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport './App.css';\r\nimport TripDetails from \"./components/HomePage/PreplannedTrip/Tripdetail\";\r\nimport AllTrips from \"./components/HomePage/PreplannedTrip/AllTrips\";\r\nimport ToursSection from \"./components/HomePage/PreplannedTrip/ToursSection\";\r\nimport UserCustomization from \"./components/Booking/UserCustomization/UserCustomization\"\r\nimport BookingOptions from \"./components/Booking/BookingOptions\"\r\nimport BookHotel from \"./components/Booking/BookHotel\";\r\nimport BookTransport from \"./components/Booking/BookTransport\";\r\nimport Hotel from \"./components/HotelsPage/Hotels\";\r\nimport Restaurants from \"./components/RestaurantsPage/Restaurants\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport UserProfile from \"./components/UserProfile/Profile\";\r\nimport LoadingScreen from \"./components/Loader/LoadingScreen\";\r\nimport ChekoutPage from \"./components/ChekoutPage/ChekoutPage\";\r\nimport Confirmation from \"./components/Confirmation/Confirmation\"; \r\nconst stripePromise = loadStripe('pk_test_51MqErmDG40mBr38yGJ5Efis4h3Sy1yPqbDVzGI0cVtt8t4dPVgK2B8nUf7pTJzhuY5I6JnI8Qpn1yReQRT9M5KL000i6zT7fco');\r\n\r\nfunction App() {\r\n  const [points, setPoints] = useState(0); // State to track total points\r\n\r\n  // Callback to handle points received from Quiz\r\n  const handlePointsUpdate = (earnedPoints) => {\r\n    console.log(\"Points received from Quiz:\", earnedPoints); // Log the points for debugging\r\n    setPoints((prevPoints) => prevPoints + earnedPoints); // Update points\r\n  };\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className=\"main-content\">\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/login\" element={<LoginForm />} />\r\n            <Route path=\"/signup\" element={<SignupForm />} />\r\n            <Route path=\"/city\" element={<City />} /> \r\n            <Route path=\"/city/:cityName\" element={<CityPageWrapper />} />\r\n            <Route path=\"/restaurants\" element={<Restaurants />} />\r\n            <Route path=\"/UserCustomization\" element={<UserCustomization/>}/>\r\n            <Route path=\"/bookoption\" element={<BookingOptions/>}  />\r\n            <Route path=\"/BookHotel\" element={<BookHotel/> } />\r\n            <Route path=\"/BookTransport\" element={<BookTransport/>} />\r\n            <Route path=\"/PlanSelection\" element={<PlanSelection />} />\r\n            <Route path=\"/MiloChatbot\" element={<MiloChatbot />} /> \r\n            <Route path=\"/form-plan\" element={<ItineraryForm />} />\r\n            <Route path=\"/\" element={<Challenges />} />\r\n            <Route path=\"/crossword\" element={<CrosswordGrid />} />\r\n            <Route path=\"/hotels\" element={<Hotel />} />\r\n            <Route path=\"/profile\" element={<UserProfile />} />\r\n            <Route\r\n              path=\"/quiz\"\r\n              element={<Quiz onPointsUpdate={handlePointsUpdate} />} // Pass callback to Quiz\r\n            />\r\n            <Route path=\"/\" element={<ToursSection />} />\r\n             <Route path=\"/all-trips\" element={<AllTrips />} />\r\n            <Route path=\"/trip-details\" element={<TripDetails />} />\r\n            <Route \r\n              path=\"/checkout\" \r\n              element={\r\n                <Elements stripe={stripePromise}>\r\n                  <CheckoutPage />\r\n                </Elements>\r\n              } \r\n            />\r\n            <Route path =\"/cart\" element = {<Cart/>} ></Route>\r\n\r\n          </Routes>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// Wrapper component to handle city name from both URL params and state\r\nconst CityPageWrapper = () => {\r\n  const location = useLocation();\r\n  const cityName = location.state?.cityName || 'Islamabad'; // Default to Islamabad if no city specified\r\n\r\n  return <CityPage cityName={cityName} />;\r\n};\r\n\r\nconst ConditionalFooter = () => {\r\n  const location = useLocation();\r\n  const excludedRoutes = [\"/login\", \"/signup\"]; // Exclude on login/signup pages\r\n\r\n  return !excludedRoutes.includes(location.pathname) ? <Footer /> : null;\r\n};\r\n\r\nexport default App;\r\n*/\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route, useLocation } from 'react-router-dom';\r\nimport LoginForm from './components/LoginForm/Login';\r\nimport SignupForm from './components/SignupForm/Signup';\r\nimport Home from './components/HomePage/Homepage';\r\nimport City from \"./components/CityPage/City\";\r\nimport CityPage from './components/CityPage/CityPage';\r\nimport Footer from './components/CityPage/Footer';\r\nimport PlanSelection from './components/HomePage/PlanSelection';\r\nimport MiloChatbot from './components/ChatbotPage/MiloChatbot';\r\nimport Challenges from \"./components/HomePage/Challenges\";\r\nimport CrosswordGrid from \"./components/HomePage/CrosswordGrid\";\r\nimport Quiz from \"./components/HomePage/quiz\"; \r\nimport ItineraryForm from \"./components/RecommendationForm/ItineraryForm\";\r\nimport CheckoutPage from \"./components/CheckoutPage/CheckoutPage\";\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport './App.css';\r\nimport TripDetails from \"./components/HomePage/PreplannedTrip/Tripdetail\";\r\nimport AllTrips from \"./components/HomePage/PreplannedTrip/AllTrips\";\r\nimport ToursSection from \"./components/HomePage/PreplannedTrip/ToursSection\";\r\nimport UserCustomization from \"./components/Booking/UserCustomization/UserCustomization\"\r\nimport BookingOptions from \"./components/Booking/BookingOptions\"\r\nimport BookHotel from \"./components/Booking/BookHotel\";\r\nimport BookTransport from \"./components/Booking/BookTransport\";\r\nimport Hotel from \"./components/HotelsPage/Hotels\";\r\nimport Restaurants from \"./components/RestaurantsPage/Restaurants\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport LoadingScreen from \"./components/Loader/LoadingScreen\";\r\nimport ChekoutPage from \"./components/ChekoutPage/ChekoutPage\";\r\nimport Confirmation from \"./components/Confirmation/Confirmation\"; \r\nimport UserProfile from \"./components/UserProfile/Profile\";\r\nimport Checkout2 from \"./components/CheckoutPage/Checkout2\";\r\nconst stripePromise = loadStripe('pk_test_51MqErmDG40mBr38yGJ5Efis4h3Sy1yPqbDVzGI0cVtt8t4dPVgK2B8nUf7pTJzhuY5I6JnI8Qpn1yReQRT9M5KL000i6zT7fco');\r\n\r\nfunction App() {\r\n  const [points, setPoints] = useState(0);\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const timer = setTimeout(() => setLoading(false), 2000);\r\n    return () => clearTimeout(timer);\r\n  }, [location.pathname]);\r\n\r\n  const handlePointsUpdate = (earnedPoints) => {\r\n    setPoints(prevPoints => prevPoints + earnedPoints);\r\n  };\r\n\r\n /* if (loading) return <LoadingScreen />;*/\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"main-content\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/login\" element={<LoginForm />} />\r\n          <Route path=\"/signup\" element={<SignupForm />} />\r\n          <Route path=\"/city\" element={<City />} /> \r\n          <Route path=\"/city/:cityName\" element={<CityPageWrapper />} />\r\n          <Route path=\"/restaurants\" element={<Restaurants />} />\r\n          <Route path=\"/UserCustomization\" element={<UserCustomization />} />\r\n          <Route path=\"/bookoption\" element={<BookingOptions />} />\r\n          <Route path=\"/BookHotel\" element={<BookHotel />} />\r\n          <Route path=\"/BookTransport\" element={<BookTransport />} />\r\n          <Route path=\"/PlanSelection\" element={<PlanSelection />} />\r\n          <Route path=\"/MiloChatbot\" element={<MiloChatbot />} /> \r\n          <Route path=\"/form-plan\" element={<ItineraryForm />} />\r\n          <Route path=\"/\" element={<Challenges />} />\r\n          <Route path=\"/crossword\" element={<CrosswordGrid />} />\r\n          <Route path=\"/hotels\" element={<Hotel />} />\r\n          <Route path=\"/profile\" element={<UserProfile />} />\r\n          <Route path=\"/quiz\" element={<Quiz onPointsUpdate={handlePointsUpdate} />} />\r\n          <Route path=\"/\" element={<ToursSection />} />\r\n                       <Route path=\"/all-trips\" element={<AllTrips />} />\r\n                      <Route path=\"/trip-details\" element={<TripDetails />} />\r\n          <Route \r\n            path=\"/checkout\" \r\n            element={\r\n              <Elements stripe={stripePromise}>\r\n                <CheckoutPage />\r\n              </Elements>\r\n            } \r\n          />\r\n            <Route \r\n            path=\"/chekout\" \r\n            element={\r\n              <Elements stripe={stripePromise}>\r\n                <ChekoutPage />\r\n              </Elements>\r\n            } \r\n          />\r\n          <Route \r\n            path=\"/checkout2\" \r\n            element={\r\n              <Elements stripe={stripePromise}>\r\n                <Checkout2 />\r\n              </Elements>\r\n            } />\r\n          <Route path=\"/cart\" element={<Cart />} />\r\n          <Route path=\"/confirmation\" element={<Confirmation />} />\r\n\r\n\r\n        </Routes>\r\n      </div>\r\n      <ConditionalFooter />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Wrapper component to handle city name from both URL params and state\r\nconst CityPageWrapper = () => {\r\n  const location = useLocation();\r\n  const cityName = location.state?.cityName || 'Islamabad'; // Default to Islamabad if no city specified\r\n\r\n  return <CityPage cityName={cityName} />;\r\n};\r\n\r\nconst ConditionalFooter = () => {\r\n  const location = useLocation();\r\n  const excludedRoutes = [\"/login\", \"/signup\"];\r\n  return !excludedRoutes.includes(location.pathname) ? <Footer /> : null;\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter> {/* Router moved here */}\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}