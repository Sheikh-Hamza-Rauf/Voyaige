{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Papa from \"papaparse\";\n// import \"./BookTransport.css\"; \n// import Navbar from \"../NavBar/Navbar\";\n// import { useNavigate } from \"react-router-dom\";  // Import useNavigate\n\n// const ConfirmationModal = ({ selectedItem, onConfirm, onCancel }) => {\n//   if (!selectedItem) return null;\n\n//   return (\n//     <div className=\"confirmation-modal\">\n//       <div className=\"modal-content\">\n//         <h2>Confirm Booking</h2>\n//         <p>Are you sure you want to book <strong>{selectedItem.name || selectedItem.car_name || selectedItem.bus_name}</strong>?</p>\n//         <p><strong>Price:</strong> {selectedItem.price || selectedItem.price_per_day} Rs</p>\n//         <div className=\"modal-buttons\">\n//           <button className=\"confirm-btn\" onClick={onConfirm}>Yes, Book Now</button>\n//           <button className=\"cancel-btn\" onClick={onCancel}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const BookTransport = () => {\n//   const [cars, setCars] = useState([]);\n//   const [buses, setBuses] = useState([]);\n//   const [trains, setTrains] = useState([]);\n//   const [selectedItem, setSelectedItem] = useState(null);\n//   const [isBooking, setIsBooking] = useState(false);\n//   const [showConfirmPopup, setShowConfirmPopup] = useState(false);  // State for controlling the confirmation popup\n//   const [notification, setNotification] = useState(\"\"); // State for managing notifications\n//   const [filter, setFilter] = useState({\n//     name: \"\",\n//     price: \"\",\n//     city: \"\"\n//   });\n//   const [sortBy, setSortBy] = useState(\"price\");  // Default sorting by price\n//   const navigate = useNavigate();  // useNavigate hook for navigation\n//   const [showNotification, setShowNotification] = useState(false);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const carResponse = await fetch(\"/Cleaned_Cars.csv\");\n//         const busResponse = await fetch(\"/Cleaned_busses.csv\");\n//         const trainResponse = await fetch(\"/Cleaned_trains.csv\");\n\n//         const carText = await carResponse.text();\n//         const busText = await busResponse.text();\n//         const trainText = await trainResponse.text();\n\n//         Papa.parse(carText, {\n//           header: true,\n//           complete: (result) => {\n//             console.log(\"Cars data:\", result.data);\n//             setCars(result.data);\n//           },\n//         });\n\n//         Papa.parse(busText, {\n//           header: true,\n//           complete: (result) => setBuses(result.data),\n//         });\n\n//         Papa.parse(trainText, {\n//           header: true,\n//           complete: (result) => {\n//             setTrains(result.data);\n//           },\n\n//         });\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);  \n\n//     // Function to get the image path based on transport type\n//     const getImagePath = (name, type) => {\n//       const nameLower = name ? name.toLowerCase() : \"\";\n\n//       if (type === \"bus\") {\n//         const busImages = [\n//           \"akmovers\", \"daewoo\", \"e.k.movers\", \"fmtravels\", \"mashabrum\",\n//           \"natco\", \"qconnect\", \"roadmaster\", \"skyways\", \"warraich\"\n//         ];\n//         const matchedBus = busImages.find(img => nameLower.includes(img));\n//         return matchedBus ? `/images/${matchedBus}.jpg` : \"/images/bus.jpg\";\n//       }\n\n//       if (type === \"train\") {\n//         const trainImages = [\"fareed_express\", \"mehr_express\", \"rawalpindi_express\", \"subak_karam\"];\n//         const matchedTrain = trainImages.find(img => nameLower.includes(img)); \n//         return matchedTrain ? `/images_trains/${matchedTrain}.jpg` : \"/images_trains/rawalpindi_express.jpg\";\n//       }\n\n//       if (type === \"car\") {\n//         const carImages = [\n//           \"karvaan\", \"brv\", \"city\", \"prado\",\n//           \"wagon r\", \"fielder\",\n//           \"fortuner\", \"corolla\", \"hiace\",\n//           \"yaris\", \"voxy\", \"civic\", \"land cruiser\", \"alto\",\n//           \"cultus\", \"coaster\", \"revo\"\n//         ];\n//         const matchedCar = carImages.find(img => nameLower.includes(img));\n//         return matchedCar ? `/images_cars/${matchedCar}.jpg` : \"/images_cars/car.jpg\";\n//       }\n\n//       return \"\";\n//     };\n\n//   // Modify the handleBooking to show the popup with the selected item\n//   const handleBooking = (item) => {\n//     setSelectedItem(item);  // Set selected item for booking\n//     setShowConfirmPopup(true);  // Show the confirmation popup\n//   };\n\n//   const confirmBooking = () => {\n//     setShowConfirmPopup(false);\n//     localStorage.setItem(\"selectedTransport\", JSON.stringify(selectedItem));\n\n//     setNotification(`✅ You have successfully booked ${selectedItem.name || selectedItem.car_name || selectedItem.bus_name}`);\n//     setShowNotification(true);\n\n//     // Ensure the notification is displayed before redirecting\n//     setTimeout(() => {\n//       setShowNotification(false);\n//       navigate(\"/bookoption\");\n//     }, 1000); // Increased timeout to 1 seconds for better visibility\n//   };\n\n//   const cancelBooking = () => {\n//     setShowConfirmPopup(false);\n//     setSelectedItem(null);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilter((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSortChange = (e) => {\n//     setSortBy(e.target.value);\n//   };\n\n//   // Filter and sort transport items\n//   const filteredCars = cars.filter((car) => {\n//     return (\n//       (car.car_name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\n//       (car.price_per_day >= filter.price || !filter.price)\n//     );\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price_per_day - b.price_per_day : a.car_name.localeCompare(b.car_name)));\n\n//   const filteredBuses = buses.filter((bus) => {\n//     return (\n//       (bus.name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\n//       (bus.price >= filter.price || !filter.price) &&\n//       (bus.starting?.toLowerCase().includes(filter.city.toLowerCase()) || !filter.city)\n//     );\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price - b.price : a.name.localeCompare(b.name)));\n\n//   const filteredTrains = trains.filter((train) => {\n//     return (\n//       (train.name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\n//       (train.price >= filter.price || !filter.price) &&\n//       (train.starting?.toLowerCase().includes(filter.city.toLowerCase()) || !filter.city)\n//     );\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price - b.price : a.name.localeCompare(b.name)));\n\n//   return (\n//     <div className=\"book-transport\">\n//       <Navbar />\n//       {/* Back Arrow Icon */}\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/bookoption\")}>\n//         ←\n//       </div>\n\n//       <div className=\"trans\">\n//         <h2>Customize Your Transport</h2>\n\n//         {/* Filter and Sort */}\n//         <div className=\"filters\">\n//           <input \n//             type=\"text\" \n//             name=\"name\" \n//             placeholder=\"Filter by Name\" \n//             value={filter.name} \n//             onChange={handleFilterChange}\n//           />\n//           <input \n//             type=\"number\" \n//             name=\"price\" \n//             placeholder=\"Filter by Price\" \n//             value={filter.price} \n//             onChange={handleFilterChange}\n//           />\n//           <input \n//             type=\"text\" \n//             name=\"city\" \n//             placeholder=\"Filter by City\" \n//             value={filter.city} \n//             onChange={handleFilterChange}\n//           />\n//           <select onChange={handleSortChange} value={sortBy}>\n//             <option value=\"price\">Sort by Price</option>\n//             <option value=\"name\">Sort by Name</option>\n//           </select>\n//         </div>\n\n//         {/* Cars Section with Carousel */}\n//         <div className=\"transport-section\">\n//         <h3>Cars</h3>\n//         <div className=\"carousel\">\n//           {filteredCars.length > 0 ? (\n//               filteredCars.map((car, index) => {\n//               console.log(\"Rendering Car:\", car);\n//               const carImage = getImagePath(car?.car_name || car?.brand_Name, \"car\");\n//               console.log(\"Filtered Cars:\", filteredCars);\n//               console.log(\"Car image path:\", carImage); // Debugging log\n//               console.log(\"Car Object Keys:\", Object.keys(filteredCars[0] || {}));\n//               return (\n//                 <div\n//                   key={index}\n//                   className=\"carousel-item\"\n//                   onClick={() => handleBooking(car)} // Handle booking for each car\n//                 >\n//                   <img src={carImage} alt={car?.car_name || \"Car\"} className=\"transport-image\" />\n//                   <p>\n//                     {car?.brand_Name || \"Unknown Brand\"} {car?.car_name || \"Unknown Car\"} -{\" \"}\n//                     {car?.price_per_day || \"Price Not Available\"} per day\n//                   </p>\n//                   <p>\n//                     {car?.doors || \"N/A\"} Doors, {car?.passengers || \"N/A\"} Passengers,{\" \"}\n//                     {car?.transmission || \"N/A\"} Transmission,{\" \"}\n//                     {car?.ac ? \"AC Available\" : \"No AC\"}\n//                   </p>\n//                   <button>Book</button>\n//                 </div>\n//               );\n//             })\n//           ) : (\n//             <p>Loading Cars...</p>\n//           )}\n//         </div>\n//       </div>\n\n//         {/* Buses Section */}\n//         <div className=\"transport-section\">\n//           <h3>Buses</h3>\n//           {filteredBuses.length > 0 ? (\n//             filteredBuses.map((bus, index) => {\n//               const busImage = getImagePath(bus.name, \"bus\");\n//               return (\n//                 <div key={index} className=\"transport-item\" onClick={() => handleBooking(bus)}>  \n//                   <img src={busImage} alt={bus.name} className=\"transport-image\" />\n//                   <p>\n//                     {bus.name} - {bus.departure_time} - {bus.price} PKR\n//                   </p>\n//                   <p>\n//                     From: {bus.starting || \"Unknown\"} To: {bus.ending || \"Unknown\"}\n//                   </p>\n//                   <button>Book</button>\n//                 </div>\n//               );\n//             })\n//           ) : (\n//             <p>Loading buses...</p>\n//           )}\n//         </div>\n\n//         {/* Trains Section */}\n//         <div className=\"transport-section\">\n//           <h3>Trains</h3>\n//           {filteredTrains.length > 0 ? (\n//             filteredTrains.map((train, index) => {\n//               const trainImage = getImagePath(train.name, \"train\");\n//               return (\n//                 <div key={index} className=\"transport-item\" onClick={() => handleBooking(train)}>  \n//                   <img src={trainImage} alt={train.name} className=\"transport-image\" />\n//                   <p>\n//                     {train.name || \"Unknown Train\"} - {train.departure_time || \"--\"} -{\" \"}\n//                     {train.price ? `${train.price} PKR` : \"Price Not Available\"}\n//                   </p>\n//                   <p>\n//                     From: {train.starting || \"Unknown\"} To: {train.ending || \"Unknown\"}\n//                   </p>\n//                   <button>Book</button>\n//                 </div>\n//               );\n//             })\n//           ) : (\n//             <p>Loading trains...</p>\n//           )}\n//         </div>\n\n//         {/* Confirmation Pop-up */}\n//         {showConfirmPopup && (\n//           <div className=\"popup\">\n//             <div className=\"popup-content\">\n//               <span className=\"close\" onClick={cancelBooking}>&times;</span>\n//               <h3>Booking Confirmation</h3>\n//               <p>Are you sure you want to book this transport?</p>\n//               <div className=\"details\">\n//                 {selectedItem.name && <p><strong>Name:</strong> {selectedItem.name}</p>}\n//                 {selectedItem.departure_time && <p><strong>Departure Time:</strong> {selectedItem.departure_time}</p>}\n//                 {selectedItem.price && <p><strong>Price:</strong> {selectedItem.price} PKR</p>}\n//                 {selectedItem.passengers && <p><strong>Passengers:</strong> {selectedItem.passengers}</p>}\n//                 {selectedItem.starting && <p><strong>From:</strong> {selectedItem.starting}</p>}\n//                 {selectedItem.ending && <p><strong>To:</strong> {selectedItem.ending}</p>}\n//               </div>\n//               <button onClick={confirmBooking}>Confirm</button>\n//               <button onClick={cancelBooking}>Cancel</button>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Notification */}\n//         {showNotification && <div className=\"notification\">{notification}</div>}\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookTransport;","map":{"version":3,"names":[],"sources":["F:/Web/Voyaige/Voyaige/proj/front/src/components/Booking/BookTransport.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Papa from \"papaparse\";\r\n// import \"./BookTransport.css\"; \r\n// import Navbar from \"../NavBar/Navbar\";\r\n// import { useNavigate } from \"react-router-dom\";  // Import useNavigate\r\n\r\n// const ConfirmationModal = ({ selectedItem, onConfirm, onCancel }) => {\r\n//   if (!selectedItem) return null;\r\n\r\n//   return (\r\n//     <div className=\"confirmation-modal\">\r\n//       <div className=\"modal-content\">\r\n//         <h2>Confirm Booking</h2>\r\n//         <p>Are you sure you want to book <strong>{selectedItem.name || selectedItem.car_name || selectedItem.bus_name}</strong>?</p>\r\n//         <p><strong>Price:</strong> {selectedItem.price || selectedItem.price_per_day} Rs</p>\r\n//         <div className=\"modal-buttons\">\r\n//           <button className=\"confirm-btn\" onClick={onConfirm}>Yes, Book Now</button>\r\n//           <button className=\"cancel-btn\" onClick={onCancel}>Cancel</button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const BookTransport = () => {\r\n//   const [cars, setCars] = useState([]);\r\n//   const [buses, setBuses] = useState([]);\r\n//   const [trains, setTrains] = useState([]);\r\n//   const [selectedItem, setSelectedItem] = useState(null);\r\n//   const [isBooking, setIsBooking] = useState(false);\r\n//   const [showConfirmPopup, setShowConfirmPopup] = useState(false);  // State for controlling the confirmation popup\r\n//   const [notification, setNotification] = useState(\"\"); // State for managing notifications\r\n//   const [filter, setFilter] = useState({\r\n//     name: \"\",\r\n//     price: \"\",\r\n//     city: \"\"\r\n//   });\r\n//   const [sortBy, setSortBy] = useState(\"price\");  // Default sorting by price\r\n//   const navigate = useNavigate();  // useNavigate hook for navigation\r\n//   const [showNotification, setShowNotification] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const carResponse = await fetch(\"/Cleaned_Cars.csv\");\r\n//         const busResponse = await fetch(\"/Cleaned_busses.csv\");\r\n//         const trainResponse = await fetch(\"/Cleaned_trains.csv\");\r\n  \r\n//         const carText = await carResponse.text();\r\n//         const busText = await busResponse.text();\r\n//         const trainText = await trainResponse.text();\r\n  \r\n//         Papa.parse(carText, {\r\n//           header: true,\r\n//           complete: (result) => {\r\n//             console.log(\"Cars data:\", result.data);\r\n//             setCars(result.data);\r\n//           },\r\n//         });\r\n  \r\n//         Papa.parse(busText, {\r\n//           header: true,\r\n//           complete: (result) => setBuses(result.data),\r\n//         });\r\n  \r\n//         Papa.parse(trainText, {\r\n//           header: true,\r\n//           complete: (result) => {\r\n//             setTrains(result.data);\r\n//           },\r\n\r\n//         });\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n  \r\n//     fetchData();\r\n//   }, []);  \r\n\r\n//     // Function to get the image path based on transport type\r\n//     const getImagePath = (name, type) => {\r\n//       const nameLower = name ? name.toLowerCase() : \"\";\r\n    \r\n//       if (type === \"bus\") {\r\n//         const busImages = [\r\n//           \"akmovers\", \"daewoo\", \"e.k.movers\", \"fmtravels\", \"mashabrum\",\r\n//           \"natco\", \"qconnect\", \"roadmaster\", \"skyways\", \"warraich\"\r\n//         ];\r\n//         const matchedBus = busImages.find(img => nameLower.includes(img));\r\n//         return matchedBus ? `/images/${matchedBus}.jpg` : \"/images/bus.jpg\";\r\n//       }\r\n    \r\n//       if (type === \"train\") {\r\n//         const trainImages = [\"fareed_express\", \"mehr_express\", \"rawalpindi_express\", \"subak_karam\"];\r\n//         const matchedTrain = trainImages.find(img => nameLower.includes(img)); \r\n//         return matchedTrain ? `/images_trains/${matchedTrain}.jpg` : \"/images_trains/rawalpindi_express.jpg\";\r\n//       }\r\n    \r\n//       if (type === \"car\") {\r\n//         const carImages = [\r\n//           \"karvaan\", \"brv\", \"city\", \"prado\",\r\n//           \"wagon r\", \"fielder\",\r\n//           \"fortuner\", \"corolla\", \"hiace\",\r\n//           \"yaris\", \"voxy\", \"civic\", \"land cruiser\", \"alto\",\r\n//           \"cultus\", \"coaster\", \"revo\"\r\n//         ];\r\n//         const matchedCar = carImages.find(img => nameLower.includes(img));\r\n//         return matchedCar ? `/images_cars/${matchedCar}.jpg` : \"/images_cars/car.jpg\";\r\n//       }\r\n    \r\n//       return \"\";\r\n//     };\r\n    \r\n\r\n//   // Modify the handleBooking to show the popup with the selected item\r\n//   const handleBooking = (item) => {\r\n//     setSelectedItem(item);  // Set selected item for booking\r\n//     setShowConfirmPopup(true);  // Show the confirmation popup\r\n//   };\r\n\r\n//   const confirmBooking = () => {\r\n//     setShowConfirmPopup(false);\r\n//     localStorage.setItem(\"selectedTransport\", JSON.stringify(selectedItem));\r\n  \r\n//     setNotification(`✅ You have successfully booked ${selectedItem.name || selectedItem.car_name || selectedItem.bus_name}`);\r\n//     setShowNotification(true);\r\n  \r\n//     // Ensure the notification is displayed before redirecting\r\n//     setTimeout(() => {\r\n//       setShowNotification(false);\r\n//       navigate(\"/bookoption\");\r\n//     }, 1000); // Increased timeout to 1 seconds for better visibility\r\n//   };\r\n  \r\n\r\n//   const cancelBooking = () => {\r\n//     setShowConfirmPopup(false);\r\n//     setSelectedItem(null);\r\n//   };\r\n\r\n//   const handleFilterChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFilter((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleSortChange = (e) => {\r\n//     setSortBy(e.target.value);\r\n//   };\r\n\r\n//   // Filter and sort transport items\r\n//   const filteredCars = cars.filter((car) => {\r\n//     return (\r\n//       (car.car_name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\r\n//       (car.price_per_day >= filter.price || !filter.price)\r\n//     );\r\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price_per_day - b.price_per_day : a.car_name.localeCompare(b.car_name)));\r\n\r\n//   const filteredBuses = buses.filter((bus) => {\r\n//     return (\r\n//       (bus.name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\r\n//       (bus.price >= filter.price || !filter.price) &&\r\n//       (bus.starting?.toLowerCase().includes(filter.city.toLowerCase()) || !filter.city)\r\n//     );\r\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price - b.price : a.name.localeCompare(b.name)));\r\n\r\n//   const filteredTrains = trains.filter((train) => {\r\n//     return (\r\n//       (train.name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\r\n//       (train.price >= filter.price || !filter.price) &&\r\n//       (train.starting?.toLowerCase().includes(filter.city.toLowerCase()) || !filter.city)\r\n//     );\r\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price - b.price : a.name.localeCompare(b.name)));\r\n  \r\n\r\n//   return (\r\n//     <div className=\"book-transport\">\r\n//       <Navbar />\r\n//       {/* Back Arrow Icon */}\r\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/bookoption\")}>\r\n//         ←\r\n//       </div>\r\n      \r\n//       <div className=\"trans\">\r\n//         <h2>Customize Your Transport</h2>\r\n\r\n//         {/* Filter and Sort */}\r\n//         <div className=\"filters\">\r\n//           <input \r\n//             type=\"text\" \r\n//             name=\"name\" \r\n//             placeholder=\"Filter by Name\" \r\n//             value={filter.name} \r\n//             onChange={handleFilterChange}\r\n//           />\r\n//           <input \r\n//             type=\"number\" \r\n//             name=\"price\" \r\n//             placeholder=\"Filter by Price\" \r\n//             value={filter.price} \r\n//             onChange={handleFilterChange}\r\n//           />\r\n//           <input \r\n//             type=\"text\" \r\n//             name=\"city\" \r\n//             placeholder=\"Filter by City\" \r\n//             value={filter.city} \r\n//             onChange={handleFilterChange}\r\n//           />\r\n//           <select onChange={handleSortChange} value={sortBy}>\r\n//             <option value=\"price\">Sort by Price</option>\r\n//             <option value=\"name\">Sort by Name</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Cars Section with Carousel */}\r\n//         <div className=\"transport-section\">\r\n//         <h3>Cars</h3>\r\n//         <div className=\"carousel\">\r\n//           {filteredCars.length > 0 ? (\r\n//               filteredCars.map((car, index) => {\r\n//               console.log(\"Rendering Car:\", car);\r\n//               const carImage = getImagePath(car?.car_name || car?.brand_Name, \"car\");\r\n//               console.log(\"Filtered Cars:\", filteredCars);\r\n//               console.log(\"Car image path:\", carImage); // Debugging log\r\n//               console.log(\"Car Object Keys:\", Object.keys(filteredCars[0] || {}));\r\n//               return (\r\n//                 <div\r\n//                   key={index}\r\n//                   className=\"carousel-item\"\r\n//                   onClick={() => handleBooking(car)} // Handle booking for each car\r\n//                 >\r\n//                   <img src={carImage} alt={car?.car_name || \"Car\"} className=\"transport-image\" />\r\n//                   <p>\r\n//                     {car?.brand_Name || \"Unknown Brand\"} {car?.car_name || \"Unknown Car\"} -{\" \"}\r\n//                     {car?.price_per_day || \"Price Not Available\"} per day\r\n//                   </p>\r\n//                   <p>\r\n//                     {car?.doors || \"N/A\"} Doors, {car?.passengers || \"N/A\"} Passengers,{\" \"}\r\n//                     {car?.transmission || \"N/A\"} Transmission,{\" \"}\r\n//                     {car?.ac ? \"AC Available\" : \"No AC\"}\r\n//                   </p>\r\n//                   <button>Book</button>\r\n//                 </div>\r\n//               );\r\n//             })\r\n//           ) : (\r\n//             <p>Loading Cars...</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n\r\n//         {/* Buses Section */}\r\n//         <div className=\"transport-section\">\r\n//           <h3>Buses</h3>\r\n//           {filteredBuses.length > 0 ? (\r\n//             filteredBuses.map((bus, index) => {\r\n//               const busImage = getImagePath(bus.name, \"bus\");\r\n//               return (\r\n//                 <div key={index} className=\"transport-item\" onClick={() => handleBooking(bus)}>  \r\n//                   <img src={busImage} alt={bus.name} className=\"transport-image\" />\r\n//                   <p>\r\n//                     {bus.name} - {bus.departure_time} - {bus.price} PKR\r\n//                   </p>\r\n//                   <p>\r\n//                     From: {bus.starting || \"Unknown\"} To: {bus.ending || \"Unknown\"}\r\n//                   </p>\r\n//                   <button>Book</button>\r\n//                 </div>\r\n//               );\r\n//             })\r\n//           ) : (\r\n//             <p>Loading buses...</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Trains Section */}\r\n//         <div className=\"transport-section\">\r\n//           <h3>Trains</h3>\r\n//           {filteredTrains.length > 0 ? (\r\n//             filteredTrains.map((train, index) => {\r\n//               const trainImage = getImagePath(train.name, \"train\");\r\n//               return (\r\n//                 <div key={index} className=\"transport-item\" onClick={() => handleBooking(train)}>  \r\n//                   <img src={trainImage} alt={train.name} className=\"transport-image\" />\r\n//                   <p>\r\n//                     {train.name || \"Unknown Train\"} - {train.departure_time || \"--\"} -{\" \"}\r\n//                     {train.price ? `${train.price} PKR` : \"Price Not Available\"}\r\n//                   </p>\r\n//                   <p>\r\n//                     From: {train.starting || \"Unknown\"} To: {train.ending || \"Unknown\"}\r\n//                   </p>\r\n//                   <button>Book</button>\r\n//                 </div>\r\n//               );\r\n//             })\r\n//           ) : (\r\n//             <p>Loading trains...</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Confirmation Pop-up */}\r\n//         {showConfirmPopup && (\r\n//           <div className=\"popup\">\r\n//             <div className=\"popup-content\">\r\n//               <span className=\"close\" onClick={cancelBooking}>&times;</span>\r\n//               <h3>Booking Confirmation</h3>\r\n//               <p>Are you sure you want to book this transport?</p>\r\n//               <div className=\"details\">\r\n//                 {selectedItem.name && <p><strong>Name:</strong> {selectedItem.name}</p>}\r\n//                 {selectedItem.departure_time && <p><strong>Departure Time:</strong> {selectedItem.departure_time}</p>}\r\n//                 {selectedItem.price && <p><strong>Price:</strong> {selectedItem.price} PKR</p>}\r\n//                 {selectedItem.passengers && <p><strong>Passengers:</strong> {selectedItem.passengers}</p>}\r\n//                 {selectedItem.starting && <p><strong>From:</strong> {selectedItem.starting}</p>}\r\n//                 {selectedItem.ending && <p><strong>To:</strong> {selectedItem.ending}</p>}\r\n//               </div>\r\n//               <button onClick={confirmBooking}>Confirm</button>\r\n//               <button onClick={cancelBooking}>Cancel</button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Notification */}\r\n//         {showNotification && <div className=\"notification\">{notification}</div>}\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookTransport;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}