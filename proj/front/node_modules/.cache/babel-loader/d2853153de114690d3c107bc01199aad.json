{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\Voyaige\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\CheckoutPage\\\\CheckoutPage.js\";\n// import React, { useState, useEffect } from 'react';\n// import { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import { CreditCard, Lock, Calendar, User, Shield } from 'lucide-react';\n// import './CheckoutPage.css';\n// import Navbar from '../NavBar/Navbar';\n\n// const CheckoutPage = ({ tripData = {\n//   days: [\n//     { title: \"Plan + Flight + Hotel\", cost: 140000 },\n//     { title: \"Plan + Bus + Hotel\", cost: 25000 },\n//     { title: \"Plan + Car + Hotel\", cost: 32500 }\n//   ],\n//   discountPercentage: 10\n// } }) => {\n//   const stripe = useStripe();\n//   const elements = useElements();\n//   const navigate = useNavigate();\n\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [success, setSuccess] = useState(false);\n//   const [promoCode, setPromoCode] = useState('');\n//   const [isCardFocused, setIsCardFocused] = useState(false);\n\n//   // Calculate totals\n//   const subtotal = tripData.days.reduce((sum, day) => sum + day.cost, 0);\n//   const discount = (subtotal * tripData.discountPercentage) / 100;\n//   const total = subtotal - discount;\n\n//   useEffect(() => {\n//     if (success) {\n//       const timer = setTimeout(() => {\n//         navigate('/cart');\n//       }, 3000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [success, navigate]);\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     setLoading(true);\n\n//     if (!stripe || !elements) return;\n\n//     try {\n//       const { data: { clientSecret } } = await axios.post('http://localhost:5000/create-payment-intent', {\n//         amount: total\n//       });\n\n//       const { error: stripeError } = await stripe.confirmCardPayment(clientSecret, {\n//         payment_method: {\n//           card: elements.getElement(CardElement),\n//         }\n//       });\n\n//       if (stripeError) {\n//         setError(stripeError.message);\n//         setSuccess(false);\n//       } else {\n//         setSuccess(true);\n//         setError(null);\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//       setSuccess(false);\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div className=\"checkout-container\">\n//       <Navbar />\n//       <div className=\"checkout-content fade-in\">\n//         <div className=\"checkout-header\">\n//           <h1>Complete Your Payment</h1>\n//           <div className=\"secure-badge\">\n//             <Shield size={18} /> Secured & Encrypted\n//           </div>\n//         </div>\n\n//         <div className=\"checkout-grid\">\n//           <div className=\"summary-card\">\n//             <div className=\"card-header\">\n//               <h2>Trip Summary</h2>\n//               <CreditCard size={20} />\n//             </div>\n\n//             <div className=\"cost-breakdown\">\n//               {tripData.days.map((day, index) => (\n//                 <div key={index} className=\"cost-item slide-in\">\n//                   <span>Day {index + 1}: {day.title}</span>\n//                   <span className=\"cost\">{day.cost.toLocaleString()}</span>\n//                 </div>\n//               ))}\n\n//               <div className=\"cost-divider\"></div>\n\n//               <div className=\"subtotal cost-item\">\n//                 <span>Sub-total</span>\n//                 <span className=\"cost\">{subtotal.toLocaleString()}</span>\n//               </div>\n\n//               <div className=\"discount cost-item\">\n//                 <span>Points Discount ({tripData.discountPercentage}%)</span>\n//                 <span className=\"cost-discount\">-{discount.toLocaleString()}</span>\n//               </div>\n\n//               <div className=\"total cost-item\">\n//                 <span>Total Amount</span>\n//                 <span className=\"cost-total\">{total.toLocaleString()}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"promosection\">\n//               <h3>Promo Code</h3>\n//               <div className=\"promo-input\">\n//                 <input \n//                   type=\"text\" \n//                   value={promoCode}\n//                   onChange={(e) => setPromoCode(e.target.value)}\n//                   placeholder=\"Enter your code\"\n//                 />\n//                 <button className=\"promo-button\">Apply</button>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"payment-card\">\n//             <div className=\"card-header\">\n//               <h2>Card Payment</h2>\n//               <Lock size={20} />\n//             </div>\n\n//             <form onSubmit={handleSubmit} className=\"payment-form\">\n//               <div className={`stripe-card ${isCardFocused ? 'focused' : ''}`}>\n//                 <CardElement \n//                   onFocus={() => setIsCardFocused(true)}\n//                   onBlur={() => setIsCardFocused(false)}\n//                   options={{\n//                     style: {\n//                       base: {\n//                         fontSize: '16px',\n//                         fontWeight: '500',\n//                         fontFamily: 'Inter, system-ui, sans-serif',\n//                         color: '#1a1f36',\n//                         '::placeholder': {\n//                           color: '#6b7280',\n//                         },\n//                         padding: '20px 0',\n//                       },\n//                       invalid: {\n//                         color: '#ef4444',\n//                       },\n//                     },\n//                   }}\n//                 />\n//               </div>\n\n//               {error && <div className=\"error-message slide-in\">{error}</div>}\n//               {success && <div className=\"success-message slide-in\">Payment successful! Redirecting...</div>}\n\n//               <button \n//                 className={`payment-button ${loading ? 'loading' : ''}`}\n//                 type=\"submit\"\n//                 disabled={!stripe || loading}\n//               >\n//                 {loading ? (\n//                   <>\n//                     <div className=\"spinner\"></div>\n//                     Processing Payment...\n//                   </>\n//                 ) : (\n//                   <>\n//                     <Lock size={18} />\n//                     Pay {total.toLocaleString()}\n//                   </>\n//                 )}\n//               </button>\n//             </form>\n\n//             <div className=\"security-info\">\n//               <Shield size={16} />\n//               <span>Your payment information is encrypted and secure</span>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CheckoutPage;\n\nimport React, { useState, useEffect } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { CreditCard, Lock, Calendar, User, Shield } from 'lucide-react';\nimport './CheckoutPage.css';\nimport Navbar from '../NavBar/Navbar';\nconst CheckoutPage = ({\n  tripData = {\n    days: [{\n      title: \"Plan + Flight + Hotel\",\n      cost: 140000\n    }, {\n      title: \"Plan + Bus + Hotel\",\n      cost: 25000\n    }, {\n      title: \"Plan + Car + Hotel\",\n      cost: 32500\n    }],\n    discountPercentage: 10\n  }\n}) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [promoCode, setPromoCode] = useState('');\n  const [isCardFocused, setIsCardFocused] = useState(false);\n\n  // Calculate totals\n  const subtotal = tripData.days.reduce((sum, day) => sum + day.cost, 0);\n  const discount = subtotal * tripData.discountPercentage / 100;\n  const total = subtotal - discount;\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        navigate('/cart');\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [success, navigate]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    if (!stripe || !elements) {\n      setError(\"Stripe has not been properly initialized\");\n      setLoading(false);\n      return;\n    }\n    try {\n      // Make sure this URL matches your backend endpoint exactly\n      // If you're using a different port or path, update it here\n      const response = await axios.post('/api/create-payment-intent', {\n        amount: total\n      }, {\n        // Adding proper headers and error handling\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        validateStatus: status => status < 500 // Don't throw for 4xx errors so we can handle them\n      });\n\n      // Check for non-200 responses and handle appropriately\n      if (response.status !== 200) {\n        throw new Error(`Server responded with status ${response.status}: ${response.data.message || 'Unknown error'}`);\n      }\n      const {\n        clientSecret\n      } = response.data;\n      if (!clientSecret) {\n        throw new Error(\"No client secret returned from the server\");\n      }\n      const {\n        error: stripeError,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (stripeError) {\n        setError(stripeError.message);\n        setSuccess(false);\n      } else if (paymentIntent.status === 'succeeded') {\n        setSuccess(true);\n        setError(null);\n      } else {\n        setError(`Payment status: ${paymentIntent.status}. Please try again.`);\n        setSuccess(false);\n      }\n    } catch (err) {\n      console.error(\"Payment error:\", err);\n      setError(err.message || \"An error occurred while processing your payment\");\n      setSuccess(false);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-content fade-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, \"Complete Your Payment\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secure-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Shield, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }), \" Secured & Encrypted\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, \"Trip Summary\"), /*#__PURE__*/React.createElement(CreditCard, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cost-breakdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, tripData.days.map((day, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"cost-item slide-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }\n  }, \"Day \", index + 1, \": \", day.title), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }, day.cost.toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cost-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtotal cost-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  }, \"Sub-total\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, subtotal.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"discount cost-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, \"Points Discount (\", tripData.discountPercentage, \"%)\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cost-discount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, \"-\", discount.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total cost-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, \"Total Amount\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cost-total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, total.toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promosection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, \"Promo Code\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"promo-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: promoCode,\n    onChange: e => setPromoCode(e.target.value),\n    placeholder: \"Enter your code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"promo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }, \"Apply\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 15\n    }\n  }, \"Card Payment\"), /*#__PURE__*/React.createElement(Lock, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"payment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `stripe-card ${isCardFocused ? 'focused' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    onFocus: () => setIsCardFocused(true),\n    onBlur: () => setIsCardFocused(false),\n    options: {\n      style: {\n        base: {\n          fontSize: '16px',\n          fontWeight: '500',\n          fontFamily: 'Inter, system-ui, sans-serif',\n          color: '#1a1f36',\n          '::placeholder': {\n            color: '#6b7280'\n          },\n          padding: '20px 0'\n        },\n        invalid: {\n          color: '#ef4444'\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  })), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message slide-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 25\n    }\n  }, error), success && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"success-message slide-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 27\n    }\n  }, \"Payment successful! Redirecting...\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `payment-button ${loading ? 'loading' : ''}`,\n    type: \"submit\",\n    disabled: !stripe || loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }\n  }, loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 21\n    }\n  }), \"Processing Payment...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Lock, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }\n  }), \"Pay \", total.toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"security-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Shield, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 15\n    }\n  }, \"Your payment information is encrypted and secure\"))))));\n};\nexport default CheckoutPage;","map":{"version":3,"names":["React","useState","useEffect","CardElement","useStripe","useElements","useNavigate","axios","CreditCard","Lock","Calendar","User","Shield","Navbar","CheckoutPage","tripData","days","title","cost","discountPercentage","stripe","elements","navigate","loading","setLoading","error","setError","success","setSuccess","promoCode","setPromoCode","isCardFocused","setIsCardFocused","subtotal","reduce","sum","day","discount","total","timer","setTimeout","clearTimeout","handleSubmit","event","preventDefault","response","post","amount","headers","validateStatus","status","Error","data","message","clientSecret","stripeError","paymentIntent","confirmCardPayment","payment_method","card","getElement","err","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","size","map","index","key","toLocaleString","type","value","onChange","e","target","placeholder","onSubmit","onFocus","onBlur","options","style","base","fontSize","fontWeight","fontFamily","color","padding","invalid","disabled","Fragment"],"sources":["F:/Web/Voyaige/Voyaige/proj/front/src/components/CheckoutPage/CheckoutPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import { CreditCard, Lock, Calendar, User, Shield } from 'lucide-react';\r\n// import './CheckoutPage.css';\r\n// import Navbar from '../NavBar/Navbar';\r\n\r\n// const CheckoutPage = ({ tripData = {\r\n//   days: [\r\n//     { title: \"Plan + Flight + Hotel\", cost: 140000 },\r\n//     { title: \"Plan + Bus + Hotel\", cost: 25000 },\r\n//     { title: \"Plan + Car + Hotel\", cost: 32500 }\r\n//   ],\r\n//   discountPercentage: 10\r\n// } }) => {\r\n//   const stripe = useStripe();\r\n//   const elements = useElements();\r\n//   const navigate = useNavigate();\r\n  \r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [success, setSuccess] = useState(false);\r\n//   const [promoCode, setPromoCode] = useState('');\r\n//   const [isCardFocused, setIsCardFocused] = useState(false);\r\n\r\n//   // Calculate totals\r\n//   const subtotal = tripData.days.reduce((sum, day) => sum + day.cost, 0);\r\n//   const discount = (subtotal * tripData.discountPercentage) / 100;\r\n//   const total = subtotal - discount;\r\n\r\n//   useEffect(() => {\r\n//     if (success) {\r\n//       const timer = setTimeout(() => {\r\n//         navigate('/cart');\r\n//       }, 3000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [success, navigate]);\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     setLoading(true);\r\n    \r\n//     if (!stripe || !elements) return;\r\n\r\n//     try {\r\n//       const { data: { clientSecret } } = await axios.post('http://localhost:5000/create-payment-intent', {\r\n//         amount: total\r\n//       });\r\n\r\n//       const { error: stripeError } = await stripe.confirmCardPayment(clientSecret, {\r\n//         payment_method: {\r\n//           card: elements.getElement(CardElement),\r\n//         }\r\n//       });\r\n\r\n//       if (stripeError) {\r\n//         setError(stripeError.message);\r\n//         setSuccess(false);\r\n//       } else {\r\n//         setSuccess(true);\r\n//         setError(null);\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.message);\r\n//       setSuccess(false);\r\n//     }\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"checkout-container\">\r\n//       <Navbar />\r\n//       <div className=\"checkout-content fade-in\">\r\n//         <div className=\"checkout-header\">\r\n//           <h1>Complete Your Payment</h1>\r\n//           <div className=\"secure-badge\">\r\n//             <Shield size={18} /> Secured & Encrypted\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"checkout-grid\">\r\n//           <div className=\"summary-card\">\r\n//             <div className=\"card-header\">\r\n//               <h2>Trip Summary</h2>\r\n//               <CreditCard size={20} />\r\n//             </div>\r\n\r\n//             <div className=\"cost-breakdown\">\r\n//               {tripData.days.map((day, index) => (\r\n//                 <div key={index} className=\"cost-item slide-in\">\r\n//                   <span>Day {index + 1}: {day.title}</span>\r\n//                   <span className=\"cost\">{day.cost.toLocaleString()}</span>\r\n//                 </div>\r\n//               ))}\r\n              \r\n//               <div className=\"cost-divider\"></div>\r\n              \r\n//               <div className=\"subtotal cost-item\">\r\n//                 <span>Sub-total</span>\r\n//                 <span className=\"cost\">{subtotal.toLocaleString()}</span>\r\n//               </div>\r\n              \r\n//               <div className=\"discount cost-item\">\r\n//                 <span>Points Discount ({tripData.discountPercentage}%)</span>\r\n//                 <span className=\"cost-discount\">-{discount.toLocaleString()}</span>\r\n//               </div>\r\n              \r\n//               <div className=\"total cost-item\">\r\n//                 <span>Total Amount</span>\r\n//                 <span className=\"cost-total\">{total.toLocaleString()}</span>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"promosection\">\r\n//               <h3>Promo Code</h3>\r\n//               <div className=\"promo-input\">\r\n//                 <input \r\n//                   type=\"text\" \r\n//                   value={promoCode}\r\n//                   onChange={(e) => setPromoCode(e.target.value)}\r\n//                   placeholder=\"Enter your code\"\r\n//                 />\r\n//                 <button className=\"promo-button\">Apply</button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"payment-card\">\r\n//             <div className=\"card-header\">\r\n//               <h2>Card Payment</h2>\r\n//               <Lock size={20} />\r\n//             </div>\r\n\r\n//             <form onSubmit={handleSubmit} className=\"payment-form\">\r\n//               <div className={`stripe-card ${isCardFocused ? 'focused' : ''}`}>\r\n//                 <CardElement \r\n//                   onFocus={() => setIsCardFocused(true)}\r\n//                   onBlur={() => setIsCardFocused(false)}\r\n//                   options={{\r\n//                     style: {\r\n//                       base: {\r\n//                         fontSize: '16px',\r\n//                         fontWeight: '500',\r\n//                         fontFamily: 'Inter, system-ui, sans-serif',\r\n//                         color: '#1a1f36',\r\n//                         '::placeholder': {\r\n//                           color: '#6b7280',\r\n//                         },\r\n//                         padding: '20px 0',\r\n//                       },\r\n//                       invalid: {\r\n//                         color: '#ef4444',\r\n//                       },\r\n//                     },\r\n//                   }}\r\n//                 />\r\n//               </div>\r\n\r\n//               {error && <div className=\"error-message slide-in\">{error}</div>}\r\n//               {success && <div className=\"success-message slide-in\">Payment successful! Redirecting...</div>}\r\n\r\n//               <button \r\n//                 className={`payment-button ${loading ? 'loading' : ''}`}\r\n//                 type=\"submit\"\r\n//                 disabled={!stripe || loading}\r\n//               >\r\n//                 {loading ? (\r\n//                   <>\r\n//                     <div className=\"spinner\"></div>\r\n//                     Processing Payment...\r\n//                   </>\r\n//                 ) : (\r\n//                   <>\r\n//                     <Lock size={18} />\r\n//                     Pay {total.toLocaleString()}\r\n//                   </>\r\n//                 )}\r\n//               </button>\r\n//             </form>\r\n\r\n//             <div className=\"security-info\">\r\n//               <Shield size={16} />\r\n//               <span>Your payment information is encrypted and secure</span>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CheckoutPage;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { CreditCard, Lock, Calendar, User, Shield } from 'lucide-react';\r\nimport './CheckoutPage.css';\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nconst CheckoutPage = ({ tripData = {\r\n  days: [\r\n    { title: \"Plan + Flight + Hotel\", cost: 140000 },\r\n    { title: \"Plan + Bus + Hotel\", cost: 25000 },\r\n    { title: \"Plan + Car + Hotel\", cost: 32500 }\r\n  ],\r\n  discountPercentage: 10\r\n} }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const navigate = useNavigate();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [promoCode, setPromoCode] = useState('');\r\n  const [isCardFocused, setIsCardFocused] = useState(false);\r\n\r\n  // Calculate totals\r\n  const subtotal = tripData.days.reduce((sum, day) => sum + day.cost, 0);\r\n  const discount = (subtotal * tripData.discountPercentage) / 100;\r\n  const total = subtotal - discount;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      const timer = setTimeout(() => {\r\n        navigate('/cart');\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [success, navigate]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    \r\n    if (!stripe || !elements) {\r\n      setError(\"Stripe has not been properly initialized\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Make sure this URL matches your backend endpoint exactly\r\n      // If you're using a different port or path, update it here\r\n      const response = await axios.post('/api/create-payment-intent', {\r\n        amount: total\r\n      }, {\r\n        // Adding proper headers and error handling\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        validateStatus: (status) => status < 500, // Don't throw for 4xx errors so we can handle them\r\n      });\r\n      \r\n      // Check for non-200 responses and handle appropriately\r\n      if (response.status !== 200) {\r\n        throw new Error(`Server responded with status ${response.status}: ${response.data.message || 'Unknown error'}`);\r\n      }\r\n      \r\n      const { clientSecret } = response.data;\r\n      \r\n      if (!clientSecret) {\r\n        throw new Error(\"No client secret returned from the server\");\r\n      }\r\n\r\n      const { error: stripeError, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        }\r\n      });\r\n\r\n      if (stripeError) {\r\n        setError(stripeError.message);\r\n        setSuccess(false);\r\n      } else if (paymentIntent.status === 'succeeded') {\r\n        setSuccess(true);\r\n        setError(null);\r\n      } else {\r\n        setError(`Payment status: ${paymentIntent.status}. Please try again.`);\r\n        setSuccess(false);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Payment error:\", err);\r\n      setError(err.message || \"An error occurred while processing your payment\");\r\n      setSuccess(false);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkout-container\">\r\n      <Navbar />\r\n      <div className=\"checkout-content fade-in\">\r\n        <div className=\"checkout-header\">\r\n          <h1>Complete Your Payment</h1>\r\n          <div className=\"secure-badge\">\r\n            <Shield size={18} /> Secured & Encrypted\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"checkout-grid\">\r\n          <div className=\"summary-card\">\r\n            <div className=\"card-header\">\r\n              <h2>Trip Summary</h2>\r\n              <CreditCard size={20} />\r\n            </div>\r\n\r\n            <div className=\"cost-breakdown\">\r\n              {tripData.days.map((day, index) => (\r\n                <div key={index} className=\"cost-item slide-in\">\r\n                  <span>Day {index + 1}: {day.title}</span>\r\n                  <span className=\"cost\">{day.cost.toLocaleString()}</span>\r\n                </div>\r\n              ))}\r\n              \r\n              <div className=\"cost-divider\"></div>\r\n              \r\n              <div className=\"subtotal cost-item\">\r\n                <span>Sub-total</span>\r\n                <span className=\"cost\">{subtotal.toLocaleString()}</span>\r\n              </div>\r\n              \r\n              <div className=\"discount cost-item\">\r\n                <span>Points Discount ({tripData.discountPercentage}%)</span>\r\n                <span className=\"cost-discount\">-{discount.toLocaleString()}</span>\r\n              </div>\r\n              \r\n              <div className=\"total cost-item\">\r\n                <span>Total Amount</span>\r\n                <span className=\"cost-total\">{total.toLocaleString()}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"promosection\">\r\n              <h3>Promo Code</h3>\r\n              <div className=\"promo-input\">\r\n                <input \r\n                  type=\"text\" \r\n                  value={promoCode}\r\n                  onChange={(e) => setPromoCode(e.target.value)}\r\n                  placeholder=\"Enter your code\"\r\n                />\r\n                <button className=\"promo-button\">Apply</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"payment-card\">\r\n            <div className=\"card-header\">\r\n              <h2>Card Payment</h2>\r\n              <Lock size={20} />\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"payment-form\">\r\n              <div className={`stripe-card ${isCardFocused ? 'focused' : ''}`}>\r\n                <CardElement \r\n                  onFocus={() => setIsCardFocused(true)}\r\n                  onBlur={() => setIsCardFocused(false)}\r\n                  options={{\r\n                    style: {\r\n                      base: {\r\n                        fontSize: '16px',\r\n                        fontWeight: '500',\r\n                        fontFamily: 'Inter, system-ui, sans-serif',\r\n                        color: '#1a1f36',\r\n                        '::placeholder': {\r\n                          color: '#6b7280',\r\n                        },\r\n                        padding: '20px 0',\r\n                      },\r\n                      invalid: {\r\n                        color: '#ef4444',\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              {error && <div className=\"error-message slide-in\">{error}</div>}\r\n              {success && <div className=\"success-message slide-in\">Payment successful! Redirecting...</div>}\r\n\r\n              <button \r\n                className={`payment-button ${loading ? 'loading' : ''}`}\r\n                type=\"submit\"\r\n                disabled={!stripe || loading}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <div className=\"spinner\"></div>\r\n                    Processing Payment...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Lock size={18} />\r\n                    Pay {total.toLocaleString()}\r\n                  </>\r\n                )}\r\n              </button>\r\n            </form>\r\n\r\n            <div className=\"security-info\">\r\n              <Shield size={16} />\r\n              <span>Your payment information is encrypted and secure</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,QAAQ,cAAc;AACvE,OAAO,oBAAoB;AAC3B,OAAOC,MAAM,MAAM,kBAAkB;AAErC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ,GAAG;IAC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","ignoreList":[]},"metadata":{},"sourceType":"module"}