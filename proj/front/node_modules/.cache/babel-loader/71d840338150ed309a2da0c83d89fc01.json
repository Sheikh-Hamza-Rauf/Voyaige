{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState, useEffect } from 'react';\nimport './MiloChatbot.css';\nfunction MiloChatbot() {\n  const [userInput, setUserInput] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [tripDetails, setTripDetails] = useState({\n    startingCity: '',\n    destinationCity: '',\n    days: 0,\n    modeOfTransport: '',\n    budget: 0\n  });\n  const [missingDetail, setMissingDetail] = useState(null);\n  useEffect(() => {\n    const initialMessage = {\n      sender: 'bot',\n      message: \"Hi, I'm Milo! Let's plan your trip.\"\n    };\n    setConversation([initialMessage]);\n  }, []);\n  const handleChat = async e => {\n    e.preventDefault();\n    setConversation([...conversation, {\n      sender: 'user',\n      message: userInput\n    }]);\n    if (missingDetail) {\n      setTripDetails({\n        ...tripDetails,\n        [missingDetail]: userInput\n      });\n      setMissingDetail(null);\n      setUserInput('');\n      return;\n    }\n    const response = await fetch('http://127.0.0.1:5000/generate-itinerary', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_input: userInput,\n        ...tripDetails\n      })\n    });\n    const data = await response.json();\n    if (data.status === 'incomplete') {\n      const nextDetail = data.missing_details[0];\n      setMissingDetail(nextDetail);\n      setConversation([...conversation, {\n        sender: 'bot',\n        message: `Please provide your ${nextDetail}.`\n      }]);\n    } else if (data.status === 'success') {\n      setConversation([...conversation, {\n        sender: 'bot',\n        message: data.result\n      }]);\n    }\n    setUserInput('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, conversation.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat-message ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, msg.message))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleChat,\n    className: \"chat-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userInput,\n    onChange: e => setUserInput(e.target.value),\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n}\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","useEffect","MiloChatbot","userInput","setUserInput","conversation","setConversation","tripDetails","setTripDetails","startingCity","destinationCity","days","modeOfTransport","budget","missingDetail","setMissingDetail","initialMessage","sender","message","handleChat","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","user_input","data","json","status","nextDetail","missing_details","result","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","key","onSubmit","type","value","onChange","target","placeholder"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MiloChatbot.css';\r\n\r\nfunction MiloChatbot() {\r\n    const [userInput, setUserInput] = useState('');\r\n    const [conversation, setConversation] = useState([]);\r\n    const [tripDetails, setTripDetails] = useState({\r\n        startingCity: '',\r\n        destinationCity: '',\r\n        days: 0,\r\n        modeOfTransport: '',\r\n        budget: 0,\r\n    });\r\n    const [missingDetail, setMissingDetail] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const initialMessage = { sender: 'bot', message: \"Hi, I'm Milo! Let's plan your trip.\" };\r\n        setConversation([initialMessage]);\r\n    }, []);\r\n\r\n    const handleChat = async (e) => {\r\n        e.preventDefault();\r\n        setConversation([...conversation, { sender: 'user', message: userInput }]);\r\n\r\n        if (missingDetail) {\r\n            setTripDetails({\r\n                ...tripDetails,\r\n                [missingDetail]: userInput,\r\n            });\r\n            setMissingDetail(null);\r\n            setUserInput('');\r\n            return;\r\n        }\r\n\r\n        const response = await fetch('http://127.0.0.1:5000/generate-itinerary', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                user_input: userInput,\r\n                ...tripDetails,\r\n            }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'incomplete') {\r\n            const nextDetail = data.missing_details[0];\r\n            setMissingDetail(nextDetail);\r\n            setConversation([\r\n                ...conversation,\r\n                { sender: 'bot', message: `Please provide your ${nextDetail}.` },\r\n            ]);\r\n        } else if (data.status === 'success') {\r\n            setConversation([\r\n                ...conversation,\r\n                { sender: 'bot', message: data.result },\r\n            ]);\r\n        }\r\n\r\n        setUserInput('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot-container\">\r\n            <div className=\"chat-display\">\r\n                {conversation.map((msg, index) => (\r\n                    <div key={index} className={`chat-message ${msg.sender}`}>\r\n                        {msg.message}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <form onSubmit={handleChat} className=\"chat-input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={userInput}\r\n                    onChange={(e) => setUserInput(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}