{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\Voyaige\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\Booking\\\\BookTransport.js\";\n// import React, { useState, useEffect } from \"react\";\n// import Papa from \"papaparse\";\n// import \"./BookTransport.css\"; \n// import Navbar from \"../NavBar/Navbar\";\n// import { useNavigate } from \"react-router-dom\";  // Import useNavigate\n\n// const ConfirmationModal = ({ selectedItem, onConfirm, onCancel }) => {\n//   if (!selectedItem) return null;\n\n//   return (\n//     <div className=\"confirmation-modal\">\n//       <div className=\"modal-content\">\n//         <h2>Confirm Booking</h2>\n//         <p>Are you sure you want to book <strong>{selectedItem.name || selectedItem.car_name || selectedItem.bus_name}</strong>?</p>\n//         <p><strong>Price:</strong> {selectedItem.price || selectedItem.price_per_day} Rs</p>\n//         <div className=\"modal-buttons\">\n//           <button className=\"confirm-btn\" onClick={onConfirm}>Yes, Book Now</button>\n//           <button className=\"cancel-btn\" onClick={onCancel}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const BookTransport = () => {\n//   const [cars, setCars] = useState([]);\n//   const [buses, setBuses] = useState([]);\n//   const [trains, setTrains] = useState([]);\n//   const [selectedItem, setSelectedItem] = useState(null);\n//   const [isBooking, setIsBooking] = useState(false);\n//   const [showConfirmPopup, setShowConfirmPopup] = useState(false);  // State for controlling the confirmation popup\n//   const [notification, setNotification] = useState(\"\"); // State for managing notifications\n//   const [filter, setFilter] = useState({\n//     name: \"\",\n//     price: \"\",\n//     city: \"\"\n//   });\n//   const [sortBy, setSortBy] = useState(\"price\");  // Default sorting by price\n//   const navigate = useNavigate();  // useNavigate hook for navigation\n//   const [showNotification, setShowNotification] = useState(false);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const carResponse = await fetch(\"/Cleaned_Cars.csv\");\n//         const busResponse = await fetch(\"/Cleaned_busses.csv\");\n//         const trainResponse = await fetch(\"/Cleaned_trains.csv\");\n\n//         const carText = await carResponse.text();\n//         const busText = await busResponse.text();\n//         const trainText = await trainResponse.text();\n\n//         Papa.parse(carText, {\n//           header: true,\n//           complete: (result) => {\n//             console.log(\"Cars data:\", result.data);\n//             setCars(result.data);\n//           },\n//         });\n\n//         Papa.parse(busText, {\n//           header: true,\n//           complete: (result) => setBuses(result.data),\n//         });\n\n//         Papa.parse(trainText, {\n//           header: true,\n//           complete: (result) => {\n//             setTrains(result.data);\n//           },\n\n//         });\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);  \n\n//     // Function to get the image path based on transport type\n//     const getImagePath = (name, type) => {\n//       const nameLower = name ? name.toLowerCase() : \"\";\n\n//       if (type === \"bus\") {\n//         const busImages = [\n//           \"akmovers\", \"daewoo\", \"e.k.movers\", \"fmtravels\", \"mashabrum\",\n//           \"natco\", \"qconnect\", \"roadmaster\", \"skyways\", \"warraich\"\n//         ];\n//         const matchedBus = busImages.find(img => nameLower.includes(img));\n//         return matchedBus ? `/images/${matchedBus}.jpg` : \"/images/bus.jpg\";\n//       }\n\n//       if (type === \"train\") {\n//         const trainImages = [\"fareed_express\", \"mehr_express\", \"rawalpindi_express\", \"subak_karam\"];\n//         const matchedTrain = trainImages.find(img => nameLower.includes(img)); \n//         return matchedTrain ? `/images_trains/${matchedTrain}.jpg` : \"/images_trains/rawalpindi_express.jpg\";\n//       }\n\n//       if (type === \"car\") {\n//         const carImages = [\n//           \"karvaan\", \"brv\", \"city\", \"prado\",\n//           \"wagon r\", \"fielder\",\n//           \"fortuner\", \"corolla\", \"hiace\",\n//           \"yaris\", \"voxy\", \"civic\", \"land cruiser\", \"alto\",\n//           \"cultus\", \"coaster\", \"revo\"\n//         ];\n//         const matchedCar = carImages.find(img => nameLower.includes(img));\n//         return matchedCar ? `/images_cars/${matchedCar}.jpg` : \"/images_cars/car.jpg\";\n//       }\n\n//       return \"\";\n//     };\n\n//   // Modify the handleBooking to show the popup with the selected item\n//   const handleBooking = (item) => {\n//     setSelectedItem(item);  // Set selected item for booking\n//     setShowConfirmPopup(true);  // Show the confirmation popup\n//   };\n\n//   const confirmBooking = () => {\n//     setShowConfirmPopup(false);\n//     localStorage.setItem(\"selectedTransport\", JSON.stringify(selectedItem));\n\n//     setNotification(`✅ You have successfully booked ${selectedItem.name || selectedItem.car_name || selectedItem.bus_name}`);\n//     setShowNotification(true);\n\n//     // Ensure the notification is displayed before redirecting\n//     setTimeout(() => {\n//       setShowNotification(false);\n//       navigate(\"/bookoption\");\n//     }, 1000); // Increased timeout to 1 seconds for better visibility\n//   };\n\n//   const cancelBooking = () => {\n//     setShowConfirmPopup(false);\n//     setSelectedItem(null);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilter((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSortChange = (e) => {\n//     setSortBy(e.target.value);\n//   };\n\n//   // Filter and sort transport items\n//   const filteredCars = cars.filter((car) => {\n//     return (\n//       (car.car_name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\n//       (car.price_per_day >= filter.price || !filter.price)\n//     );\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price_per_day - b.price_per_day : a.car_name.localeCompare(b.car_name)));\n\n//   const filteredBuses = buses.filter((bus) => {\n//     return (\n//       (bus.name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\n//       (bus.price >= filter.price || !filter.price) &&\n//       (bus.starting?.toLowerCase().includes(filter.city.toLowerCase()) || !filter.city)\n//     );\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price - b.price : a.name.localeCompare(b.name)));\n\n//   const filteredTrains = trains.filter((train) => {\n//     return (\n//       (train.name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\n//       (train.price >= filter.price || !filter.price) &&\n//       (train.starting?.toLowerCase().includes(filter.city.toLowerCase()) || !filter.city)\n//     );\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price - b.price : a.name.localeCompare(b.name)));\n\n//   return (\n//     <div className=\"book-transport\">\n//       <Navbar />\n//       {/* Back Arrow Icon */}\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/bookoption\")}>\n//         ←\n//       </div>\n\n//       <div className=\"trans\">\n//         <h2>Customize Your Transport</h2>\n\n//         {/* Filter and Sort */}\n//         <div className=\"filters\">\n//           <input \n//             type=\"text\" \n//             name=\"name\" \n//             placeholder=\"Filter by Name\" \n//             value={filter.name} \n//             onChange={handleFilterChange}\n//           />\n//           <input \n//             type=\"number\" \n//             name=\"price\" \n//             placeholder=\"Filter by Price\" \n//             value={filter.price} \n//             onChange={handleFilterChange}\n//           />\n//           <input \n//             type=\"text\" \n//             name=\"city\" \n//             placeholder=\"Filter by City\" \n//             value={filter.city} \n//             onChange={handleFilterChange}\n//           />\n//           <select onChange={handleSortChange} value={sortBy}>\n//             <option value=\"price\">Sort by Price</option>\n//             <option value=\"name\">Sort by Name</option>\n//           </select>\n//         </div>\n\n//         {/* Cars Section with Carousel */}\n//         <div className=\"transport-section\">\n//         <h3>Cars</h3>\n//         <div className=\"carousel\">\n//           {filteredCars.length > 0 ? (\n//               filteredCars.map((car, index) => {\n//               console.log(\"Rendering Car:\", car);\n//               const carImage = getImagePath(car?.car_name || car?.brand_Name, \"car\");\n//               console.log(\"Filtered Cars:\", filteredCars);\n//               console.log(\"Car image path:\", carImage); // Debugging log\n//               console.log(\"Car Object Keys:\", Object.keys(filteredCars[0] || {}));\n//               return (\n//                 <div\n//                   key={index}\n//                   className=\"carousel-item\"\n//                   onClick={() => handleBooking(car)} // Handle booking for each car\n//                 >\n//                   <img src={carImage} alt={car?.car_name || \"Car\"} className=\"transport-image\" />\n//                   <p>\n//                     {car?.brand_Name || \"Unknown Brand\"} {car?.car_name || \"Unknown Car\"} -{\" \"}\n//                     {car?.price_per_day || \"Price Not Available\"} per day\n//                   </p>\n//                   <p>\n//                     {car?.doors || \"N/A\"} Doors, {car?.passengers || \"N/A\"} Passengers,{\" \"}\n//                     {car?.transmission || \"N/A\"} Transmission,{\" \"}\n//                     {car?.ac ? \"AC Available\" : \"No AC\"}\n//                   </p>\n//                   <button>Book</button>\n//                 </div>\n//               );\n//             })\n//           ) : (\n//             <p>Loading Cars...</p>\n//           )}\n//         </div>\n//       </div>\n\n//         {/* Buses Section */}\n//         <div className=\"transport-section\">\n//           <h3>Buses</h3>\n//           {filteredBuses.length > 0 ? (\n//             filteredBuses.map((bus, index) => {\n//               const busImage = getImagePath(bus.name, \"bus\");\n//               return (\n//                 <div key={index} className=\"transport-item\" onClick={() => handleBooking(bus)}>  \n//                   <img src={busImage} alt={bus.name} className=\"transport-image\" />\n//                   <p>\n//                     {bus.name} - {bus.departure_time} - {bus.price} PKR\n//                   </p>\n//                   <p>\n//                     From: {bus.starting || \"Unknown\"} To: {bus.ending || \"Unknown\"}\n//                   </p>\n//                   <button>Book</button>\n//                 </div>\n//               );\n//             })\n//           ) : (\n//             <p>Loading buses...</p>\n//           )}\n//         </div>\n\n//         {/* Trains Section */}\n//         <div className=\"transport-section\">\n//           <h3>Trains</h3>\n//           {filteredTrains.length > 0 ? (\n//             filteredTrains.map((train, index) => {\n//               const trainImage = getImagePath(train.name, \"train\");\n//               return (\n//                 <div key={index} className=\"transport-item\" onClick={() => handleBooking(train)}>  \n//                   <img src={trainImage} alt={train.name} className=\"transport-image\" />\n//                   <p>\n//                     {train.name || \"Unknown Train\"} - {train.departure_time || \"--\"} -{\" \"}\n//                     {train.price ? `${train.price} PKR` : \"Price Not Available\"}\n//                   </p>\n//                   <p>\n//                     From: {train.starting || \"Unknown\"} To: {train.ending || \"Unknown\"}\n//                   </p>\n//                   <button>Book</button>\n//                 </div>\n//               );\n//             })\n//           ) : (\n//             <p>Loading trains...</p>\n//           )}\n//         </div>\n\n//         {/* Confirmation Pop-up */}\n//         {showConfirmPopup && (\n//           <div className=\"popup\">\n//             <div className=\"popup-content\">\n//               <span className=\"close\" onClick={cancelBooking}>&times;</span>\n//               <h3>Booking Confirmation</h3>\n//               <p>Are you sure you want to book this transport?</p>\n//               <div className=\"details\">\n//                 {selectedItem.name && <p><strong>Name:</strong> {selectedItem.name}</p>}\n//                 {selectedItem.departure_time && <p><strong>Departure Time:</strong> {selectedItem.departure_time}</p>}\n//                 {selectedItem.price && <p><strong>Price:</strong> {selectedItem.price} PKR</p>}\n//                 {selectedItem.passengers && <p><strong>Passengers:</strong> {selectedItem.passengers}</p>}\n//                 {selectedItem.starting && <p><strong>From:</strong> {selectedItem.starting}</p>}\n//                 {selectedItem.ending && <p><strong>To:</strong> {selectedItem.ending}</p>}\n//               </div>\n//               <button onClick={confirmBooking}>Confirm</button>\n//               <button onClick={cancelBooking}>Cancel</button>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Notification */}\n//         {showNotification && <div className=\"notification\">{notification}</div>}\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookTransport;\n\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport \"./BookTransport.css\";\nimport Navbar from \"../NavBar/Navbar\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nconst ConfirmationModal = ({\n  selectedItem,\n  onConfirm,\n  onCancel\n}) => {\n  if (!selectedItem) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confirmation-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  }, \"Confirm Booking\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, \"Are you sure you want to book \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 42\n    }\n  }, selectedItem.name), \"?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 12\n    }\n  }, \"Price:\"), \" \", selectedItem.price, \" PKR\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-btn\",\n    onClick: onConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, \"Yes, Book Now\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cancel-btn\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\nconst BookTransport = () => {\n  const [buses, setBuses] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [showConfirmPopup, setShowConfirmPopup] = useState(false);\n  const [notification, setNotification] = useState(\"\");\n  const [showNotification, setShowNotification] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    customizationData,\n    currentDetails,\n    tripId\n  } = location.state || {};\n\n  // Get destination city from customizationData\n  const destinationCity = (customizationData === null || customizationData === void 0 ? void 0 : customizationData.destination) || \"\";\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const busResponse = await fetch(\"/Cleaned_busses.csv\");\n        const busText = await busResponse.text();\n        Papa.parse(busText, {\n          header: true,\n          complete: result => {\n            // Filter buses by destination city\n            const filteredBuses = result.data.filter(bus => bus.ending && bus.ending.toLowerCase() === destinationCity.toLowerCase()).sort((a, b) => {\n              // Sort by departure time - earlier times first\n              if (a.departure_time && b.departure_time) {\n                return a.departure_time.localeCompare(b.departure_time);\n              }\n              return 0;\n            }).slice(0, 5); // Take only top 5 buses\n\n            setBuses(filteredBuses);\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching bus data:\", error);\n      }\n    };\n    fetchData();\n  }, [destinationCity]);\n\n  // Function to get the image path for buses\n  const getBusImagePath = name => {\n    const nameLower = name ? name.toLowerCase() : \"\";\n    const busImages = [\"akmovers\", \"daewoo\", \"e.k.movers\", \"fmtravels\", \"mashabrum\", \"natco\", \"qconnect\", \"roadmaster\", \"skyways\", \"warraich\"];\n    const matchedBus = busImages.find(img => nameLower.includes(img));\n    return matchedBus ? `/images/${matchedBus}.jpg` : \"/images/bus.jpg\";\n  };\n  const handleBooking = item => {\n    setSelectedItem(item);\n    setShowConfirmPopup(true);\n  };\n  const confirmBooking = () => {\n    setShowConfirmPopup(false);\n\n    // Navigate back to booking options with the selected transport\n    navigate(\"/bookoption\", {\n      state: {\n        customizationData,\n        currentDetails: {\n          ...currentDetails,\n          transport: selectedItem\n        },\n        tripId\n      }\n    });\n  };\n  const cancelBooking = () => {\n    setShowConfirmPopup(false);\n    setSelectedItem(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"book-transport\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trans\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }\n  }, \"Choose Bus Transport to \", destinationCity), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transport-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, buses.length > 0 ? buses.map((bus, index) => {\n    const busImage = getBusImagePath(bus.name);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"transport-item\",\n      onClick: () => handleBooking(bus),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: busImage,\n      alt: bus.name,\n      className: \"transport-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transport-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }\n    }, bus.name || \"Bus Service\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transport-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 26\n      }\n    }, \"Departure:\"), \" \", bus.departure_time || \"Schedule not available\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 26\n      }\n    }, \"Route:\"), \" \", bus.starting || \"Origin\", \" \\u2192 \", bus.ending || \"Destination\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 26\n      }\n    }, \"Price:\"), \" \", bus.price ? `${bus.price} PKR` : \"Price not available\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 26\n      }\n    }, \"Type:\"), \" \", bus.type || \"Standard\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 26\n      }\n    }, \"Facilities:\"), \" \", bus.facilities || \"AC, Comfortable Seating, WiFi\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"book-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 21\n      }\n    }, \"Select This Bus\")));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-buses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }, \"No buses found going to \", destinationCity, \". Please try another destination.\"))), showConfirmPopup && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: cancelBooking,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 15\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 15\n    }\n  }, \"Booking Confirmation\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 15\n    }\n  }, \"Are you sure you want to book this bus?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 20\n    }\n  }, \"Name:\"), \" \", selectedItem.name || \"Bus Service\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 20\n    }\n  }, \"Departure Time:\"), \" \", selectedItem.departure_time || \"Not specified\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 20\n    }\n  }, \"Price:\"), \" \", selectedItem.price || \"0\", \" PKR\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 20\n    }\n  }, \"From:\"), \" \", selectedItem.starting || \"Origin\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 20\n    }\n  }, \"To:\"), \" \", selectedItem.ending || \"Destination\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 20\n    }\n  }, \"Type:\"), \" \", selectedItem.type || \"Standard\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confirmation-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-btnnn\",\n    onClick: confirmBooking,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 17\n    }\n  }, \"Confirm Booking\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cancel-btnnn\",\n    onClick: cancelBooking,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))), showNotification && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 30\n    }\n  }, notification)));\n};\nexport default BookTransport;","map":{"version":3,"names":["React","useState","useEffect","Papa","Navbar","useNavigate","useLocation","ConfirmationModal","selectedItem","onConfirm","onCancel","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","price","onClick","BookTransport","buses","setBuses","setSelectedItem","showConfirmPopup","setShowConfirmPopup","notification","setNotification","showNotification","setShowNotification","navigate","location","customizationData","currentDetails","tripId","state","destinationCity","destination","fetchData","busResponse","fetch","busText","text","parse","header","complete","result","filteredBuses","data","filter","bus","ending","toLowerCase","sort","a","b","departure_time","localeCompare","slice","error","console","getBusImagePath","nameLower","busImages","matchedBus","find","img","includes","handleBooking","item","confirmBooking","transport","cancelBooking","length","map","index","busImage","key","src","alt","starting","type","facilities"],"sources":["F:/Web/Voyaige/Voyaige/proj/front/src/components/Booking/BookTransport.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Papa from \"papaparse\";\r\n// import \"./BookTransport.css\"; \r\n// import Navbar from \"../NavBar/Navbar\";\r\n// import { useNavigate } from \"react-router-dom\";  // Import useNavigate\r\n\r\n// const ConfirmationModal = ({ selectedItem, onConfirm, onCancel }) => {\r\n//   if (!selectedItem) return null;\r\n\r\n//   return (\r\n//     <div className=\"confirmation-modal\">\r\n//       <div className=\"modal-content\">\r\n//         <h2>Confirm Booking</h2>\r\n//         <p>Are you sure you want to book <strong>{selectedItem.name || selectedItem.car_name || selectedItem.bus_name}</strong>?</p>\r\n//         <p><strong>Price:</strong> {selectedItem.price || selectedItem.price_per_day} Rs</p>\r\n//         <div className=\"modal-buttons\">\r\n//           <button className=\"confirm-btn\" onClick={onConfirm}>Yes, Book Now</button>\r\n//           <button className=\"cancel-btn\" onClick={onCancel}>Cancel</button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const BookTransport = () => {\r\n//   const [cars, setCars] = useState([]);\r\n//   const [buses, setBuses] = useState([]);\r\n//   const [trains, setTrains] = useState([]);\r\n//   const [selectedItem, setSelectedItem] = useState(null);\r\n//   const [isBooking, setIsBooking] = useState(false);\r\n//   const [showConfirmPopup, setShowConfirmPopup] = useState(false);  // State for controlling the confirmation popup\r\n//   const [notification, setNotification] = useState(\"\"); // State for managing notifications\r\n//   const [filter, setFilter] = useState({\r\n//     name: \"\",\r\n//     price: \"\",\r\n//     city: \"\"\r\n//   });\r\n//   const [sortBy, setSortBy] = useState(\"price\");  // Default sorting by price\r\n//   const navigate = useNavigate();  // useNavigate hook for navigation\r\n//   const [showNotification, setShowNotification] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const carResponse = await fetch(\"/Cleaned_Cars.csv\");\r\n//         const busResponse = await fetch(\"/Cleaned_busses.csv\");\r\n//         const trainResponse = await fetch(\"/Cleaned_trains.csv\");\r\n  \r\n//         const carText = await carResponse.text();\r\n//         const busText = await busResponse.text();\r\n//         const trainText = await trainResponse.text();\r\n  \r\n//         Papa.parse(carText, {\r\n//           header: true,\r\n//           complete: (result) => {\r\n//             console.log(\"Cars data:\", result.data);\r\n//             setCars(result.data);\r\n//           },\r\n//         });\r\n  \r\n//         Papa.parse(busText, {\r\n//           header: true,\r\n//           complete: (result) => setBuses(result.data),\r\n//         });\r\n  \r\n//         Papa.parse(trainText, {\r\n//           header: true,\r\n//           complete: (result) => {\r\n//             setTrains(result.data);\r\n//           },\r\n\r\n//         });\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n  \r\n//     fetchData();\r\n//   }, []);  \r\n\r\n//     // Function to get the image path based on transport type\r\n//     const getImagePath = (name, type) => {\r\n//       const nameLower = name ? name.toLowerCase() : \"\";\r\n    \r\n//       if (type === \"bus\") {\r\n//         const busImages = [\r\n//           \"akmovers\", \"daewoo\", \"e.k.movers\", \"fmtravels\", \"mashabrum\",\r\n//           \"natco\", \"qconnect\", \"roadmaster\", \"skyways\", \"warraich\"\r\n//         ];\r\n//         const matchedBus = busImages.find(img => nameLower.includes(img));\r\n//         return matchedBus ? `/images/${matchedBus}.jpg` : \"/images/bus.jpg\";\r\n//       }\r\n    \r\n//       if (type === \"train\") {\r\n//         const trainImages = [\"fareed_express\", \"mehr_express\", \"rawalpindi_express\", \"subak_karam\"];\r\n//         const matchedTrain = trainImages.find(img => nameLower.includes(img)); \r\n//         return matchedTrain ? `/images_trains/${matchedTrain}.jpg` : \"/images_trains/rawalpindi_express.jpg\";\r\n//       }\r\n    \r\n//       if (type === \"car\") {\r\n//         const carImages = [\r\n//           \"karvaan\", \"brv\", \"city\", \"prado\",\r\n//           \"wagon r\", \"fielder\",\r\n//           \"fortuner\", \"corolla\", \"hiace\",\r\n//           \"yaris\", \"voxy\", \"civic\", \"land cruiser\", \"alto\",\r\n//           \"cultus\", \"coaster\", \"revo\"\r\n//         ];\r\n//         const matchedCar = carImages.find(img => nameLower.includes(img));\r\n//         return matchedCar ? `/images_cars/${matchedCar}.jpg` : \"/images_cars/car.jpg\";\r\n//       }\r\n    \r\n//       return \"\";\r\n//     };\r\n    \r\n\r\n//   // Modify the handleBooking to show the popup with the selected item\r\n//   const handleBooking = (item) => {\r\n//     setSelectedItem(item);  // Set selected item for booking\r\n//     setShowConfirmPopup(true);  // Show the confirmation popup\r\n//   };\r\n\r\n//   const confirmBooking = () => {\r\n//     setShowConfirmPopup(false);\r\n//     localStorage.setItem(\"selectedTransport\", JSON.stringify(selectedItem));\r\n  \r\n//     setNotification(`✅ You have successfully booked ${selectedItem.name || selectedItem.car_name || selectedItem.bus_name}`);\r\n//     setShowNotification(true);\r\n  \r\n//     // Ensure the notification is displayed before redirecting\r\n//     setTimeout(() => {\r\n//       setShowNotification(false);\r\n//       navigate(\"/bookoption\");\r\n//     }, 1000); // Increased timeout to 1 seconds for better visibility\r\n//   };\r\n  \r\n\r\n//   const cancelBooking = () => {\r\n//     setShowConfirmPopup(false);\r\n//     setSelectedItem(null);\r\n//   };\r\n\r\n//   const handleFilterChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFilter((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleSortChange = (e) => {\r\n//     setSortBy(e.target.value);\r\n//   };\r\n\r\n//   // Filter and sort transport items\r\n//   const filteredCars = cars.filter((car) => {\r\n//     return (\r\n//       (car.car_name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\r\n//       (car.price_per_day >= filter.price || !filter.price)\r\n//     );\r\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price_per_day - b.price_per_day : a.car_name.localeCompare(b.car_name)));\r\n\r\n//   const filteredBuses = buses.filter((bus) => {\r\n//     return (\r\n//       (bus.name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\r\n//       (bus.price >= filter.price || !filter.price) &&\r\n//       (bus.starting?.toLowerCase().includes(filter.city.toLowerCase()) || !filter.city)\r\n//     );\r\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price - b.price : a.name.localeCompare(b.name)));\r\n\r\n//   const filteredTrains = trains.filter((train) => {\r\n//     return (\r\n//       (train.name?.toLowerCase().includes(filter.name.toLowerCase()) || !filter.name) &&\r\n//       (train.price >= filter.price || !filter.price) &&\r\n//       (train.starting?.toLowerCase().includes(filter.city.toLowerCase()) || !filter.city)\r\n//     );\r\n//   }).sort((a, b) => (sortBy === \"price\" ? a.price - b.price : a.name.localeCompare(b.name)));\r\n  \r\n\r\n//   return (\r\n//     <div className=\"book-transport\">\r\n//       <Navbar />\r\n//       {/* Back Arrow Icon */}\r\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/bookoption\")}>\r\n//         ←\r\n//       </div>\r\n      \r\n//       <div className=\"trans\">\r\n//         <h2>Customize Your Transport</h2>\r\n\r\n//         {/* Filter and Sort */}\r\n//         <div className=\"filters\">\r\n//           <input \r\n//             type=\"text\" \r\n//             name=\"name\" \r\n//             placeholder=\"Filter by Name\" \r\n//             value={filter.name} \r\n//             onChange={handleFilterChange}\r\n//           />\r\n//           <input \r\n//             type=\"number\" \r\n//             name=\"price\" \r\n//             placeholder=\"Filter by Price\" \r\n//             value={filter.price} \r\n//             onChange={handleFilterChange}\r\n//           />\r\n//           <input \r\n//             type=\"text\" \r\n//             name=\"city\" \r\n//             placeholder=\"Filter by City\" \r\n//             value={filter.city} \r\n//             onChange={handleFilterChange}\r\n//           />\r\n//           <select onChange={handleSortChange} value={sortBy}>\r\n//             <option value=\"price\">Sort by Price</option>\r\n//             <option value=\"name\">Sort by Name</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Cars Section with Carousel */}\r\n//         <div className=\"transport-section\">\r\n//         <h3>Cars</h3>\r\n//         <div className=\"carousel\">\r\n//           {filteredCars.length > 0 ? (\r\n//               filteredCars.map((car, index) => {\r\n//               console.log(\"Rendering Car:\", car);\r\n//               const carImage = getImagePath(car?.car_name || car?.brand_Name, \"car\");\r\n//               console.log(\"Filtered Cars:\", filteredCars);\r\n//               console.log(\"Car image path:\", carImage); // Debugging log\r\n//               console.log(\"Car Object Keys:\", Object.keys(filteredCars[0] || {}));\r\n//               return (\r\n//                 <div\r\n//                   key={index}\r\n//                   className=\"carousel-item\"\r\n//                   onClick={() => handleBooking(car)} // Handle booking for each car\r\n//                 >\r\n//                   <img src={carImage} alt={car?.car_name || \"Car\"} className=\"transport-image\" />\r\n//                   <p>\r\n//                     {car?.brand_Name || \"Unknown Brand\"} {car?.car_name || \"Unknown Car\"} -{\" \"}\r\n//                     {car?.price_per_day || \"Price Not Available\"} per day\r\n//                   </p>\r\n//                   <p>\r\n//                     {car?.doors || \"N/A\"} Doors, {car?.passengers || \"N/A\"} Passengers,{\" \"}\r\n//                     {car?.transmission || \"N/A\"} Transmission,{\" \"}\r\n//                     {car?.ac ? \"AC Available\" : \"No AC\"}\r\n//                   </p>\r\n//                   <button>Book</button>\r\n//                 </div>\r\n//               );\r\n//             })\r\n//           ) : (\r\n//             <p>Loading Cars...</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n\r\n//         {/* Buses Section */}\r\n//         <div className=\"transport-section\">\r\n//           <h3>Buses</h3>\r\n//           {filteredBuses.length > 0 ? (\r\n//             filteredBuses.map((bus, index) => {\r\n//               const busImage = getImagePath(bus.name, \"bus\");\r\n//               return (\r\n//                 <div key={index} className=\"transport-item\" onClick={() => handleBooking(bus)}>  \r\n//                   <img src={busImage} alt={bus.name} className=\"transport-image\" />\r\n//                   <p>\r\n//                     {bus.name} - {bus.departure_time} - {bus.price} PKR\r\n//                   </p>\r\n//                   <p>\r\n//                     From: {bus.starting || \"Unknown\"} To: {bus.ending || \"Unknown\"}\r\n//                   </p>\r\n//                   <button>Book</button>\r\n//                 </div>\r\n//               );\r\n//             })\r\n//           ) : (\r\n//             <p>Loading buses...</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Trains Section */}\r\n//         <div className=\"transport-section\">\r\n//           <h3>Trains</h3>\r\n//           {filteredTrains.length > 0 ? (\r\n//             filteredTrains.map((train, index) => {\r\n//               const trainImage = getImagePath(train.name, \"train\");\r\n//               return (\r\n//                 <div key={index} className=\"transport-item\" onClick={() => handleBooking(train)}>  \r\n//                   <img src={trainImage} alt={train.name} className=\"transport-image\" />\r\n//                   <p>\r\n//                     {train.name || \"Unknown Train\"} - {train.departure_time || \"--\"} -{\" \"}\r\n//                     {train.price ? `${train.price} PKR` : \"Price Not Available\"}\r\n//                   </p>\r\n//                   <p>\r\n//                     From: {train.starting || \"Unknown\"} To: {train.ending || \"Unknown\"}\r\n//                   </p>\r\n//                   <button>Book</button>\r\n//                 </div>\r\n//               );\r\n//             })\r\n//           ) : (\r\n//             <p>Loading trains...</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Confirmation Pop-up */}\r\n//         {showConfirmPopup && (\r\n//           <div className=\"popup\">\r\n//             <div className=\"popup-content\">\r\n//               <span className=\"close\" onClick={cancelBooking}>&times;</span>\r\n//               <h3>Booking Confirmation</h3>\r\n//               <p>Are you sure you want to book this transport?</p>\r\n//               <div className=\"details\">\r\n//                 {selectedItem.name && <p><strong>Name:</strong> {selectedItem.name}</p>}\r\n//                 {selectedItem.departure_time && <p><strong>Departure Time:</strong> {selectedItem.departure_time}</p>}\r\n//                 {selectedItem.price && <p><strong>Price:</strong> {selectedItem.price} PKR</p>}\r\n//                 {selectedItem.passengers && <p><strong>Passengers:</strong> {selectedItem.passengers}</p>}\r\n//                 {selectedItem.starting && <p><strong>From:</strong> {selectedItem.starting}</p>}\r\n//                 {selectedItem.ending && <p><strong>To:</strong> {selectedItem.ending}</p>}\r\n//               </div>\r\n//               <button onClick={confirmBooking}>Confirm</button>\r\n//               <button onClick={cancelBooking}>Cancel</button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Notification */}\r\n//         {showNotification && <div className=\"notification\">{notification}</div>}\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookTransport;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport \"./BookTransport.css\"; \r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst ConfirmationModal = ({ selectedItem, onConfirm, onCancel }) => {\r\n  if (!selectedItem) return null;\r\n\r\n  return (\r\n    <div className=\"confirmation-modal\">\r\n      <div className=\"modal-content\">\r\n        <h2>Confirm Booking</h2>\r\n        <p>Are you sure you want to book <strong>{selectedItem.name}</strong>?</p>\r\n        <p><strong>Price:</strong> {selectedItem.price} PKR</p>\r\n        <div className=\"modal-buttons\">\r\n          <button className=\"confirm-btn\" onClick={onConfirm}>Yes, Book Now</button>\r\n          <button className=\"cancel-btn\" onClick={onCancel}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BookTransport = () => {\r\n  const [buses, setBuses] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [showConfirmPopup, setShowConfirmPopup] = useState(false);\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  \r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { customizationData, currentDetails, tripId } = location.state || {};\r\n  \r\n  // Get destination city from customizationData\r\n  const destinationCity = customizationData?.destination || \"\";\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const busResponse = await fetch(\"/Cleaned_busses.csv\");\r\n        const busText = await busResponse.text();\r\n  \r\n        Papa.parse(busText, {\r\n          header: true,\r\n          complete: (result) => {\r\n            // Filter buses by destination city\r\n            const filteredBuses = result.data\r\n              .filter(bus => bus.ending && bus.ending.toLowerCase() === destinationCity.toLowerCase())\r\n              .sort((a, b) => {\r\n                // Sort by departure time - earlier times first\r\n                if (a.departure_time && b.departure_time) {\r\n                  return a.departure_time.localeCompare(b.departure_time);\r\n                }\r\n                return 0;\r\n              })\r\n              .slice(0, 5); // Take only top 5 buses\r\n              \r\n            setBuses(filteredBuses);\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching bus data:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [destinationCity]);  \r\n\r\n  // Function to get the image path for buses\r\n  const getBusImagePath = (name) => {\r\n    const nameLower = name ? name.toLowerCase() : \"\";\r\n    \r\n    const busImages = [\r\n      \"akmovers\", \"daewoo\", \"e.k.movers\", \"fmtravels\", \"mashabrum\",\r\n      \"natco\", \"qconnect\", \"roadmaster\", \"skyways\", \"warraich\"\r\n    ];\r\n    \r\n    const matchedBus = busImages.find(img => nameLower.includes(img));\r\n    return matchedBus ? `/images/${matchedBus}.jpg` : \"/images/bus.jpg\";\r\n  };\r\n\r\n  const handleBooking = (item) => {\r\n    setSelectedItem(item);\r\n    setShowConfirmPopup(true);\r\n  };\r\n\r\n  const confirmBooking = () => {\r\n    setShowConfirmPopup(false);\r\n    \r\n    // Navigate back to booking options with the selected transport\r\n    navigate(\"/bookoption\", {\r\n      state: {\r\n        customizationData,\r\n        currentDetails: { \r\n          ...currentDetails,\r\n          transport: selectedItem\r\n        },\r\n        tripId\r\n      }\r\n    });\r\n  };\r\n\r\n  const cancelBooking = () => {\r\n    setShowConfirmPopup(false);\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"book-transport\">\r\n      <Navbar />\r\n\r\n      \r\n      <div className=\"trans\">\r\n        <h2>Choose Bus Transport to {destinationCity}</h2>\r\n\r\n        {/* Buses Section */}\r\n        <div className=\"transport-section\">\r\n          {buses.length > 0 ? (\r\n            buses.map((bus, index) => {\r\n              const busImage = getBusImagePath(bus.name);\r\n              return (\r\n                <div key={index} className=\"transport-item\" onClick={() => handleBooking(bus)}>  \r\n                  <img src={busImage} alt={bus.name} className=\"transport-image\" />\r\n                  <div className=\"transport-details\">\r\n                    <h3>{bus.name || \"Bus Service\"}</h3>\r\n                    <div className=\"transport-info\">\r\n                      <p><strong>Departure:</strong> {bus.departure_time || \"Schedule not available\"}</p>\r\n                      <p><strong>Route:</strong> {bus.starting || \"Origin\"} → {bus.ending || \"Destination\"}</p>\r\n                      <p><strong>Price:</strong> {bus.price ? `${bus.price} PKR` : \"Price not available\"}</p>\r\n                      <p><strong>Type:</strong> {bus.type || \"Standard\"}</p>\r\n                      <p><strong>Facilities:</strong> {bus.facilities || \"AC, Comfortable Seating, WiFi\"}</p>\r\n                    </div>\r\n                    <button className=\"book-btn\">Select This Bus</button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"no-buses\">\r\n              <p>No buses found going to {destinationCity}. Please try another destination.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Confirmation Pop-up */}\r\n        {showConfirmPopup && (\r\n          <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n              <span className=\"close\" onClick={cancelBooking}>&times;</span>\r\n              <h3>Booking Confirmation</h3>\r\n              <p>Are you sure you want to book this bus?</p>\r\n              <div className=\"details\">\r\n                <p><strong>Name:</strong> {selectedItem.name || \"Bus Service\"}</p>\r\n                <p><strong>Departure Time:</strong> {selectedItem.departure_time || \"Not specified\"}</p>\r\n                <p><strong>Price:</strong> {selectedItem.price || \"0\"} PKR</p>\r\n                <p><strong>From:</strong> {selectedItem.starting || \"Origin\"}</p>\r\n                <p><strong>To:</strong> {selectedItem.ending || \"Destination\"}</p>\r\n                <p><strong>Type:</strong> {selectedItem.type || \"Standard\"}</p>\r\n              </div>\r\n              <div className=\"confirmation-buttons\">\r\n                <button className=\"confirm-btnnn\" onClick={confirmBooking}>Confirm Booking</button>\r\n                <button className=\"cancel-btnnn\" onClick={cancelBooking}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Notification */}\r\n        {showNotification && <div className=\"notification\">{notification}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookTransport;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module"}