{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner } from 'react-icons/fa';\n// import logo from '../../assets/LOGO.png';\n// import './Navbar.css';\n// import axios from 'axios';\n\n// const Navbar = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [searchResults, setSearchResults] = useState({ hotels: [], restaurants: [] });\n//   const [searchOpen, setSearchOpen] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const checkAuthentication = () => {\n//       const token = localStorage.getItem('token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuthentication();\n//     window.addEventListener('storage', checkAuthentication);\n\n//     return () => {\n//       window.removeEventListener('storage', checkAuthentication);\n//     };\n//   }, []);\n\n//   const signOut = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     setIsAuthenticated(false);\n//     navigate('/login');\n//   };\n\n//   const handleSearch = async (e) => {\n//     e.preventDefault();\n//     if (searchQuery) {\n//       setIsLoading(true);\n//       setError(null);\n//       try {\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, { params: { city: searchQuery } });\n//         setSearchResults(data);\n//       } catch (error) {\n//         console.error('Error fetching search results:', error);\n//         setError('An error occurred while searching. Please try again.');\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     }\n//   };\n\n//   return (\n//     <nav className=\"navbaar\">\n//       <div className=\"navbar-container\">\n//         <Link to=\"/\" className=\"navbar-logo\">\n//           <img src={logo} alt=\"Logo\" />\n//           <span>Voyaige</span>\n//         </Link>\n//         <ul className=\"navbar-menu\">\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><Link to=\"/tours\">Tours</Link></li>\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\n//         </ul>\n//         <div className=\"navbar-actions\">\n//         <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\n//             <FaSearch /> {!searchOpen}\n//           </button>\n//           {isAuthenticated ? (\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\n//           ) : (\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\n//           )}\n\n//         </div>\n//       </div>\n\n//       {searchOpen && (\n//         <div className=\"search-box\">\n//           <form onSubmit={handleSearch}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search City\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//             />\n//             <button type=\"submit\" disabled={isLoading}>\n//               {isLoading ? <FaSpinner className=\"spinner\" /> : <FaSearch />}\n//             </button>\n//           </form>\n//           {error && <p className=\"error-message\">{error}</p>}\n\n//           <div className=\"search-results\">\n//             {searchResults.hotels.length > 0 && (\n//               <div className=\"result-section\">\n//                 <h3 className='heading3'>Hotels</h3>\n//                 <div className=\"result-grid\">\n//                   {searchResults.hotels.map((hotel) => (\n//                     <div className=\"result-card\" key={hotel._id}>\n\n//                       <span>{hotel.name}</span>\n//                     </div>\n//                   ))}\n//                 </div>\n\n//               </div>\n//             )}\n//             {searchResults.restaurants.length > 0 && (\n//               <div className=\"result-section\">\n//                 <h3 className='heading3'>Restaurants</h3>\n//                 <div className=\"result-grid\">\n//                   {searchResults.restaurants.map((restaurant) => (\n//                     <div className=\"result-card\" key={restaurant._id}>\n\n//                       <span>{restaurant.name}</span>\n//                     </div>\n//                   ))}\n//                 </div>\n\n//               </div>\n//             )}\n//             {!isLoading && searchQuery && searchResults.hotels.length === 0 && searchResults.restaurants.length === 0 && (\n//               <p className=\"no-results\">No results found for \"{searchQuery}\"</p>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </nav>\n//   );\n// };\n\n// export default Navbar;\n\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { FaSearch } from 'react-icons/fa';\n// import logo from '../../assets/LOGO.png';\n// import './Navbar.css';\n\n// const Navbar = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [searchOpen, setSearchOpen] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   const cities = [\n//     \"Islamabad\",\n//     \"Lahore\",\n//     \"Karachi\",\n//     \"Murree\",\n//     \"Peshawar\",\n//     \"Skardu\",\n//     \"Hunza\",\n//     \"Quetta\",\n//     \"Multan\",\n//     \"Faisalabad\",\n//   ];\n\n//   useEffect(() => {\n//     const checkAuthentication = () => {\n//       const token = localStorage.getItem('token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuthentication();\n//     window.addEventListener('storage', checkAuthentication);\n\n//     return () => {\n//       window.removeEventListener('storage', checkAuthentication);\n//     };\n//   }, []);\n\n//   const signOut = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     setIsAuthenticated(false);\n//     navigate('/login');\n//   };\n\n//   const handleSearch = (e) => {\n//     e.preventDefault();\n//     if (searchQuery) {\n//       const cityFound = cities.find(city => city.toLowerCase() === searchQuery.toLowerCase());\n//       if (cityFound) {\n//         navigate(`/${cityFound}Page`);\n//       } else {\n//         setError(`No page found for \"${searchQuery}\"`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <nav className=\"navbaar\">\n//       <div className=\"navbar-container\">\n//         <Link to=\"/\" className=\"navbar-logo\">\n//           <img src={logo} alt=\"Logo\" />\n//           <span>Voyaige</span>\n//         </Link>\n//         <ul className=\"navbar-menu\">\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><Link to=\"/tours\">Tours</Link></li>\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\n//         </ul>\n//         <div className=\"navbar-actions\">\n//           {isAuthenticated ? (\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\n//           ) : (\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\n//           )}\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\n//             <FaSearch /> {!searchOpen}\n//           </button>\n//         </div>\n//       </div>\n\n//       {searchOpen && (\n//         <div className=\"search-box\">\n//           <form onSubmit={handleSearch}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search City\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//             />\n//             <button type=\"submit\" disabled={isLoading}>\n//               <FaSearch />\n//             </button>\n//           </form>\n//           {error && <p className=\"error-message\">{error}</p>}\n//         </div>\n//       )}\n//     </nav>\n//   );\n// };\n\n// export default Navbar;\n\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner } from 'react-icons/fa';\n// import logo from '../../assets/LOGO.png';\n// import './Navbar.css';\n// import axios from 'axios';\n\n// const Navbar = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [searchResults, setSearchResults] = useState({ hotels: [], restaurants: [] });\n//   const [searchOpen, setSearchOpen] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [backgroundGray, setBackgroundGray] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const checkAuthentication = () => {\n//       const token = localStorage.getItem('token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuthentication();\n//     window.addEventListener('storage', checkAuthentication);\n\n//     return () => {\n//       window.removeEventListener('storage', checkAuthentication);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     if (searchOpen) {\n//       setBackgroundGray(true);\n//     } else {\n//       setBackgroundGray(false);\n//     }\n//   }, [searchOpen]);\n\n//   const signOut = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     setIsAuthenticated(false);\n//     navigate('/login');\n//   };\n\n//   const handleSearch = async (e) => {\n//     e.preventDefault();\n//     if (searchQuery) {\n//       setIsLoading(true);\n//       setError(null);\n//       try {\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, { params: { city: searchQuery } });\n//         setSearchResults(data);\n//       } catch (error) {\n//         console.error('Error fetching search results:', error);\n//         setError('An error occurred while searching. Please try again.');\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     }\n//   };\n\n//   return (\n//     <nav className={`navbaar ${backgroundGray ? 'gray-background' : ''}`}>\n//       <div className=\"navbar-container\">\n//         <Link to=\"/\" className=\"navbar-logo\">\n//           <img src={logo} alt=\"Logo\" />\n//           <span>Voyaige</span>\n//         </Link>\n//         <ul className=\"navbar-menu\">\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><Link to=\"/tours\">Tours</Link></li>\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\n//         </ul>\n//         <div className=\"navbar-actions\">\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\n//             <FaSearch />\n//           </button>\n//           {isAuthenticated ? (\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\n//           ) : (\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\n//           )}\n//         </div>\n//       </div>\n\n//       {searchOpen && (\n//         <div className=\"search-box\">\n//           <form onSubmit={handleSearch}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search City\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//             />\n//             <button type=\"submit\" disabled={isLoading}>\n//               {isLoading ? <FaSpinner className=\"spinner\" /> : <FaSearch />}\n//             </button>\n//           </form>\n//           {error && <p className=\"error-message\">{error}</p>}\n\n//           <div className=\"search-results\">\n//             {searchResults.hotels.length > 0 && (\n//               <div className=\"result-section\">\n//                 <h3 className='heading3'>Hotels</h3>\n//                 <div className=\"result-grid\">\n//                   {searchResults.hotels.map((hotel) => (\n//                     <div className=\"result-card\" key={hotel._id}>\n//                       <span>{hotel.name}</span>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n//             {searchResults.restaurants.length > 0 && (\n//               <div className=\"result-section\">\n//                 <h3 className='heading3'>Restaurants</h3>\n//                 <div className=\"result-grid\">\n//                   {searchResults.restaurants.map((restaurant) => (\n//                     <div className=\"result-card\" key={restaurant._id}>\n//                       <span>{restaurant.name}</span>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n//             {!isLoading && searchQuery && searchResults.hotels.length === 0 && searchResults.restaurants.length === 0 && (\n//               <p className=\"no-results\">No results found for \"{searchQuery}\"</p>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </nav>\n//   );\n// };\n\n// export default Navbar;\n\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner, FaMapMarkerAlt, FaWalking } from 'react-icons/fa';\n// import logo from '../../assets/LOGO.png';\n// import './Navbar.css';\n// import axios from 'axios';\n\n// const Navbar = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [searchResults, setSearchResults] = useState(null);\n//   const [searchOpen, setSearchOpen] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [backgroundGray, setBackgroundGray] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const checkAuthentication = () => {\n//       const token = localStorage.getItem('token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuthentication();\n//     window.addEventListener('storage', checkAuthentication);\n\n//     return () => {\n//       window.removeEventListener('storage', checkAuthentication);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     setBackgroundGray(searchOpen);\n//   }, [searchOpen]);\n\n//   const signOut = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     setIsAuthenticated(false);\n//     navigate('/login');\n//   };\n\n//   const handleSearch = async (query) => {\n//     setSearchQuery(query);\n//     if (query.length >= 2) {\n//       setIsLoading(true);\n//       setError(null);\n//       try {\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, {\n//           params: { query }\n//         });\n//         setSearchResults({\n//           city: {\n//             name: query,\n//             path: `/city/${query.toLowerCase()}`,\n//           },\n//           hotels: data.hotels || [],\n//           restaurants: data.restaurants || [],\n//           thingsToDo: data.attractions || []\n//         });\n//       } catch (error) {\n//         console.error('Error fetching search results:', error);\n//         setError('An error occurred while searching. Please try again.');\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     } else {\n//       setSearchResults(null);\n//     }\n//   };\n\n//   const handleCityClick = (cityName) => {\n//     navigate(`/city/${cityName.toLowerCase()}`, { state: { cityName } });\n//     setSearchOpen(false);\n//     setSearchQuery('');\n//   };\n\n//   const handleSectionClick = (cityName, section) => {\n//     navigate(`/city/${cityName.toLowerCase()}`, {\n//       state: { cityName, scrollTo: section }\n//     });\n//     setSearchOpen(false);\n//     setSearchQuery('');\n//   };\n\n//   return (\n//     <nav className=\"navbaar\">\n//       <div className=\"navbar-container\">\n//         <Link to=\"/\" className=\"navbar-logo\">\n//           <img src={logo} alt=\"Logo\" />\n//           <span>Voyaige</span>\n//         </Link>\n//         <ul className=\"navbar-menu\">\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><Link to=\"/tours\">Tours</Link></li>\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\n//         </ul>\n//         <div className=\"navbar-actions\">\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\n//             <FaSearch />\n//           </button>\n//           {isAuthenticated ? (\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\n//           ) : (\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\n//           )}\n//         </div>\n//       </div>\n\n//       {searchOpen && (\n//         <div className=\"nav-search-overlay\">\n//           <div className=\"nav-search-box\">\n//             <div className=\"nav-search-input-container\">\n//               <FaSearch className=\"nav-search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search cities...\"\n//                 value={searchQuery}\n//                 onChange={(e) => handleSearch(e.target.value)}\n//                 className=\"nav-search-input\"\n//               />\n//             </div>\n\n//             {isLoading && (\n//               <div className=\"nav-loading\">\n//                 <FaSpinner className=\"nav-spinner\" />\n//               </div>\n//             )}\n\n//             {error && <p className=\"nav-error-message\">{error}</p>}\n\n//             {searchResults && searchQuery && (\n//               <div className=\"nav-search-recommendations\">\n//                 <div \n//                   className=\"nav-recommendation-item\"\n//                   onClick={() => handleCityClick(searchResults.city.name)}\n//                 >\n//                   <FaMapMarkerAlt className=\"nav-recommendation-icon\" />\n//                   <div className=\"nav-recommendation-content\">\n//                     <div className=\"nav-recommendation-title\">{searchResults.city.name}</div>\n//                     <div className=\"nav-recommendation-subtitle\">City</div>\n//                   </div>\n//                 </div>\n\n//                 <div \n//                   className=\"nav-recommendation-item\"\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'hotels')}\n//                 >\n//                   <FaHotel className=\"nav-recommendation-icon\" />\n//                   <div className=\"nav-recommendation-content\">\n//                     <div className=\"nav-recommendation-title\">Hotels</div>\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\n//                   </div>\n//                 </div>\n\n//                 <div \n//                   className=\"nav-recommendation-item\"\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'attractions')}\n//                 >\n//                   <FaWalking className=\"nav-recommendation-icon\" />\n//                   <div className=\"nav-recommendation-content\">\n//                     <div className=\"nav-recommendation-title\">Things to Do</div>\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\n//                   </div>\n//                 </div>\n\n//                 <div \n//                   className=\"nav-recommendation-item\"\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'restaurants')}\n//                 >\n//                   <FaUtensils className=\"nav-recommendation-icon\" />\n//                   <div className=\"nav-recommendation-content\">\n//                     <div className=\"nav-recommendation-title\">Restaurants</div>\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\n//                   </div>\n//                 </div>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </nav>\n//   );\n// };\n\n// export default Navbar;","map":{"version":3,"names":[],"sources":["F:/Web/FYP/Voyaige/proj/front/src/components/NavBar/Navbar.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner } from 'react-icons/fa';\r\n// import logo from '../../assets/LOGO.png';\r\n// import './Navbar.css';\r\n// import axios from 'axios';\r\n\r\n// const Navbar = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [searchResults, setSearchResults] = useState({ hotels: [], restaurants: [] });\r\n//   const [searchOpen, setSearchOpen] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const checkAuthentication = () => {\r\n//       const token = localStorage.getItem('token');\r\n//       setIsAuthenticated(!!token);\r\n//     };\r\n\r\n//     checkAuthentication();\r\n//     window.addEventListener('storage', checkAuthentication);\r\n\r\n//     return () => {\r\n//       window.removeEventListener('storage', checkAuthentication);\r\n//     };\r\n//   }, []);\r\n\r\n//   const signOut = () => {\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('user');\r\n//     setIsAuthenticated(false);\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   const handleSearch = async (e) => {\r\n//     e.preventDefault();\r\n//     if (searchQuery) {\r\n//       setIsLoading(true);\r\n//       setError(null);\r\n//       try {\r\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, { params: { city: searchQuery } });\r\n//         setSearchResults(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching search results:', error);\r\n//         setError('An error occurred while searching. Please try again.');\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbaar\">\r\n//       <div className=\"navbar-container\">\r\n//         <Link to=\"/\" className=\"navbar-logo\">\r\n//           <img src={logo} alt=\"Logo\" />\r\n//           <span>Voyaige</span>\r\n//         </Link>\r\n//         <ul className=\"navbar-menu\">\r\n//           <li><Link to=\"/\">Home</Link></li>\r\n//           <li><Link to=\"/tours\">Tours</Link></li>\r\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\r\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\r\n//         </ul>\r\n//         <div className=\"navbar-actions\">\r\n//         <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\r\n//             <FaSearch /> {!searchOpen}\r\n//           </button>\r\n//           {isAuthenticated ? (\r\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\r\n//           ) : (\r\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\r\n//           )}\r\n\r\n//         </div>\r\n//       </div>\r\n      \r\n//       {searchOpen && (\r\n//         <div className=\"search-box\">\r\n//           <form onSubmit={handleSearch}>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search City\"\r\n//               value={searchQuery}\r\n//               onChange={(e) => setSearchQuery(e.target.value)}\r\n//             />\r\n//             <button type=\"submit\" disabled={isLoading}>\r\n//               {isLoading ? <FaSpinner className=\"spinner\" /> : <FaSearch />}\r\n//             </button>\r\n//           </form>\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n          \r\n//           <div className=\"search-results\">\r\n//             {searchResults.hotels.length > 0 && (\r\n//               <div className=\"result-section\">\r\n//                 <h3 className='heading3'>Hotels</h3>\r\n//                 <div className=\"result-grid\">\r\n//                   {searchResults.hotels.map((hotel) => (\r\n//                     <div className=\"result-card\" key={hotel._id}>\r\n                    \r\n//                       <span>{hotel.name}</span>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n              \r\n//               </div>\r\n//             )}\r\n//             {searchResults.restaurants.length > 0 && (\r\n//               <div className=\"result-section\">\r\n//                 <h3 className='heading3'>Restaurants</h3>\r\n//                 <div className=\"result-grid\">\r\n//                   {searchResults.restaurants.map((restaurant) => (\r\n//                     <div className=\"result-card\" key={restaurant._id}>\r\n                     \r\n//                       <span>{restaurant.name}</span>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n             \r\n//               </div>\r\n//             )}\r\n//             {!isLoading && searchQuery && searchResults.hotels.length === 0 && searchResults.restaurants.length === 0 && (\r\n//               <p className=\"no-results\">No results found for \"{searchQuery}\"</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { FaSearch } from 'react-icons/fa';\r\n// import logo from '../../assets/LOGO.png';\r\n// import './Navbar.css';\r\n\r\n// const Navbar = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [searchOpen, setSearchOpen] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const cities = [\r\n//     \"Islamabad\",\r\n//     \"Lahore\",\r\n//     \"Karachi\",\r\n//     \"Murree\",\r\n//     \"Peshawar\",\r\n//     \"Skardu\",\r\n//     \"Hunza\",\r\n//     \"Quetta\",\r\n//     \"Multan\",\r\n//     \"Faisalabad\",\r\n//   ];\r\n\r\n//   useEffect(() => {\r\n//     const checkAuthentication = () => {\r\n//       const token = localStorage.getItem('token');\r\n//       setIsAuthenticated(!!token);\r\n//     };\r\n\r\n//     checkAuthentication();\r\n//     window.addEventListener('storage', checkAuthentication);\r\n\r\n//     return () => {\r\n//       window.removeEventListener('storage', checkAuthentication);\r\n//     };\r\n//   }, []);\r\n\r\n//   const signOut = () => {\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('user');\r\n//     setIsAuthenticated(false);\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   const handleSearch = (e) => {\r\n//     e.preventDefault();\r\n//     if (searchQuery) {\r\n//       const cityFound = cities.find(city => city.toLowerCase() === searchQuery.toLowerCase());\r\n//       if (cityFound) {\r\n//         navigate(`/${cityFound}Page`);\r\n//       } else {\r\n//         setError(`No page found for \"${searchQuery}\"`);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbaar\">\r\n//       <div className=\"navbar-container\">\r\n//         <Link to=\"/\" className=\"navbar-logo\">\r\n//           <img src={logo} alt=\"Logo\" />\r\n//           <span>Voyaige</span>\r\n//         </Link>\r\n//         <ul className=\"navbar-menu\">\r\n//           <li><Link to=\"/\">Home</Link></li>\r\n//           <li><Link to=\"/tours\">Tours</Link></li>\r\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\r\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\r\n//         </ul>\r\n//         <div className=\"navbar-actions\">\r\n//           {isAuthenticated ? (\r\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\r\n//           ) : (\r\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\r\n//           )}\r\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\r\n//             <FaSearch /> {!searchOpen}\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {searchOpen && (\r\n//         <div className=\"search-box\">\r\n//           <form onSubmit={handleSearch}>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search City\"\r\n//               value={searchQuery}\r\n//               onChange={(e) => setSearchQuery(e.target.value)}\r\n//             />\r\n//             <button type=\"submit\" disabled={isLoading}>\r\n//               <FaSearch />\r\n//             </button>\r\n//           </form>\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n//         </div>\r\n//       )}\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner } from 'react-icons/fa';\r\n// import logo from '../../assets/LOGO.png';\r\n// import './Navbar.css';\r\n// import axios from 'axios';\r\n\r\n// const Navbar = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [searchResults, setSearchResults] = useState({ hotels: [], restaurants: [] });\r\n//   const [searchOpen, setSearchOpen] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [backgroundGray, setBackgroundGray] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const checkAuthentication = () => {\r\n//       const token = localStorage.getItem('token');\r\n//       setIsAuthenticated(!!token);\r\n//     };\r\n\r\n//     checkAuthentication();\r\n//     window.addEventListener('storage', checkAuthentication);\r\n\r\n//     return () => {\r\n//       window.removeEventListener('storage', checkAuthentication);\r\n//     };\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (searchOpen) {\r\n//       setBackgroundGray(true);\r\n//     } else {\r\n//       setBackgroundGray(false);\r\n//     }\r\n//   }, [searchOpen]);\r\n\r\n//   const signOut = () => {\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('user');\r\n//     setIsAuthenticated(false);\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   const handleSearch = async (e) => {\r\n//     e.preventDefault();\r\n//     if (searchQuery) {\r\n//       setIsLoading(true);\r\n//       setError(null);\r\n//       try {\r\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, { params: { city: searchQuery } });\r\n//         setSearchResults(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching search results:', error);\r\n//         setError('An error occurred while searching. Please try again.');\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <nav className={`navbaar ${backgroundGray ? 'gray-background' : ''}`}>\r\n//       <div className=\"navbar-container\">\r\n//         <Link to=\"/\" className=\"navbar-logo\">\r\n//           <img src={logo} alt=\"Logo\" />\r\n//           <span>Voyaige</span>\r\n//         </Link>\r\n//         <ul className=\"navbar-menu\">\r\n//           <li><Link to=\"/\">Home</Link></li>\r\n//           <li><Link to=\"/tours\">Tours</Link></li>\r\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\r\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\r\n//         </ul>\r\n//         <div className=\"navbar-actions\">\r\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\r\n//             <FaSearch />\r\n//           </button>\r\n//           {isAuthenticated ? (\r\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\r\n//           ) : (\r\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {searchOpen && (\r\n//         <div className=\"search-box\">\r\n//           <form onSubmit={handleSearch}>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search City\"\r\n//               value={searchQuery}\r\n//               onChange={(e) => setSearchQuery(e.target.value)}\r\n//             />\r\n//             <button type=\"submit\" disabled={isLoading}>\r\n//               {isLoading ? <FaSpinner className=\"spinner\" /> : <FaSearch />}\r\n//             </button>\r\n//           </form>\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n          \r\n//           <div className=\"search-results\">\r\n//             {searchResults.hotels.length > 0 && (\r\n//               <div className=\"result-section\">\r\n//                 <h3 className='heading3'>Hotels</h3>\r\n//                 <div className=\"result-grid\">\r\n//                   {searchResults.hotels.map((hotel) => (\r\n//                     <div className=\"result-card\" key={hotel._id}>\r\n//                       <span>{hotel.name}</span>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//             {searchResults.restaurants.length > 0 && (\r\n//               <div className=\"result-section\">\r\n//                 <h3 className='heading3'>Restaurants</h3>\r\n//                 <div className=\"result-grid\">\r\n//                   {searchResults.restaurants.map((restaurant) => (\r\n//                     <div className=\"result-card\" key={restaurant._id}>\r\n//                       <span>{restaurant.name}</span>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//             {!isLoading && searchQuery && searchResults.hotels.length === 0 && searchResults.restaurants.length === 0 && (\r\n//               <p className=\"no-results\">No results found for \"{searchQuery}\"</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner, FaMapMarkerAlt, FaWalking } from 'react-icons/fa';\r\n// import logo from '../../assets/LOGO.png';\r\n// import './Navbar.css';\r\n// import axios from 'axios';\r\n\r\n// const Navbar = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [searchResults, setSearchResults] = useState(null);\r\n//   const [searchOpen, setSearchOpen] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [backgroundGray, setBackgroundGray] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const checkAuthentication = () => {\r\n//       const token = localStorage.getItem('token');\r\n//       setIsAuthenticated(!!token);\r\n//     };\r\n\r\n//     checkAuthentication();\r\n//     window.addEventListener('storage', checkAuthentication);\r\n\r\n//     return () => {\r\n//       window.removeEventListener('storage', checkAuthentication);\r\n//     };\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     setBackgroundGray(searchOpen);\r\n//   }, [searchOpen]);\r\n\r\n//   const signOut = () => {\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('user');\r\n//     setIsAuthenticated(false);\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   const handleSearch = async (query) => {\r\n//     setSearchQuery(query);\r\n//     if (query.length >= 2) {\r\n//       setIsLoading(true);\r\n//       setError(null);\r\n//       try {\r\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, {\r\n//           params: { query }\r\n//         });\r\n//         setSearchResults({\r\n//           city: {\r\n//             name: query,\r\n//             path: `/city/${query.toLowerCase()}`,\r\n//           },\r\n//           hotels: data.hotels || [],\r\n//           restaurants: data.restaurants || [],\r\n//           thingsToDo: data.attractions || []\r\n//         });\r\n//       } catch (error) {\r\n//         console.error('Error fetching search results:', error);\r\n//         setError('An error occurred while searching. Please try again.');\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     } else {\r\n//       setSearchResults(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleCityClick = (cityName) => {\r\n//     navigate(`/city/${cityName.toLowerCase()}`, { state: { cityName } });\r\n//     setSearchOpen(false);\r\n//     setSearchQuery('');\r\n//   };\r\n\r\n//   const handleSectionClick = (cityName, section) => {\r\n//     navigate(`/city/${cityName.toLowerCase()}`, {\r\n//       state: { cityName, scrollTo: section }\r\n//     });\r\n//     setSearchOpen(false);\r\n//     setSearchQuery('');\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbaar\">\r\n//       <div className=\"navbar-container\">\r\n//         <Link to=\"/\" className=\"navbar-logo\">\r\n//           <img src={logo} alt=\"Logo\" />\r\n//           <span>Voyaige</span>\r\n//         </Link>\r\n//         <ul className=\"navbar-menu\">\r\n//           <li><Link to=\"/\">Home</Link></li>\r\n//           <li><Link to=\"/tours\">Tours</Link></li>\r\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\r\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\r\n//         </ul>\r\n//         <div className=\"navbar-actions\">\r\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\r\n//             <FaSearch />\r\n//           </button>\r\n//           {isAuthenticated ? (\r\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\r\n//           ) : (\r\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {searchOpen && (\r\n//         <div className=\"nav-search-overlay\">\r\n//           <div className=\"nav-search-box\">\r\n//             <div className=\"nav-search-input-container\">\r\n//               <FaSearch className=\"nav-search-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search cities...\"\r\n//                 value={searchQuery}\r\n//                 onChange={(e) => handleSearch(e.target.value)}\r\n//                 className=\"nav-search-input\"\r\n//               />\r\n//             </div>\r\n\r\n//             {isLoading && (\r\n//               <div className=\"nav-loading\">\r\n//                 <FaSpinner className=\"nav-spinner\" />\r\n//               </div>\r\n//             )}\r\n            \r\n//             {error && <p className=\"nav-error-message\">{error}</p>}\r\n            \r\n//             {searchResults && searchQuery && (\r\n//               <div className=\"nav-search-recommendations\">\r\n//                 <div \r\n//                   className=\"nav-recommendation-item\"\r\n//                   onClick={() => handleCityClick(searchResults.city.name)}\r\n//                 >\r\n//                   <FaMapMarkerAlt className=\"nav-recommendation-icon\" />\r\n//                   <div className=\"nav-recommendation-content\">\r\n//                     <div className=\"nav-recommendation-title\">{searchResults.city.name}</div>\r\n//                     <div className=\"nav-recommendation-subtitle\">City</div>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div \r\n//                   className=\"nav-recommendation-item\"\r\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'hotels')}\r\n//                 >\r\n//                   <FaHotel className=\"nav-recommendation-icon\" />\r\n//                   <div className=\"nav-recommendation-content\">\r\n//                     <div className=\"nav-recommendation-title\">Hotels</div>\r\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div \r\n//                   className=\"nav-recommendation-item\"\r\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'attractions')}\r\n//                 >\r\n//                   <FaWalking className=\"nav-recommendation-icon\" />\r\n//                   <div className=\"nav-recommendation-content\">\r\n//                     <div className=\"nav-recommendation-title\">Things to Do</div>\r\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div \r\n//                   className=\"nav-recommendation-item\"\r\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'restaurants')}\r\n//                 >\r\n//                   <FaUtensils className=\"nav-recommendation-icon\" />\r\n//                   <div className=\"nav-recommendation-content\">\r\n//                     <div className=\"nav-recommendation-title\">Restaurants</div>\r\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}