{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\FYP\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\NavBar\\\\Navbar.js\";\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner } from 'react-icons/fa';\n// import logo from '../../assets/LOGO.png';\n// import './Navbar.css';\n// import axios from 'axios';\n\n// const Navbar = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [searchResults, setSearchResults] = useState({ hotels: [], restaurants: [] });\n//   const [searchOpen, setSearchOpen] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const checkAuthentication = () => {\n//       const token = localStorage.getItem('token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuthentication();\n//     window.addEventListener('storage', checkAuthentication);\n\n//     return () => {\n//       window.removeEventListener('storage', checkAuthentication);\n//     };\n//   }, []);\n\n//   const signOut = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     setIsAuthenticated(false);\n//     navigate('/login');\n//   };\n\n//   const handleSearch = async (e) => {\n//     e.preventDefault();\n//     if (searchQuery) {\n//       setIsLoading(true);\n//       setError(null);\n//       try {\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, { params: { city: searchQuery } });\n//         setSearchResults(data);\n//       } catch (error) {\n//         console.error('Error fetching search results:', error);\n//         setError('An error occurred while searching. Please try again.');\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     }\n//   };\n\n//   return (\n//     <nav className=\"navbaar\">\n//       <div className=\"navbar-container\">\n//         <Link to=\"/\" className=\"navbar-logo\">\n//           <img src={logo} alt=\"Logo\" />\n//           <span>Voyaige</span>\n//         </Link>\n//         <ul className=\"navbar-menu\">\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><Link to=\"/tours\">Tours</Link></li>\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\n//         </ul>\n//         <div className=\"navbar-actions\">\n//         <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\n//             <FaSearch /> {!searchOpen}\n//           </button>\n//           {isAuthenticated ? (\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\n//           ) : (\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\n//           )}\n\n//         </div>\n//       </div>\n\n//       {searchOpen && (\n//         <div className=\"search-box\">\n//           <form onSubmit={handleSearch}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search City\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//             />\n//             <button type=\"submit\" disabled={isLoading}>\n//               {isLoading ? <FaSpinner className=\"spinner\" /> : <FaSearch />}\n//             </button>\n//           </form>\n//           {error && <p className=\"error-message\">{error}</p>}\n\n//           <div className=\"search-results\">\n//             {searchResults.hotels.length > 0 && (\n//               <div className=\"result-section\">\n//                 <h3 className='heading3'>Hotels</h3>\n//                 <div className=\"result-grid\">\n//                   {searchResults.hotels.map((hotel) => (\n//                     <div className=\"result-card\" key={hotel._id}>\n\n//                       <span>{hotel.name}</span>\n//                     </div>\n//                   ))}\n//                 </div>\n\n//               </div>\n//             )}\n//             {searchResults.restaurants.length > 0 && (\n//               <div className=\"result-section\">\n//                 <h3 className='heading3'>Restaurants</h3>\n//                 <div className=\"result-grid\">\n//                   {searchResults.restaurants.map((restaurant) => (\n//                     <div className=\"result-card\" key={restaurant._id}>\n\n//                       <span>{restaurant.name}</span>\n//                     </div>\n//                   ))}\n//                 </div>\n\n//               </div>\n//             )}\n//             {!isLoading && searchQuery && searchResults.hotels.length === 0 && searchResults.restaurants.length === 0 && (\n//               <p className=\"no-results\">No results found for \"{searchQuery}\"</p>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </nav>\n//   );\n// };\n\n// export default Navbar;\n\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { FaSearch } from 'react-icons/fa';\n// import logo from '../../assets/LOGO.png';\n// import './Navbar.css';\n\n// const Navbar = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [searchOpen, setSearchOpen] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   const cities = [\n//     \"Islamabad\",\n//     \"Lahore\",\n//     \"Karachi\",\n//     \"Murree\",\n//     \"Peshawar\",\n//     \"Skardu\",\n//     \"Hunza\",\n//     \"Quetta\",\n//     \"Multan\",\n//     \"Faisalabad\",\n//   ];\n\n//   useEffect(() => {\n//     const checkAuthentication = () => {\n//       const token = localStorage.getItem('token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuthentication();\n//     window.addEventListener('storage', checkAuthentication);\n\n//     return () => {\n//       window.removeEventListener('storage', checkAuthentication);\n//     };\n//   }, []);\n\n//   const signOut = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     setIsAuthenticated(false);\n//     navigate('/login');\n//   };\n\n//   const handleSearch = (e) => {\n//     e.preventDefault();\n//     if (searchQuery) {\n//       const cityFound = cities.find(city => city.toLowerCase() === searchQuery.toLowerCase());\n//       if (cityFound) {\n//         navigate(`/${cityFound}Page`);\n//       } else {\n//         setError(`No page found for \"${searchQuery}\"`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <nav className=\"navbaar\">\n//       <div className=\"navbar-container\">\n//         <Link to=\"/\" className=\"navbar-logo\">\n//           <img src={logo} alt=\"Logo\" />\n//           <span>Voyaige</span>\n//         </Link>\n//         <ul className=\"navbar-menu\">\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><Link to=\"/tours\">Tours</Link></li>\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\n//         </ul>\n//         <div className=\"navbar-actions\">\n//           {isAuthenticated ? (\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\n//           ) : (\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\n//           )}\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\n//             <FaSearch /> {!searchOpen}\n//           </button>\n//         </div>\n//       </div>\n\n//       {searchOpen && (\n//         <div className=\"search-box\">\n//           <form onSubmit={handleSearch}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search City\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//             />\n//             <button type=\"submit\" disabled={isLoading}>\n//               <FaSearch />\n//             </button>\n//           </form>\n//           {error && <p className=\"error-message\">{error}</p>}\n//         </div>\n//       )}\n//     </nav>\n//   );\n// };\n\n// export default Navbar;\n\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner } from 'react-icons/fa';\n// import logo from '../../assets/LOGO.png';\n// import './Navbar.css';\n// import axios from 'axios';\n\n// const Navbar = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [searchResults, setSearchResults] = useState({ hotels: [], restaurants: [] });\n//   const [searchOpen, setSearchOpen] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [backgroundGray, setBackgroundGray] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const checkAuthentication = () => {\n//       const token = localStorage.getItem('token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuthentication();\n//     window.addEventListener('storage', checkAuthentication);\n\n//     return () => {\n//       window.removeEventListener('storage', checkAuthentication);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     if (searchOpen) {\n//       setBackgroundGray(true);\n//     } else {\n//       setBackgroundGray(false);\n//     }\n//   }, [searchOpen]);\n\n//   const signOut = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     setIsAuthenticated(false);\n//     navigate('/login');\n//   };\n\n//   const handleSearch = async (e) => {\n//     e.preventDefault();\n//     if (searchQuery) {\n//       setIsLoading(true);\n//       setError(null);\n//       try {\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, { params: { city: searchQuery } });\n//         setSearchResults(data);\n//       } catch (error) {\n//         console.error('Error fetching search results:', error);\n//         setError('An error occurred while searching. Please try again.');\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     }\n//   };\n\n//   return (\n//     <nav className={`navbaar ${backgroundGray ? 'gray-background' : ''}`}>\n//       <div className=\"navbar-container\">\n//         <Link to=\"/\" className=\"navbar-logo\">\n//           <img src={logo} alt=\"Logo\" />\n//           <span>Voyaige</span>\n//         </Link>\n//         <ul className=\"navbar-menu\">\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><Link to=\"/tours\">Tours</Link></li>\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\n//         </ul>\n//         <div className=\"navbar-actions\">\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\n//             <FaSearch />\n//           </button>\n//           {isAuthenticated ? (\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\n//           ) : (\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\n//           )}\n//         </div>\n//       </div>\n\n//       {searchOpen && (\n//         <div className=\"search-box\">\n//           <form onSubmit={handleSearch}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search City\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//             />\n//             <button type=\"submit\" disabled={isLoading}>\n//               {isLoading ? <FaSpinner className=\"spinner\" /> : <FaSearch />}\n//             </button>\n//           </form>\n//           {error && <p className=\"error-message\">{error}</p>}\n\n//           <div className=\"search-results\">\n//             {searchResults.hotels.length > 0 && (\n//               <div className=\"result-section\">\n//                 <h3 className='heading3'>Hotels</h3>\n//                 <div className=\"result-grid\">\n//                   {searchResults.hotels.map((hotel) => (\n//                     <div className=\"result-card\" key={hotel._id}>\n//                       <span>{hotel.name}</span>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n//             {searchResults.restaurants.length > 0 && (\n//               <div className=\"result-section\">\n//                 <h3 className='heading3'>Restaurants</h3>\n//                 <div className=\"result-grid\">\n//                   {searchResults.restaurants.map((restaurant) => (\n//                     <div className=\"result-card\" key={restaurant._id}>\n//                       <span>{restaurant.name}</span>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             )}\n//             {!isLoading && searchQuery && searchResults.hotels.length === 0 && searchResults.restaurants.length === 0 && (\n//               <p className=\"no-results\">No results found for \"{searchQuery}\"</p>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </nav>\n//   );\n// };\n\n// export default Navbar;\n\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner, FaMapMarkerAlt, FaWalking } from 'react-icons/fa';\n// import logo from '../../assets/LOGO.png';\n// import './Navbar.css';\n// import axios from 'axios';\n\n// const Navbar = () => {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [searchResults, setSearchResults] = useState(null);\n//   const [searchOpen, setSearchOpen] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [backgroundGray, setBackgroundGray] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const checkAuthentication = () => {\n//       const token = localStorage.getItem('token');\n//       setIsAuthenticated(!!token);\n//     };\n\n//     checkAuthentication();\n//     window.addEventListener('storage', checkAuthentication);\n\n//     return () => {\n//       window.removeEventListener('storage', checkAuthentication);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     setBackgroundGray(searchOpen);\n//   }, [searchOpen]);\n\n//   const signOut = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     setIsAuthenticated(false);\n//     navigate('/login');\n//   };\n\n//   const handleSearch = async (query) => {\n//     setSearchQuery(query);\n//     if (query.length >= 2) {\n//       setIsLoading(true);\n//       setError(null);\n//       try {\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, {\n//           params: { query }\n//         });\n//         setSearchResults({\n//           city: {\n//             name: query,\n//             path: `/city/${query.toLowerCase()}`,\n//           },\n//           hotels: data.hotels || [],\n//           restaurants: data.restaurants || [],\n//           thingsToDo: data.attractions || []\n//         });\n//       } catch (error) {\n//         console.error('Error fetching search results:', error);\n//         setError('An error occurred while searching. Please try again.');\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     } else {\n//       setSearchResults(null);\n//     }\n//   };\n\n//   const handleCityClick = (cityName) => {\n//     navigate(`/city/${cityName.toLowerCase()}`, { state: { cityName } });\n//     setSearchOpen(false);\n//     setSearchQuery('');\n//   };\n\n//   const handleSectionClick = (cityName, section) => {\n//     navigate(`/city/${cityName.toLowerCase()}`, {\n//       state: { cityName, scrollTo: section }\n//     });\n//     setSearchOpen(false);\n//     setSearchQuery('');\n//   };\n\n//   return (\n//     <nav className=\"navbaar\">\n//       <div className=\"navbar-container\">\n//         <Link to=\"/\" className=\"navbar-logo\">\n//           <img src={logo} alt=\"Logo\" />\n//           <span>Voyaige</span>\n//         </Link>\n//         <ul className=\"navbar-menu\">\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><Link to=\"/tours\">Tours</Link></li>\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\n//         </ul>\n//         <div className=\"navbar-actions\">\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\n//             <FaSearch />\n//           </button>\n//           {isAuthenticated ? (\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\n//           ) : (\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\n//           )}\n//         </div>\n//       </div>\n\n//       {searchOpen && (\n//         <div className=\"nav-search-overlay\">\n//           <div className=\"nav-search-box\">\n//             <div className=\"nav-search-input-container\">\n//               <FaSearch className=\"nav-search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search cities...\"\n//                 value={searchQuery}\n//                 onChange={(e) => handleSearch(e.target.value)}\n//                 className=\"nav-search-input\"\n//               />\n//             </div>\n\n//             {isLoading && (\n//               <div className=\"nav-loading\">\n//                 <FaSpinner className=\"nav-spinner\" />\n//               </div>\n//             )}\n\n//             {error && <p className=\"nav-error-message\">{error}</p>}\n\n//             {searchResults && searchQuery && (\n//               <div className=\"nav-search-recommendations\">\n//                 <div \n//                   className=\"nav-recommendation-item\"\n//                   onClick={() => handleCityClick(searchResults.city.name)}\n//                 >\n//                   <FaMapMarkerAlt className=\"nav-recommendation-icon\" />\n//                   <div className=\"nav-recommendation-content\">\n//                     <div className=\"nav-recommendation-title\">{searchResults.city.name}</div>\n//                     <div className=\"nav-recommendation-subtitle\">City</div>\n//                   </div>\n//                 </div>\n\n//                 <div \n//                   className=\"nav-recommendation-item\"\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'hotels')}\n//                 >\n//                   <FaHotel className=\"nav-recommendation-icon\" />\n//                   <div className=\"nav-recommendation-content\">\n//                     <div className=\"nav-recommendation-title\">Hotels</div>\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\n//                   </div>\n//                 </div>\n\n//                 <div \n//                   className=\"nav-recommendation-item\"\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'attractions')}\n//                 >\n//                   <FaWalking className=\"nav-recommendation-icon\" />\n//                   <div className=\"nav-recommendation-content\">\n//                     <div className=\"nav-recommendation-title\">Things to Do</div>\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\n//                   </div>\n//                 </div>\n\n//                 <div \n//                   className=\"nav-recommendation-item\"\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'restaurants')}\n//                 >\n//                   <FaUtensils className=\"nav-recommendation-icon\" />\n//                   <div className=\"nav-recommendation-content\">\n//                     <div className=\"nav-recommendation-title\">Restaurants</div>\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\n//                   </div>\n//                 </div>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </nav>\n//   );\n// };\n\n// export default Navbar;\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { FaHotel, FaUtensils, FaSearch, FaMapMarkerAlt, FaWalking } from 'react-icons/fa';\nimport logo from '../../assets/LOGO.png';\nimport './Navbar.css';\nimport axios from 'axios';\nconst CITIES = [\"Islamabad\", \"Lahore\", \"Karachi\", \"Murree\", \"Peshawar\", \"Skardu\", \"Hunza\", \"Quetta\", \"Multan\", \"Faisalabad\"];\nconst Navbar = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n  const [searchOpen, setSearchOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [backgroundGray, setBackgroundGray] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkAuthentication = () => {\n      const token = localStorage.getItem('token');\n      setIsAuthenticated(!!token);\n    };\n    checkAuthentication();\n    window.addEventListener('storage', checkAuthentication);\n    return () => {\n      window.removeEventListener('storage', checkAuthentication);\n    };\n  }, []);\n  useEffect(() => {\n    setBackgroundGray(searchOpen);\n  }, [searchOpen]);\n  const signOut = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n  const handleSearch = async query => {\n    setSearchQuery(query);\n    if (query.length >= 2) {\n      setError(null);\n      const matchedCity = CITIES.find(city => city.toLowerCase().includes(query.toLowerCase()));\n      if (matchedCity) {\n        try {\n          const {\n            data\n          } = await axios.get(`http://localhost:5000/api/search`, {\n            params: {\n              query: matchedCity\n            }\n          });\n          setSearchResults({\n            city: {\n              name: matchedCity,\n              path: `/city/${matchedCity.toLowerCase()}`\n            },\n            hotels: data.hotels || [],\n            restaurants: data.restaurants || [],\n            thingsToDo: data.attractions || []\n          });\n        } catch (error) {\n          console.error('Error fetching search results:', error);\n          setError('An error occurred while searching. Please try again.');\n        }\n      } else {\n        setSearchResults(null);\n        setError(`No results for \"${query}\"`);\n      }\n    } else {\n      setSearchResults(null);\n      setError(null);\n    }\n  };\n  const handleCityClick = cityName => {\n    navigate(`/city/${cityName.toLowerCase()}`, {\n      state: {\n        cityName\n      }\n    });\n    setSearchOpen(false);\n    setSearchQuery('');\n  };\n  const handleSectionClick = (cityName, section) => {\n    navigate(`/city/${cityName.toLowerCase()}`, {\n      state: {\n        cityName,\n        scrollTo: section\n      }\n    });\n    setSearchOpen(false);\n    setSearchQuery('');\n  };\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbaar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"navbar-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 11\n    }\n  }, \"Voyaige\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"navbar-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 15\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/tours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 15\n    }\n  }, \"Tours\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/hotels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 15\n    }\n  }, \"Hotels\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/restaurants\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 15\n    }\n  }, \"Eat & Drink\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSearchOpen(!searchOpen),\n    className: \"search-button2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 13\n    }\n  })), isAuthenticated ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"auth-button\",\n    onClick: signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 13\n    }\n  }, \"Log Out\") : /*#__PURE__*/React.createElement(Link, {\n    className: \"auth-button\",\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 13\n    }\n  }, \"Sign In\"))), searchOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-search-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-search-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaSearch, {\n    className: \"nav-search-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search cities...\",\n    value: searchQuery,\n    onChange: e => handleSearch(e.target.value),\n    className: \"nav-search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 15\n    }\n  })), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"nav-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 23\n    }\n  }, error), searchResults && searchQuery && !error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-search-recommendations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-item\",\n    onClick: () => handleCityClick(searchResults.city.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaMapMarkerAlt, {\n    className: \"nav-recommendation-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 21\n    }\n  }, searchResults.city.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 21\n    }\n  }, \"City\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-item\",\n    onClick: () => handleSectionClick(searchResults.city.name, 'TopAttractions'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaWalking, {\n    className: \"nav-recommendation-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 21\n    }\n  }, \"Things to Do\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 21\n    }\n  }, \"in \", searchResults.city.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-item\",\n    onClick: () => handleSectionClick(searchResults.city.name, 'HotelsSection'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaHotel, {\n    className: \"nav-recommendation-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 21\n    }\n  }, \"Hotels\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 21\n    }\n  }, \"in \", searchResults.city.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-item\",\n    onClick: () => handleSectionClick(searchResults.city.name, 'RestaurantsSection'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaUtensils, {\n    className: \"nav-recommendation-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 21\n    }\n  }, \"Restaurants\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-recommendation-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 21\n    }\n  }, \"in \", searchResults.city.name)))))));\n};\nexport default Navbar;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","FaHotel","FaUtensils","FaSearch","FaMapMarkerAlt","FaWalking","logo","axios","CITIES","Navbar","isAuthenticated","setIsAuthenticated","searchQuery","setSearchQuery","searchResults","setSearchResults","searchOpen","setSearchOpen","error","setError","backgroundGray","setBackgroundGray","navigate","checkAuthentication","token","localStorage","getItem","window","addEventListener","removeEventListener","signOut","removeItem","handleSearch","query","length","matchedCity","find","city","toLowerCase","includes","data","get","params","name","path","hotels","restaurants","thingsToDo","attractions","console","handleCityClick","cityName","state","handleSectionClick","section","scrollTo","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","onClick","type","placeholder","value","onChange","e","target"],"sources":["F:/Web/FYP/Voyaige/proj/front/src/components/NavBar/Navbar.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner } from 'react-icons/fa';\r\n// import logo from '../../assets/LOGO.png';\r\n// import './Navbar.css';\r\n// import axios from 'axios';\r\n\r\n// const Navbar = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [searchResults, setSearchResults] = useState({ hotels: [], restaurants: [] });\r\n//   const [searchOpen, setSearchOpen] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const checkAuthentication = () => {\r\n//       const token = localStorage.getItem('token');\r\n//       setIsAuthenticated(!!token);\r\n//     };\r\n\r\n//     checkAuthentication();\r\n//     window.addEventListener('storage', checkAuthentication);\r\n\r\n//     return () => {\r\n//       window.removeEventListener('storage', checkAuthentication);\r\n//     };\r\n//   }, []);\r\n\r\n//   const signOut = () => {\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('user');\r\n//     setIsAuthenticated(false);\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   const handleSearch = async (e) => {\r\n//     e.preventDefault();\r\n//     if (searchQuery) {\r\n//       setIsLoading(true);\r\n//       setError(null);\r\n//       try {\r\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, { params: { city: searchQuery } });\r\n//         setSearchResults(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching search results:', error);\r\n//         setError('An error occurred while searching. Please try again.');\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbaar\">\r\n//       <div className=\"navbar-container\">\r\n//         <Link to=\"/\" className=\"navbar-logo\">\r\n//           <img src={logo} alt=\"Logo\" />\r\n//           <span>Voyaige</span>\r\n//         </Link>\r\n//         <ul className=\"navbar-menu\">\r\n//           <li><Link to=\"/\">Home</Link></li>\r\n//           <li><Link to=\"/tours\">Tours</Link></li>\r\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\r\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\r\n//         </ul>\r\n//         <div className=\"navbar-actions\">\r\n//         <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\r\n//             <FaSearch /> {!searchOpen}\r\n//           </button>\r\n//           {isAuthenticated ? (\r\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\r\n//           ) : (\r\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\r\n//           )}\r\n\r\n//         </div>\r\n//       </div>\r\n      \r\n//       {searchOpen && (\r\n//         <div className=\"search-box\">\r\n//           <form onSubmit={handleSearch}>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search City\"\r\n//               value={searchQuery}\r\n//               onChange={(e) => setSearchQuery(e.target.value)}\r\n//             />\r\n//             <button type=\"submit\" disabled={isLoading}>\r\n//               {isLoading ? <FaSpinner className=\"spinner\" /> : <FaSearch />}\r\n//             </button>\r\n//           </form>\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n          \r\n//           <div className=\"search-results\">\r\n//             {searchResults.hotels.length > 0 && (\r\n//               <div className=\"result-section\">\r\n//                 <h3 className='heading3'>Hotels</h3>\r\n//                 <div className=\"result-grid\">\r\n//                   {searchResults.hotels.map((hotel) => (\r\n//                     <div className=\"result-card\" key={hotel._id}>\r\n                    \r\n//                       <span>{hotel.name}</span>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n              \r\n//               </div>\r\n//             )}\r\n//             {searchResults.restaurants.length > 0 && (\r\n//               <div className=\"result-section\">\r\n//                 <h3 className='heading3'>Restaurants</h3>\r\n//                 <div className=\"result-grid\">\r\n//                   {searchResults.restaurants.map((restaurant) => (\r\n//                     <div className=\"result-card\" key={restaurant._id}>\r\n                     \r\n//                       <span>{restaurant.name}</span>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n             \r\n//               </div>\r\n//             )}\r\n//             {!isLoading && searchQuery && searchResults.hotels.length === 0 && searchResults.restaurants.length === 0 && (\r\n//               <p className=\"no-results\">No results found for \"{searchQuery}\"</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { FaSearch } from 'react-icons/fa';\r\n// import logo from '../../assets/LOGO.png';\r\n// import './Navbar.css';\r\n\r\n// const Navbar = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [searchOpen, setSearchOpen] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const cities = [\r\n//     \"Islamabad\",\r\n//     \"Lahore\",\r\n//     \"Karachi\",\r\n//     \"Murree\",\r\n//     \"Peshawar\",\r\n//     \"Skardu\",\r\n//     \"Hunza\",\r\n//     \"Quetta\",\r\n//     \"Multan\",\r\n//     \"Faisalabad\",\r\n//   ];\r\n\r\n//   useEffect(() => {\r\n//     const checkAuthentication = () => {\r\n//       const token = localStorage.getItem('token');\r\n//       setIsAuthenticated(!!token);\r\n//     };\r\n\r\n//     checkAuthentication();\r\n//     window.addEventListener('storage', checkAuthentication);\r\n\r\n//     return () => {\r\n//       window.removeEventListener('storage', checkAuthentication);\r\n//     };\r\n//   }, []);\r\n\r\n//   const signOut = () => {\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('user');\r\n//     setIsAuthenticated(false);\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   const handleSearch = (e) => {\r\n//     e.preventDefault();\r\n//     if (searchQuery) {\r\n//       const cityFound = cities.find(city => city.toLowerCase() === searchQuery.toLowerCase());\r\n//       if (cityFound) {\r\n//         navigate(`/${cityFound}Page`);\r\n//       } else {\r\n//         setError(`No page found for \"${searchQuery}\"`);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbaar\">\r\n//       <div className=\"navbar-container\">\r\n//         <Link to=\"/\" className=\"navbar-logo\">\r\n//           <img src={logo} alt=\"Logo\" />\r\n//           <span>Voyaige</span>\r\n//         </Link>\r\n//         <ul className=\"navbar-menu\">\r\n//           <li><Link to=\"/\">Home</Link></li>\r\n//           <li><Link to=\"/tours\">Tours</Link></li>\r\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\r\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\r\n//         </ul>\r\n//         <div className=\"navbar-actions\">\r\n//           {isAuthenticated ? (\r\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\r\n//           ) : (\r\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\r\n//           )}\r\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\r\n//             <FaSearch /> {!searchOpen}\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {searchOpen && (\r\n//         <div className=\"search-box\">\r\n//           <form onSubmit={handleSearch}>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search City\"\r\n//               value={searchQuery}\r\n//               onChange={(e) => setSearchQuery(e.target.value)}\r\n//             />\r\n//             <button type=\"submit\" disabled={isLoading}>\r\n//               <FaSearch />\r\n//             </button>\r\n//           </form>\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n//         </div>\r\n//       )}\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner } from 'react-icons/fa';\r\n// import logo from '../../assets/LOGO.png';\r\n// import './Navbar.css';\r\n// import axios from 'axios';\r\n\r\n// const Navbar = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [searchResults, setSearchResults] = useState({ hotels: [], restaurants: [] });\r\n//   const [searchOpen, setSearchOpen] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [backgroundGray, setBackgroundGray] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const checkAuthentication = () => {\r\n//       const token = localStorage.getItem('token');\r\n//       setIsAuthenticated(!!token);\r\n//     };\r\n\r\n//     checkAuthentication();\r\n//     window.addEventListener('storage', checkAuthentication);\r\n\r\n//     return () => {\r\n//       window.removeEventListener('storage', checkAuthentication);\r\n//     };\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (searchOpen) {\r\n//       setBackgroundGray(true);\r\n//     } else {\r\n//       setBackgroundGray(false);\r\n//     }\r\n//   }, [searchOpen]);\r\n\r\n//   const signOut = () => {\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('user');\r\n//     setIsAuthenticated(false);\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   const handleSearch = async (e) => {\r\n//     e.preventDefault();\r\n//     if (searchQuery) {\r\n//       setIsLoading(true);\r\n//       setError(null);\r\n//       try {\r\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, { params: { city: searchQuery } });\r\n//         setSearchResults(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching search results:', error);\r\n//         setError('An error occurred while searching. Please try again.');\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <nav className={`navbaar ${backgroundGray ? 'gray-background' : ''}`}>\r\n//       <div className=\"navbar-container\">\r\n//         <Link to=\"/\" className=\"navbar-logo\">\r\n//           <img src={logo} alt=\"Logo\" />\r\n//           <span>Voyaige</span>\r\n//         </Link>\r\n//         <ul className=\"navbar-menu\">\r\n//           <li><Link to=\"/\">Home</Link></li>\r\n//           <li><Link to=\"/tours\">Tours</Link></li>\r\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\r\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\r\n//         </ul>\r\n//         <div className=\"navbar-actions\">\r\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\r\n//             <FaSearch />\r\n//           </button>\r\n//           {isAuthenticated ? (\r\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\r\n//           ) : (\r\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {searchOpen && (\r\n//         <div className=\"search-box\">\r\n//           <form onSubmit={handleSearch}>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search City\"\r\n//               value={searchQuery}\r\n//               onChange={(e) => setSearchQuery(e.target.value)}\r\n//             />\r\n//             <button type=\"submit\" disabled={isLoading}>\r\n//               {isLoading ? <FaSpinner className=\"spinner\" /> : <FaSearch />}\r\n//             </button>\r\n//           </form>\r\n//           {error && <p className=\"error-message\">{error}</p>}\r\n          \r\n//           <div className=\"search-results\">\r\n//             {searchResults.hotels.length > 0 && (\r\n//               <div className=\"result-section\">\r\n//                 <h3 className='heading3'>Hotels</h3>\r\n//                 <div className=\"result-grid\">\r\n//                   {searchResults.hotels.map((hotel) => (\r\n//                     <div className=\"result-card\" key={hotel._id}>\r\n//                       <span>{hotel.name}</span>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//             {searchResults.restaurants.length > 0 && (\r\n//               <div className=\"result-section\">\r\n//                 <h3 className='heading3'>Restaurants</h3>\r\n//                 <div className=\"result-grid\">\r\n//                   {searchResults.restaurants.map((restaurant) => (\r\n//                     <div className=\"result-card\" key={restaurant._id}>\r\n//                       <span>{restaurant.name}</span>\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//             {!isLoading && searchQuery && searchResults.hotels.length === 0 && searchResults.restaurants.length === 0 && (\r\n//               <p className=\"no-results\">No results found for \"{searchQuery}\"</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { FaHotel, FaUtensils, FaSearch, FaSpinner, FaMapMarkerAlt, FaWalking } from 'react-icons/fa';\r\n// import logo from '../../assets/LOGO.png';\r\n// import './Navbar.css';\r\n// import axios from 'axios';\r\n\r\n// const Navbar = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const [searchQuery, setSearchQuery] = useState('');\r\n//   const [searchResults, setSearchResults] = useState(null);\r\n//   const [searchOpen, setSearchOpen] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [backgroundGray, setBackgroundGray] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const checkAuthentication = () => {\r\n//       const token = localStorage.getItem('token');\r\n//       setIsAuthenticated(!!token);\r\n//     };\r\n\r\n//     checkAuthentication();\r\n//     window.addEventListener('storage', checkAuthentication);\r\n\r\n//     return () => {\r\n//       window.removeEventListener('storage', checkAuthentication);\r\n//     };\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     setBackgroundGray(searchOpen);\r\n//   }, [searchOpen]);\r\n\r\n//   const signOut = () => {\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('user');\r\n//     setIsAuthenticated(false);\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   const handleSearch = async (query) => {\r\n//     setSearchQuery(query);\r\n//     if (query.length >= 2) {\r\n//       setIsLoading(true);\r\n//       setError(null);\r\n//       try {\r\n//         const { data } = await axios.get(`http://localhost:5000/api/search`, {\r\n//           params: { query }\r\n//         });\r\n//         setSearchResults({\r\n//           city: {\r\n//             name: query,\r\n//             path: `/city/${query.toLowerCase()}`,\r\n//           },\r\n//           hotels: data.hotels || [],\r\n//           restaurants: data.restaurants || [],\r\n//           thingsToDo: data.attractions || []\r\n//         });\r\n//       } catch (error) {\r\n//         console.error('Error fetching search results:', error);\r\n//         setError('An error occurred while searching. Please try again.');\r\n//       } finally {\r\n//         setIsLoading(false);\r\n//       }\r\n//     } else {\r\n//       setSearchResults(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleCityClick = (cityName) => {\r\n//     navigate(`/city/${cityName.toLowerCase()}`, { state: { cityName } });\r\n//     setSearchOpen(false);\r\n//     setSearchQuery('');\r\n//   };\r\n\r\n//   const handleSectionClick = (cityName, section) => {\r\n//     navigate(`/city/${cityName.toLowerCase()}`, {\r\n//       state: { cityName, scrollTo: section }\r\n//     });\r\n//     setSearchOpen(false);\r\n//     setSearchQuery('');\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"navbaar\">\r\n//       <div className=\"navbar-container\">\r\n//         <Link to=\"/\" className=\"navbar-logo\">\r\n//           <img src={logo} alt=\"Logo\" />\r\n//           <span>Voyaige</span>\r\n//         </Link>\r\n//         <ul className=\"navbar-menu\">\r\n//           <li><Link to=\"/\">Home</Link></li>\r\n//           <li><Link to=\"/tours\">Tours</Link></li>\r\n//           <li><Link to=\"/hotels\">Hotels</Link></li>\r\n//           <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\r\n//         </ul>\r\n//         <div className=\"navbar-actions\">\r\n//           <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\r\n//             <FaSearch />\r\n//           </button>\r\n//           {isAuthenticated ? (\r\n//             <button className=\"auth-button\" onClick={signOut}>Log Out</button>\r\n//           ) : (\r\n//             <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {searchOpen && (\r\n//         <div className=\"nav-search-overlay\">\r\n//           <div className=\"nav-search-box\">\r\n//             <div className=\"nav-search-input-container\">\r\n//               <FaSearch className=\"nav-search-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search cities...\"\r\n//                 value={searchQuery}\r\n//                 onChange={(e) => handleSearch(e.target.value)}\r\n//                 className=\"nav-search-input\"\r\n//               />\r\n//             </div>\r\n\r\n//             {isLoading && (\r\n//               <div className=\"nav-loading\">\r\n//                 <FaSpinner className=\"nav-spinner\" />\r\n//               </div>\r\n//             )}\r\n            \r\n//             {error && <p className=\"nav-error-message\">{error}</p>}\r\n            \r\n//             {searchResults && searchQuery && (\r\n//               <div className=\"nav-search-recommendations\">\r\n//                 <div \r\n//                   className=\"nav-recommendation-item\"\r\n//                   onClick={() => handleCityClick(searchResults.city.name)}\r\n//                 >\r\n//                   <FaMapMarkerAlt className=\"nav-recommendation-icon\" />\r\n//                   <div className=\"nav-recommendation-content\">\r\n//                     <div className=\"nav-recommendation-title\">{searchResults.city.name}</div>\r\n//                     <div className=\"nav-recommendation-subtitle\">City</div>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div \r\n//                   className=\"nav-recommendation-item\"\r\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'hotels')}\r\n//                 >\r\n//                   <FaHotel className=\"nav-recommendation-icon\" />\r\n//                   <div className=\"nav-recommendation-content\">\r\n//                     <div className=\"nav-recommendation-title\">Hotels</div>\r\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div \r\n//                   className=\"nav-recommendation-item\"\r\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'attractions')}\r\n//                 >\r\n//                   <FaWalking className=\"nav-recommendation-icon\" />\r\n//                   <div className=\"nav-recommendation-content\">\r\n//                     <div className=\"nav-recommendation-title\">Things to Do</div>\r\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div \r\n//                   className=\"nav-recommendation-item\"\r\n//                   onClick={() => handleSectionClick(searchResults.city.name, 'restaurants')}\r\n//                 >\r\n//                   <FaUtensils className=\"nav-recommendation-icon\" />\r\n//                   <div className=\"nav-recommendation-content\">\r\n//                     <div className=\"nav-recommendation-title\">Restaurants</div>\r\n//                     <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FaHotel, FaUtensils, FaSearch, FaMapMarkerAlt, FaWalking } from 'react-icons/fa';\r\nimport logo from '../../assets/LOGO.png';\r\nimport './Navbar.css';\r\nimport axios from 'axios';\r\n\r\nconst CITIES = [\"Islamabad\", \"Lahore\", \"Karachi\", \"Murree\", \"Peshawar\", \"Skardu\", \"Hunza\", \"Quetta\", \"Multan\", \"Faisalabad\"];\r\n\r\nconst Navbar = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState(null);\r\n  const [searchOpen, setSearchOpen] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [backgroundGray, setBackgroundGray] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkAuthentication = () => {\r\n      const token = localStorage.getItem('token');\r\n      setIsAuthenticated(!!token);\r\n    };\r\n    checkAuthentication();\r\n    window.addEventListener('storage', checkAuthentication);\r\n    return () => {\r\n      window.removeEventListener('storage', checkAuthentication);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setBackgroundGray(searchOpen);\r\n  }, [searchOpen]);\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearchQuery(query);\r\n    if (query.length >= 2) {\r\n      setError(null);\r\n      const matchedCity = CITIES.find(city => city.toLowerCase().includes(query.toLowerCase()));\r\n      if (matchedCity) {\r\n        try {\r\n          const { data } = await axios.get(`http://localhost:5000/api/search`, {\r\n            params: { query: matchedCity }\r\n          });\r\n          setSearchResults({\r\n            city: {\r\n              name: matchedCity,\r\n              path: `/city/${matchedCity.toLowerCase()}`,\r\n            },\r\n            hotels: data.hotels || [],\r\n            restaurants: data.restaurants || [],\r\n            thingsToDo: data.attractions || []\r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching search results:', error);\r\n          setError('An error occurred while searching. Please try again.');\r\n        }\r\n      } else {\r\n        setSearchResults(null);\r\n        setError(`No results for \"${query}\"`);\r\n      }\r\n    } else {\r\n      setSearchResults(null);\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const handleCityClick = (cityName) => {\r\n    navigate(`/city/${cityName.toLowerCase()}`, { state: { cityName } });\r\n    setSearchOpen(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const handleSectionClick = (cityName, section) => {\r\n    navigate(`/city/${cityName.toLowerCase()}`, {\r\n      state: { cityName, scrollTo: section }\r\n    });\r\n    setSearchOpen(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbaar\">\r\n      <div className=\"navbar-container\">\r\n        <Link to=\"/\" className=\"navbar-logo\">\r\n          <img src={logo} alt=\"Logo\" />\r\n          <span>Voyaige</span>\r\n        </Link>\r\n        <ul className=\"navbar-menu\">\r\n          <li><Link to=\"/\">Home</Link></li>\r\n          <li><Link to=\"/tours\">Tours</Link></li>\r\n          <li><Link to=\"/hotels\">Hotels</Link></li>\r\n          <li><Link to=\"/restaurants\">Eat & Drink</Link></li>\r\n        </ul>\r\n        <div className=\"navbar-actions\">\r\n          <button onClick={() => setSearchOpen(!searchOpen)} className=\"search-button2\">\r\n            <FaSearch />\r\n          </button>\r\n          {isAuthenticated ? (\r\n            <button className=\"auth-button\" onClick={signOut}>Log Out</button>\r\n          ) : (\r\n            <Link className=\"auth-button\" to=\"/login\">Sign In</Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {searchOpen && (\r\n        <div className=\"nav-search-overlay\">\r\n          <div className=\"nav-search-box\">\r\n            <div className=\"nav-search-input-container\">\r\n              <FaSearch className=\"nav-search-icon\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search cities...\"\r\n                value={searchQuery}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n                className=\"nav-search-input\"\r\n              />\r\n            </div>\r\n\r\n            {error && <p className=\"nav-error-message\">{error}</p>}\r\n\r\n            {searchResults && searchQuery && !error && (\r\n              <div className=\"nav-search-recommendations\">\r\n                <div \r\n                  className=\"nav-recommendation-item\"\r\n                  onClick={() => handleCityClick(searchResults.city.name)}\r\n                >\r\n                  <FaMapMarkerAlt className=\"nav-recommendation-icon\" />\r\n                  <div className=\"nav-recommendation-content\">\r\n                    <div className=\"nav-recommendation-title\">{searchResults.city.name}</div>\r\n                    <div className=\"nav-recommendation-subtitle\">City</div>\r\n                  </div>\r\n                </div>\r\n                <div \r\n                  className=\"nav-recommendation-item\"\r\n                  onClick={() => handleSectionClick(searchResults.city.name, 'TopAttractions')}\r\n                >\r\n                  <FaWalking className=\"nav-recommendation-icon\" />\r\n                  <div className=\"nav-recommendation-content\">\r\n                    <div className=\"nav-recommendation-title\">Things to Do</div>\r\n                    <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n                  </div>\r\n                </div>\r\n                <div \r\n                  className=\"nav-recommendation-item\"\r\n                  onClick={() => handleSectionClick(searchResults.city.name, 'HotelsSection')}\r\n                >\r\n                  <FaHotel className=\"nav-recommendation-icon\" />\r\n                  <div className=\"nav-recommendation-content\">\r\n                    <div className=\"nav-recommendation-title\">Hotels</div>\r\n                    <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n                  </div>\r\n                </div>\r\n                <div \r\n                  className=\"nav-recommendation-item\"\r\n                  onClick={() => handleSectionClick(searchResults.city.name, 'RestaurantsSection')}\r\n                >\r\n                  <FaUtensils className=\"nav-recommendation-icon\" />\r\n                  <div className=\"nav-recommendation-content\">\r\n                    <div className=\"nav-recommendation-title\">Restaurants</div>\r\n                    <div className=\"nav-recommendation-subtitle\">in {searchResults.city.name}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module"}