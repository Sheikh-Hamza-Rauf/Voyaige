{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../NavBar/Navbar\";\nimport \"./MiloChatbot.css\";\nconst MiloChatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [isTyping, setIsTyping] = useState(false);\n  const [step, setStep] = useState(null); // Track conversation steps\n  const [tripDetails, setTripDetails] = useState({}); // Store user trip details incrementally\n\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\n  useEffect(() => {\n    const initialMessages = [{\n      sender: \"bot\",\n      text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\"\n    }];\n    setMessages(initialMessages);\n  }, []);\n  const handleUserMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: userMessage\n    }]);\n    setHistory([userMessage, ...history]);\n    setInput(\"\");\n    setWelcomeVisible(false);\n    setIsTyping(true);\n    let endpoint = \"/MiloChatbot\";\n    let payload = {\n      user_input: userMessage\n    };\n    if (step === \"transport\") {\n      // Handle transport choice\n      const transport = userMessage.toLowerCase();\n      setTripDetails(prev => ({\n        ...prev,\n        mode_of_transport: transport\n      }));\n      if (transport === \"bus\" || transport === \"train\") {\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"On day 2 and beyond, only cars can be selected for transport.\"\n        }]);\n      }\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"What is your budget for this trip? (Minimum: 10,000)\"\n      }]);\n      setStep(\"budget\");\n      setIsTyping(false);\n      return;\n    }\n    if (step === \"budget\") {\n      // Handle budget input\n      const budget = parseInt(userMessage, 10);\n      if (isNaN(budget) || budget < 10000) {\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"The budget is too low. Please provide a budget above 10,000.\"\n        }]);\n        setIsTyping(false);\n        return;\n      }\n      setTripDetails(prev => ({\n        ...prev,\n        budget\n      }));\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Do you prefer a hotel or an Airbnb for accommodation?\"\n      }]);\n      setStep(\"accommodation\");\n      setIsTyping(false);\n      return;\n    }\n    if (step === \"accommodation\") {\n      // Handle accommodation preference\n      const accommodation = userMessage.toLowerCase();\n      if (![\"hotel\", \"airbnb\"].includes(accommodation)) {\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Please choose either 'hotel' or 'Airbnb'.\"\n        }]);\n        setIsTyping(false);\n        return;\n      }\n      setTripDetails(prev => ({\n        ...prev,\n        accommodation\n      }));\n      payload = {\n        ...tripDetails,\n        user_input: `Plan a trip from ${tripDetails.starting_city} to ${tripDetails.destination_city}`\n      };\n      endpoint = \"/generate-itinerary\";\n    }\n    if (step === null && /plan a trip|generate an itinerary|form a plan|create a plan|create a trip/i.test(userMessage)) {\n      const userInputParts = userMessage.split(\" \");\n      const startingCity = userInputParts.includes(\"from\") ? userInputParts[userInputParts.indexOf(\"from\") + 1] : \"Islamabad\";\n      const destinationCity = userInputParts.includes(\"to\") ? userInputParts[userInputParts.indexOf(\"to\") + 1] : \"Lahore\";\n      setTripDetails({\n        starting_city: startingCity,\n        destination_city: destinationCity\n      });\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"What is your mode of transport (bus, train, or car)?\"\n      }]);\n      setStep(\"transport\");\n      setIsTyping(false);\n      return;\n    }\n    if (/tell me about|give details on|what is|where is|give info on|give information on|provide details on|provide information on/i.test(userMessage)) {\n      endpoint = \"/retrieve-details\";\n    }\n    if (/top|best/i.test(userMessage)) {\n      const match = userMessage.match(/top\\s+(\\d+)?\\s*(hotels|restaurants|attractions|airbnbs?)\\s+in\\s+([\\w\\s]+)/i);\n      if (match) {\n        const numRecommendations = parseInt(match[1], 10) || 5;\n        const category = match[2].toLowerCase();\n        const city = match[3].trim().toLowerCase();\n        endpoint = \"/retrieve-top-items\";\n        payload = {\n          user_input: userMessage,\n          num_recommendations: numRecommendations,\n          category,\n          city\n        };\n      } else {\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Please specify what type of top information you need (e.g., 'top 5 hotels in Lahore').\"\n        }]);\n        setIsTyping(false);\n        return;\n      }\n    }\n    try {\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      let botResponse;\n      if (endpoint === \"/retrieve-details\" && data.result) {\n        botResponse = data.result.replace(/\\n/g, \"<br>\");\n      } else if (endpoint === \"/retrieve-top-items\" && data.result) {\n        botResponse = data.result.replace(/\\n/g, \"<br>\");\n      } else if (endpoint === \"/generate-itinerary\" && data.response) {\n        botResponse = data.response.replace(/\\n/g, \"<br>\");\n      } else {\n        botResponse = \"I'm here to assist you!\";\n      }\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: botResponse\n      }]);\n    } catch (error) {\n      console.error(\"Error communicating with backend:\", error);\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Sorry, something went wrong. Please try again later.\"\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleUserMessage();\n    } else if (e.key === \"ArrowUp\") {\n      if (historyIndex < history.length - 1) {\n        const newIndex = historyIndex + 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(newIndex);\n      }\n    } else if (e.key === \"ArrowDown\") {\n      if (historyIndex > 0) {\n        const newIndex = historyIndex - 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(newIndex);\n      } else {\n        setInput(\"\");\n        setHistoryIndex(-1);\n      }\n    }\n  };\n  useEffect(() => {\n    const chatContainer = document.getElementById(\"chat-container\");\n    if (chatContainer) {\n      chatContainer.scrollTop = chatContainer.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), welcomeVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Welcome to a chat with Milo, your personal smart AI trip planner.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"Click on the input bar to start the chat.\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chat-container\",\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat-bubble ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`))), isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-bubble milo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"Milo is typing...\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type your message here...\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyDown: handleKeyDown,\n    onFocus: () => setWelcomeVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","useEffect","Navbar","MiloChatbot","messages","setMessages","input","setInput","welcomeVisible","setWelcomeVisible","history","setHistory","historyIndex","setHistoryIndex","isTyping","setIsTyping","step","setStep","tripDetails","setTripDetails","apiBaseURL","initialMessages","sender","text","handleUserMessage","trim","userMessage","prev","endpoint","payload","user_input","transport","toLowerCase","mode_of_transport","budget","parseInt","isNaN","accommodation","includes","starting_city","destination_city","test","userInputParts","split","startingCity","indexOf","destinationCity","match","numRecommendations","category","city","num_recommendations","response","fetch","method","headers","body","JSON","stringify","data","json","botResponse","result","replace","error","console","handleKeyDown","e","key","length","newIndex","chatContainer","document","getElementById","scrollTop","scrollHeight","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","map","msg","index","type","placeholder","value","onChange","target","onKeyDown","onFocus","onClick"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport \"./MiloChatbot.css\";\r\n\r\nconst MiloChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\r\n  const [history, setHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const [step, setStep] = useState(null); // Track conversation steps\r\n  const [tripDetails, setTripDetails] = useState({}); // Store user trip details incrementally\r\n\r\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\r\n\r\n  useEffect(() => {\r\n    const initialMessages = [\r\n      { sender: \"bot\", text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\" },\r\n    ];\r\n    setMessages(initialMessages);\r\n  }, []);\r\n\r\n  const handleUserMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim();\r\n    setMessages((prev) => [...prev, { sender: \"user\", text: userMessage }]);\r\n    setHistory([userMessage, ...history]);\r\n    setInput(\"\");\r\n    setWelcomeVisible(false);\r\n    setIsTyping(true);\r\n\r\n    let endpoint = \"/MiloChatbot\";\r\n    let payload = { user_input: userMessage };\r\n\r\n    if (step === \"transport\") {\r\n      // Handle transport choice\r\n      const transport = userMessage.toLowerCase();\r\n      setTripDetails((prev) => ({ ...prev, mode_of_transport: transport }));\r\n\r\n      if (transport === \"bus\" || transport === \"train\") {\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { sender: \"milo\", text: \"On day 2 and beyond, only cars can be selected for transport.\" },\r\n        ]);\r\n      }\r\n\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: \"What is your budget for this trip? (Minimum: 10,000)\" }]);\r\n      setStep(\"budget\");\r\n      setIsTyping(false);\r\n      return;\r\n    }\r\n\r\n    if (step === \"budget\") {\r\n      // Handle budget input\r\n      const budget = parseInt(userMessage, 10);\r\n      if (isNaN(budget) || budget < 10000) {\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"The budget is too low. Please provide a budget above 10,000.\" }]);\r\n        setIsTyping(false);\r\n        return;\r\n      }\r\n\r\n      setTripDetails((prev) => ({ ...prev, budget }));\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: \"Do you prefer a hotel or an Airbnb for accommodation?\" }]);\r\n      setStep(\"accommodation\");\r\n      setIsTyping(false);\r\n      return;\r\n    }\r\n\r\n    if (step === \"accommodation\") {\r\n      // Handle accommodation preference\r\n      const accommodation = userMessage.toLowerCase();\r\n      if (![\"hotel\", \"airbnb\"].includes(accommodation)) {\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"Please choose either 'hotel' or 'Airbnb'.\" }]);\r\n        setIsTyping(false);\r\n        return;\r\n      }\r\n\r\n      setTripDetails((prev) => ({ ...prev, accommodation }));\r\n      payload = {\r\n        ...tripDetails,\r\n        user_input: `Plan a trip from ${tripDetails.starting_city} to ${tripDetails.destination_city}`,\r\n      };\r\n      endpoint = \"/generate-itinerary\";\r\n    }\r\n\r\n    if (step === null && (/plan a trip|generate an itinerary|form a plan|create a plan|create a trip/i).test(userMessage)) {\r\n      const userInputParts = userMessage.split(\" \");\r\n      const startingCity = userInputParts.includes(\"from\")\r\n        ? userInputParts[userInputParts.indexOf(\"from\") + 1]\r\n        : \"Islamabad\";\r\n      const destinationCity = userInputParts.includes(\"to\")\r\n        ? userInputParts[userInputParts.indexOf(\"to\") + 1]\r\n        : \"Lahore\";\r\n\r\n      setTripDetails({ starting_city: startingCity, destination_city: destinationCity });\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: \"What is your mode of transport (bus, train, or car)?\" }]);\r\n      setStep(\"transport\");\r\n      setIsTyping(false);\r\n      return;\r\n    }\r\n\r\n    if ((/tell me about|give details on|what is|where is|give info on|give information on|provide details on|provide information on/i).test(userMessage)) {\r\n      endpoint = \"/retrieve-details\";\r\n    }\r\n\r\n    if ((/top|best/i).test(userMessage)) {\r\n      const match = userMessage.match(/top\\s+(\\d+)?\\s*(hotels|restaurants|attractions|airbnbs?)\\s+in\\s+([\\w\\s]+)/i);\r\n      if (match) {\r\n        const numRecommendations = parseInt(match[1], 10) || 5;\r\n        const category = match[2].toLowerCase();\r\n        const city = match[3].trim().toLowerCase();\r\n\r\n        endpoint = \"/retrieve-top-items\";\r\n        payload = {\r\n          user_input: userMessage,\r\n          num_recommendations: numRecommendations,\r\n          category,\r\n          city,\r\n        };\r\n      } else {\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"Please specify what type of top information you need (e.g., 'top 5 hotels in Lahore').\" }]);\r\n        setIsTyping(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await response.json();\r\n\r\n      let botResponse;\r\n\r\n      if (endpoint === \"/retrieve-details\" && data.result) {\r\n        botResponse = data.result.replace(/\\n/g, \"<br>\");\r\n      } else if (endpoint === \"/retrieve-top-items\" && data.result) {\r\n        botResponse = data.result.replace(/\\n/g, \"<br>\");\r\n      } else if (endpoint === \"/generate-itinerary\" && data.response) {\r\n        botResponse = data.response.replace(/\\n/g, \"<br>\");\r\n      } else {\r\n        botResponse = \"I'm here to assist you!\";\r\n      }\r\n\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: botResponse }]);\r\n    } catch (error) {\r\n      console.error(\"Error communicating with backend:\", error);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"milo\", text: \"Sorry, something went wrong. Please try again later.\" },\r\n      ]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleUserMessage();\r\n    } else if (e.key === \"ArrowUp\") {\r\n      if (historyIndex < history.length - 1) {\r\n        const newIndex = historyIndex + 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      }\r\n    } else if (e.key === \"ArrowDown\") {\r\n      if (historyIndex > 0) {\r\n        const newIndex = historyIndex - 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      } else {\r\n        setInput(\"\");\r\n        setHistoryIndex(-1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const chatContainer = document.getElementById(\"chat-container\");\r\n    if (chatContainer) {\r\n      chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <Navbar />\r\n      {welcomeVisible && (\r\n        <div className=\"welcome-message\">\r\n          <p>Welcome to a chat with Milo, your personal smart AI trip planner.</p>\r\n          <p>Click on the input bar to start the chat.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div id=\"chat-container\" className=\"chat-container\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\r\n            <span>{msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`}</span>\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"chat-bubble milo\">\r\n            <span>Milo is typing...</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          onFocus={() => setWelcomeVisible(false)}\r\n        />\r\n        <button onClick={handleUserMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}