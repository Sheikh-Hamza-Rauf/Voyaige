{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../NavBar/Navbar\";\nimport \"./MiloChatbot.css\";\nconst MiloChatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [isTyping, setIsTyping] = useState(false);\n  const [rightContainerVisible, setRightContainerVisible] = useState(false);\n  const [rightContainerContent, setRightContainerContent] = useState(\"\");\n  const [rightContainerTitle, setRightContainerTitle] = useState(\"\");\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\n  useEffect(() => {\n    const initialMessages = [{\n      sender: \"bot\",\n      text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\"\n    }];\n    setMessages(initialMessages);\n  }, []);\n  const handleUserMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: userMessage\n    }]);\n    setHistory([userMessage, ...history]);\n    setInput(\"\");\n    setWelcomeVisible(false);\n    setIsTyping(true);\n    let endpoint = \"/MiloChatbot\";\n    let payload = {\n      user_input: userMessage\n    };\n    if (/generate itinerary|plan a trip|form a plan|create a plan|create a trip/i.test(userMessage)) {\n      const userInputParts = userMessage.split(\" \");\n      const startingCity = userInputParts.includes(\"from\") ? userInputParts[userInputParts.indexOf(\"from\") + 1] : \"Islamabad\";\n      const destinationCity = userInputParts.includes(\"to\") ? userInputParts[userInputParts.indexOf(\"to\") + 1] : \"Lahore\";\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\n      endpoint = \"/generate-itinerary\";\n      payload = {\n        user_input: userMessage,\n        starting_city: startingCity,\n        destination_city: destinationCity,\n        days\n      };\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Generating itinerary...\"\n      }]);\n    }\n    try {\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (endpoint === \"/generate-itinerary\" && data.response) {\n        try {\n          const itineraryData = JSON.parse(data.response); // Convert to JSON object\n\n          if (itineraryData.status === \"error\") {\n            setMessages(prev => [...prev, {\n              sender: \"milo\",\n              text: itineraryData.messages.join(\"\\n\")\n            }]);\n            return;\n          }\n          const {\n            starting_city,\n            destination_city,\n            days,\n            itinerary,\n            total_cost\n          } = itineraryData.itinerary;\n\n          // Generate the itinerary display\n          let itineraryHTML = `<h3>Itinerary: ${starting_city} to ${destination_city} (${days} days)</h3>`;\n          itinerary.forEach(day => {\n            itineraryHTML += `\n              <div class=\"day-card\">\n                <h4>Day ${day.day}</h4>\n                <p><strong>Transport:</strong> ${day.transport}</p>\n                <p><strong>Accommodation:</strong> ${day.accommodation}</p>\n                <p><strong>Restaurants:</strong> ${day.restaurants.join(\", \")}</p>\n                <p><strong>Attractions:</strong> ${day.attractions.join(\", \")}</p>\n              </div>\n            `;\n          });\n          itineraryHTML += `<h3>Total Trip Cost: Rs${total_cost}</h3>`;\n          setRightContainerTitle(\"Itinerary\");\n          setRightContainerContent(itineraryHTML);\n          setRightContainerVisible(true);\n          setMessages(prev => [...prev, {\n            sender: \"milo\",\n            text: \"Generated itinerary is ready!\"\n          }]);\n        } catch (error) {\n          console.error(\"Error parsing itinerary JSON:\", error);\n          setMessages(prev => [...prev, {\n            sender: \"milo\",\n            text: \"Failed to generate itinerary. Please try again.\"\n          }]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error communicating with backend:\", error);\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Sorry, something went wrong. Please try again later.\"\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleUserMessage();\n    } else if (e.key === \"ArrowUp\") {\n      if (historyIndex < history.length - 1) {\n        const newIndex = historyIndex + 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(newIndex);\n      }\n    } else if (e.key === \"ArrowDown\") {\n      if (historyIndex > 0) {\n        const newIndex = historyIndex - 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(-1);\n      }\n    }\n  };\n  const closeRightContainer = () => {\n    setRightContainerVisible(false);\n    setTimeout(() => {\n      setRightContainerContent(\"\");\n    }, 300);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, \"Welcome to a chat with Milo, your personal smart AI Trip Planner!\"), welcomeVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Click on the input bar to start the chat.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: rightContainerVisible ? \"chat-container reduced-width\" : \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat-bubble ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`))), isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-bubble milo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"Milo is typing...\"))), rightContainerVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: rightContainerTitle === \"Itinerary\" ? \"itinerary-container\" : \"recommendations-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-right-container\",\n    onClick: closeRightContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, rightContainerTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-container-content\",\n    dangerouslySetInnerHTML: {\n      __html: rightContainerContent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type your message here...\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyDown: handleKeyDown,\n    onFocus: () => setWelcomeVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","useEffect","Navbar","MiloChatbot","messages","setMessages","input","setInput","welcomeVisible","setWelcomeVisible","history","setHistory","historyIndex","setHistoryIndex","isTyping","setIsTyping","rightContainerVisible","setRightContainerVisible","rightContainerContent","setRightContainerContent","rightContainerTitle","setRightContainerTitle","apiBaseURL","initialMessages","sender","text","handleUserMessage","trim","userMessage","prev","endpoint","payload","user_input","test","userInputParts","split","startingCity","includes","indexOf","destinationCity","daysMatch","match","days","parseInt","starting_city","destination_city","response","fetch","method","headers","body","JSON","stringify","data","json","itineraryData","parse","status","join","itinerary","total_cost","itineraryHTML","forEach","day","transport","accommodation","restaurants","attractions","error","console","handleKeyDown","e","key","length","newIndex","closeRightContainer","setTimeout","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onClick","dangerouslySetInnerHTML","__html","type","placeholder","value","onChange","target","onKeyDown","onFocus"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport \"./MiloChatbot.css\";\r\n\r\nconst MiloChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\r\n  const [history, setHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const [rightContainerVisible, setRightContainerVisible] = useState(false);\r\n  const [rightContainerContent, setRightContainerContent] = useState(\"\");\r\n  const [rightContainerTitle, setRightContainerTitle] = useState(\"\");\r\n\r\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\r\n\r\n  useEffect(() => {\r\n    const initialMessages = [\r\n      {\r\n        sender: \"bot\",\r\n        text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\",\r\n      },\r\n    ];\r\n    setMessages(initialMessages);\r\n  }, []);\r\n\r\n  const handleUserMessage = async () => {\r\n    if (!input.trim()) return;\r\n  \r\n    const userMessage = input.trim();\r\n    setMessages((prev) => [...prev, { sender: \"user\", text: userMessage }]);\r\n    setHistory([userMessage, ...history]);\r\n    setInput(\"\");\r\n    setWelcomeVisible(false);\r\n    setIsTyping(true);\r\n  \r\n    let endpoint = \"/MiloChatbot\";\r\n    let payload = { user_input: userMessage };\r\n  \r\n    if (/generate itinerary|plan a trip|form a plan|create a plan|create a trip/i.test(userMessage)) {\r\n      const userInputParts = userMessage.split(\" \");\r\n      const startingCity = userInputParts.includes(\"from\")\r\n        ? userInputParts[userInputParts.indexOf(\"from\") + 1]\r\n        : \"Islamabad\";\r\n      const destinationCity = userInputParts.includes(\"to\")\r\n        ? userInputParts[userInputParts.indexOf(\"to\") + 1]\r\n        : \"Lahore\";\r\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\r\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\r\n  \r\n      endpoint = \"/generate-itinerary\";\r\n      payload = {\r\n        user_input: userMessage,\r\n        starting_city: startingCity,\r\n        destination_city: destinationCity,\r\n        days,\r\n      };\r\n  \r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: \"Generating itinerary...\" }]);\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await response.json();\r\n  \r\n      if (endpoint === \"/generate-itinerary\" && data.response) {\r\n        try {\r\n          const itineraryData = JSON.parse(data.response); // Convert to JSON object\r\n  \r\n          if (itineraryData.status === \"error\") {\r\n            setMessages((prev) => [...prev, { sender: \"milo\", text: itineraryData.messages.join(\"\\n\") }]);\r\n            return;\r\n          }\r\n  \r\n          const { starting_city, destination_city, days, itinerary, total_cost } = itineraryData.itinerary;\r\n  \r\n          // Generate the itinerary display\r\n          let itineraryHTML = `<h3>Itinerary: ${starting_city} to ${destination_city} (${days} days)</h3>`;\r\n  \r\n          itinerary.forEach((day) => {\r\n            itineraryHTML += `\r\n              <div class=\"day-card\">\r\n                <h4>Day ${day.day}</h4>\r\n                <p><strong>Transport:</strong> ${day.transport}</p>\r\n                <p><strong>Accommodation:</strong> ${day.accommodation}</p>\r\n                <p><strong>Restaurants:</strong> ${day.restaurants.join(\", \")}</p>\r\n                <p><strong>Attractions:</strong> ${day.attractions.join(\", \")}</p>\r\n              </div>\r\n            `;\r\n          });\r\n  \r\n          itineraryHTML += `<h3>Total Trip Cost: Rs${total_cost}</h3>`;\r\n  \r\n          setRightContainerTitle(\"Itinerary\");\r\n          setRightContainerContent(itineraryHTML);\r\n          setRightContainerVisible(true);\r\n  \r\n          setMessages((prev) => [...prev, { sender: \"milo\", text: \"Generated itinerary is ready!\" }]);\r\n        } catch (error) {\r\n          console.error(\"Error parsing itinerary JSON:\", error);\r\n          setMessages((prev) => [...prev, { sender: \"milo\", text: \"Failed to generate itinerary. Please try again.\" }]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error communicating with backend:\", error);\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: \"Sorry, something went wrong. Please try again later.\" }]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };  \r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleUserMessage();\r\n    } else if (e.key === \"ArrowUp\") {\r\n      if (historyIndex < history.length - 1) {\r\n        const newIndex = historyIndex + 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      }\r\n    } else if (e.key === \"ArrowDown\") {\r\n      if (historyIndex > 0) {\r\n        const newIndex = historyIndex - 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(-1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const closeRightContainer = () => {\r\n    setRightContainerVisible(false);\r\n    setTimeout(() => {\r\n      setRightContainerContent(\"\");\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <Navbar />\r\n      <h3>Welcome to a chat with Milo, your personal smart AI Trip Planner!</h3>\r\n      {welcomeVisible && (\r\n        <div className=\"welcome-message\">\r\n          <h4>Click on the input bar to start the chat.</h4>\r\n        </div>\r\n      )}\r\n\r\n      <div className={rightContainerVisible ? \"chat-container reduced-width\" : \"chat-container\"}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\r\n            <span>{msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`}</span>\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"chat-bubble milo\">\r\n            <span>Milo is typing...</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {rightContainerVisible && (\r\n        <div className={rightContainerTitle === \"Itinerary\" ? \"itinerary-container\" : \"recommendations-container\"}>\r\n          <button className=\"close-right-container\" onClick={closeRightContainer}>\r\n            &times;\r\n          </button>\r\n          <h2>{rightContainerTitle}</h2>\r\n          <div\r\n            className=\"right-container-content\"\r\n            dangerouslySetInnerHTML={{ __html: rightContainerContent }}\r\n          ></div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          onFocus={() => setWelcomeVisible(false)}\r\n        />\r\n        <button onClick={handleUserMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}