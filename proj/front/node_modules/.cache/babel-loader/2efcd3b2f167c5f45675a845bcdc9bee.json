{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\Voyaige\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\CheckoutPage\\\\CheckoutPage.js\";\n// import React, { useState, useEffect } from 'react';\n// import { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import { CreditCard, Lock, Calendar, User, Shield } from 'lucide-react';\n// import './CheckoutPage.css';\n// import Navbar from '../NavBar/Navbar';\n\n// const CheckoutPage = ({ tripData = {\n//   days: [\n//     { title: \"Plan + Flight + Hotel\", cost: 140000 },\n//     { title: \"Plan + Bus + Hotel\", cost: 25000 },\n//     { title: \"Plan + Car + Hotel\", cost: 32500 }\n//   ],\n//   discountPercentage: 10\n// } }) => {\n//   const stripe = useStripe();\n//   const elements = useElements();\n//   const navigate = useNavigate();\n\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [success, setSuccess] = useState(false);\n//   const [promoCode, setPromoCode] = useState('');\n//   const [isCardFocused, setIsCardFocused] = useState(false);\n\n//   // Calculate totals\n//   const subtotal = tripData.days.reduce((sum, day) => sum + day.cost, 0);\n//   const discount = (subtotal * tripData.discountPercentage) / 100;\n//   const total = subtotal - discount;\n\n//   useEffect(() => {\n//     if (success) {\n//       const timer = setTimeout(() => {\n//         navigate('/cart');\n//       }, 3000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [success, navigate]);\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     setLoading(true);\n\n//     if (!stripe || !elements) return;\n\n//     try {\n//       const { data: { clientSecret } } = await axios.post('http://localhost:5000/create-payment-intent', {\n//         amount: total\n//       });\n\n//       const { error: stripeError } = await stripe.confirmCardPayment(clientSecret, {\n//         payment_method: {\n//           card: elements.getElement(CardElement),\n//         }\n//       });\n\n//       if (stripeError) {\n//         setError(stripeError.message);\n//         setSuccess(false);\n//       } else {\n//         setSuccess(true);\n//         setError(null);\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//       setSuccess(false);\n//     }\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div className=\"checkout-container\">\n//       <Navbar />\n//       <div className=\"checkout-content fade-in\">\n//         <div className=\"checkout-header\">\n//           <h1>Complete Your Payment</h1>\n//           <div className=\"secure-badge\">\n//             <Shield size={18} /> Secured & Encrypted\n//           </div>\n//         </div>\n\n//         <div className=\"checkout-grid\">\n//           <div className=\"summary-card\">\n//             <div className=\"card-header\">\n//               <h2>Trip Summary</h2>\n//               <CreditCard size={20} />\n//             </div>\n\n//             <div className=\"cost-breakdown\">\n//               {tripData.days.map((day, index) => (\n//                 <div key={index} className=\"cost-item slide-in\">\n//                   <span>Day {index + 1}: {day.title}</span>\n//                   <span className=\"cost\">{day.cost.toLocaleString()}</span>\n//                 </div>\n//               ))}\n\n//               <div className=\"cost-divider\"></div>\n\n//               <div className=\"subtotal cost-item\">\n//                 <span>Sub-total</span>\n//                 <span className=\"cost\">{subtotal.toLocaleString()}</span>\n//               </div>\n\n//               <div className=\"discount cost-item\">\n//                 <span>Points Discount ({tripData.discountPercentage}%)</span>\n//                 <span className=\"cost-discount\">-{discount.toLocaleString()}</span>\n//               </div>\n\n//               <div className=\"total cost-item\">\n//                 <span>Total Amount</span>\n//                 <span className=\"cost-total\">{total.toLocaleString()}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"promosection\">\n//               <h3>Promo Code</h3>\n//               <div className=\"promo-input\">\n//                 <input \n//                   type=\"text\" \n//                   value={promoCode}\n//                   onChange={(e) => setPromoCode(e.target.value)}\n//                   placeholder=\"Enter your code\"\n//                 />\n//                 <button className=\"promo-button\">Apply</button>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"payment-card\">\n//             <div className=\"card-header\">\n//               <h2>Card Payment</h2>\n//               <Lock size={20} />\n//             </div>\n\n//             <form onSubmit={handleSubmit} className=\"payment-form\">\n//               <div className={`stripe-card ${isCardFocused ? 'focused' : ''}`}>\n//                 <CardElement \n//                   onFocus={() => setIsCardFocused(true)}\n//                   onBlur={() => setIsCardFocused(false)}\n//                   options={{\n//                     style: {\n//                       base: {\n//                         fontSize: '16px',\n//                         fontWeight: '500',\n//                         fontFamily: 'Inter, system-ui, sans-serif',\n//                         color: '#1a1f36',\n//                         '::placeholder': {\n//                           color: '#6b7280',\n//                         },\n//                         padding: '20px 0',\n//                       },\n//                       invalid: {\n//                         color: '#ef4444',\n//                       },\n//                     },\n//                   }}\n//                 />\n//               </div>\n\n//               {error && <div className=\"error-message slide-in\">{error}</div>}\n//               {success && <div className=\"success-message slide-in\">Payment successful! Redirecting...</div>}\n\n//               <button \n//                 className={`payment-button ${loading ? 'loading' : ''}`}\n//                 type=\"submit\"\n//                 disabled={!stripe || loading}\n//               >\n//                 {loading ? (\n//                   <>\n//                     <div className=\"spinner\"></div>\n//                     Processing Payment...\n//                   </>\n//                 ) : (\n//                   <>\n//                     <Lock size={18} />\n//                     Pay {total.toLocaleString()}\n//                   </>\n//                 )}\n//               </button>\n//             </form>\n\n//             <div className=\"security-info\">\n//               <Shield size={16} />\n//               <span>Your payment information is encrypted and secure</span>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CheckoutPage;\n\nimport React, { useState, useEffect } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { CreditCard, Lock, Shield } from 'lucide-react';\nimport './CheckoutPage.css';\nimport Navbar from '../NavBar/Navbar';\nconst CheckoutPage = ({\n  tripData = {\n    days: [{\n      title: \"Plan + Flight + Hotel\",\n      cost: 140000\n    }, {\n      title: \"Plan + Bus + Hotel\",\n      cost: 25000\n    }, {\n      title: \"Plan + Car + Hotel\",\n      cost: 32500\n    }],\n    discountPercentage: 10\n  }\n}) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const subtotal = tripData.days.reduce((sum, day) => sum + day.cost, 0);\n  const discount = subtotal * tripData.discountPercentage / 100;\n  const total = subtotal - discount;\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        navigate('/cart');\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [success, navigate]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    if (!stripe || !elements) {\n      setError(\"Stripe is not properly initialized\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/payment-intent', {\n        amount: total\n      });\n      if (response.status !== 200) {\n        throw new Error(`Error: ${response.data.message}`);\n      }\n      const {\n        clientSecret\n      } = response.data;\n      const {\n        error: stripeError,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (stripeError) {\n        setError(stripeError.message);\n        setSuccess(false);\n      } else if (paymentIntent.status === 'succeeded') {\n        setSuccess(true);\n        setError(null);\n      } else {\n        setError(`Payment status: ${paymentIntent.status}. Please try again.`);\n        setSuccess(false);\n      }\n    } catch (err) {\n      setError(err.message || \"An error occurred while processing your payment\");\n      setSuccess(false);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-content fade-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, \"Complete Your Payment\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secure-badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Shield, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }), \" Secured & Encrypted\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, \"Trip Summary\"), /*#__PURE__*/React.createElement(CreditCard, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }), tripData.days.map((day, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"cost-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }, day.title), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, day.cost.toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cost-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, \"Total Amount\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cost-total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, total.toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, \"Card Payment\"), /*#__PURE__*/React.createElement(Lock, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"payment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    options: {\n      style: {\n        base: {\n          fontSize: '16px'\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }, error), success && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"success-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 27\n    }\n  }, \"Payment successful! Redirecting...\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe || loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, loading ? \"Processing...\" : `Pay ${total.toLocaleString()}`))))));\n};\nexport default CheckoutPage;","map":{"version":3,"names":["React","useState","useEffect","CardElement","useStripe","useElements","useNavigate","axios","CreditCard","Lock","Shield","Navbar","CheckoutPage","tripData","days","title","cost","discountPercentage","stripe","elements","navigate","loading","setLoading","error","setError","success","setSuccess","subtotal","reduce","sum","day","discount","total","timer","setTimeout","clearTimeout","handleSubmit","event","preventDefault","response","post","amount","status","Error","data","message","clientSecret","stripeError","paymentIntent","confirmCardPayment","payment_method","card","getElement","err","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","size","map","index","key","toLocaleString","onSubmit","options","style","base","fontSize","type","disabled"],"sources":["F:/Web/Voyaige/Voyaige/proj/front/src/components/CheckoutPage/CheckoutPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import { CreditCard, Lock, Calendar, User, Shield } from 'lucide-react';\r\n// import './CheckoutPage.css';\r\n// import Navbar from '../NavBar/Navbar';\r\n\r\n// const CheckoutPage = ({ tripData = {\r\n//   days: [\r\n//     { title: \"Plan + Flight + Hotel\", cost: 140000 },\r\n//     { title: \"Plan + Bus + Hotel\", cost: 25000 },\r\n//     { title: \"Plan + Car + Hotel\", cost: 32500 }\r\n//   ],\r\n//   discountPercentage: 10\r\n// } }) => {\r\n//   const stripe = useStripe();\r\n//   const elements = useElements();\r\n//   const navigate = useNavigate();\r\n  \r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [success, setSuccess] = useState(false);\r\n//   const [promoCode, setPromoCode] = useState('');\r\n//   const [isCardFocused, setIsCardFocused] = useState(false);\r\n\r\n//   // Calculate totals\r\n//   const subtotal = tripData.days.reduce((sum, day) => sum + day.cost, 0);\r\n//   const discount = (subtotal * tripData.discountPercentage) / 100;\r\n//   const total = subtotal - discount;\r\n\r\n//   useEffect(() => {\r\n//     if (success) {\r\n//       const timer = setTimeout(() => {\r\n//         navigate('/cart');\r\n//       }, 3000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [success, navigate]);\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     setLoading(true);\r\n    \r\n//     if (!stripe || !elements) return;\r\n\r\n//     try {\r\n//       const { data: { clientSecret } } = await axios.post('http://localhost:5000/create-payment-intent', {\r\n//         amount: total\r\n//       });\r\n\r\n//       const { error: stripeError } = await stripe.confirmCardPayment(clientSecret, {\r\n//         payment_method: {\r\n//           card: elements.getElement(CardElement),\r\n//         }\r\n//       });\r\n\r\n//       if (stripeError) {\r\n//         setError(stripeError.message);\r\n//         setSuccess(false);\r\n//       } else {\r\n//         setSuccess(true);\r\n//         setError(null);\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.message);\r\n//       setSuccess(false);\r\n//     }\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"checkout-container\">\r\n//       <Navbar />\r\n//       <div className=\"checkout-content fade-in\">\r\n//         <div className=\"checkout-header\">\r\n//           <h1>Complete Your Payment</h1>\r\n//           <div className=\"secure-badge\">\r\n//             <Shield size={18} /> Secured & Encrypted\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"checkout-grid\">\r\n//           <div className=\"summary-card\">\r\n//             <div className=\"card-header\">\r\n//               <h2>Trip Summary</h2>\r\n//               <CreditCard size={20} />\r\n//             </div>\r\n\r\n//             <div className=\"cost-breakdown\">\r\n//               {tripData.days.map((day, index) => (\r\n//                 <div key={index} className=\"cost-item slide-in\">\r\n//                   <span>Day {index + 1}: {day.title}</span>\r\n//                   <span className=\"cost\">{day.cost.toLocaleString()}</span>\r\n//                 </div>\r\n//               ))}\r\n              \r\n//               <div className=\"cost-divider\"></div>\r\n              \r\n//               <div className=\"subtotal cost-item\">\r\n//                 <span>Sub-total</span>\r\n//                 <span className=\"cost\">{subtotal.toLocaleString()}</span>\r\n//               </div>\r\n              \r\n//               <div className=\"discount cost-item\">\r\n//                 <span>Points Discount ({tripData.discountPercentage}%)</span>\r\n//                 <span className=\"cost-discount\">-{discount.toLocaleString()}</span>\r\n//               </div>\r\n              \r\n//               <div className=\"total cost-item\">\r\n//                 <span>Total Amount</span>\r\n//                 <span className=\"cost-total\">{total.toLocaleString()}</span>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"promosection\">\r\n//               <h3>Promo Code</h3>\r\n//               <div className=\"promo-input\">\r\n//                 <input \r\n//                   type=\"text\" \r\n//                   value={promoCode}\r\n//                   onChange={(e) => setPromoCode(e.target.value)}\r\n//                   placeholder=\"Enter your code\"\r\n//                 />\r\n//                 <button className=\"promo-button\">Apply</button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"payment-card\">\r\n//             <div className=\"card-header\">\r\n//               <h2>Card Payment</h2>\r\n//               <Lock size={20} />\r\n//             </div>\r\n\r\n//             <form onSubmit={handleSubmit} className=\"payment-form\">\r\n//               <div className={`stripe-card ${isCardFocused ? 'focused' : ''}`}>\r\n//                 <CardElement \r\n//                   onFocus={() => setIsCardFocused(true)}\r\n//                   onBlur={() => setIsCardFocused(false)}\r\n//                   options={{\r\n//                     style: {\r\n//                       base: {\r\n//                         fontSize: '16px',\r\n//                         fontWeight: '500',\r\n//                         fontFamily: 'Inter, system-ui, sans-serif',\r\n//                         color: '#1a1f36',\r\n//                         '::placeholder': {\r\n//                           color: '#6b7280',\r\n//                         },\r\n//                         padding: '20px 0',\r\n//                       },\r\n//                       invalid: {\r\n//                         color: '#ef4444',\r\n//                       },\r\n//                     },\r\n//                   }}\r\n//                 />\r\n//               </div>\r\n\r\n//               {error && <div className=\"error-message slide-in\">{error}</div>}\r\n//               {success && <div className=\"success-message slide-in\">Payment successful! Redirecting...</div>}\r\n\r\n//               <button \r\n//                 className={`payment-button ${loading ? 'loading' : ''}`}\r\n//                 type=\"submit\"\r\n//                 disabled={!stripe || loading}\r\n//               >\r\n//                 {loading ? (\r\n//                   <>\r\n//                     <div className=\"spinner\"></div>\r\n//                     Processing Payment...\r\n//                   </>\r\n//                 ) : (\r\n//                   <>\r\n//                     <Lock size={18} />\r\n//                     Pay {total.toLocaleString()}\r\n//                   </>\r\n//                 )}\r\n//               </button>\r\n//             </form>\r\n\r\n//             <div className=\"security-info\">\r\n//               <Shield size={16} />\r\n//               <span>Your payment information is encrypted and secure</span>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CheckoutPage;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { CreditCard, Lock, Shield } from 'lucide-react';\r\nimport './CheckoutPage.css';\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\nconst CheckoutPage = ({ tripData = {\r\n  days: [\r\n    { title: \"Plan + Flight + Hotel\", cost: 140000 },\r\n    { title: \"Plan + Bus + Hotel\", cost: 25000 },\r\n    { title: \"Plan + Car + Hotel\", cost: 32500 }\r\n  ],\r\n  discountPercentage: 10\r\n} }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const navigate = useNavigate();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const subtotal = tripData.days.reduce((sum, day) => sum + day.cost, 0);\r\n  const discount = (subtotal * tripData.discountPercentage) / 100;\r\n  const total = subtotal - discount;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      const timer = setTimeout(() => {\r\n        navigate('/cart');\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [success, navigate]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    \r\n    if (!stripe || !elements) {\r\n      setError(\"Stripe is not properly initialized\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/payment-intent', {\r\n        amount: total\r\n      });\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(`Error: ${response.data.message}`);\r\n      }\r\n      \r\n      const { clientSecret } = response.data;\r\n\r\n      const { error: stripeError, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        }\r\n      });\r\n\r\n      if (stripeError) {\r\n        setError(stripeError.message);\r\n        setSuccess(false);\r\n      } else if (paymentIntent.status === 'succeeded') {\r\n        setSuccess(true);\r\n        setError(null);\r\n      } else {\r\n        setError(`Payment status: ${paymentIntent.status}. Please try again.`);\r\n        setSuccess(false);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || \"An error occurred while processing your payment\");\r\n      setSuccess(false);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkout-container\">\r\n      <Navbar />\r\n      <div className=\"checkout-content fade-in\">\r\n        <h1>Complete Your Payment</h1>\r\n        <div className=\"secure-badge\">\r\n          <Shield size={18} /> Secured & Encrypted\r\n        </div>\r\n\r\n        <div className=\"checkout-grid\">\r\n          <div className=\"summary-card\">\r\n            <h2>Trip Summary</h2>\r\n            <CreditCard size={20} />\r\n            {tripData.days.map((day, index) => (\r\n              <div key={index} className=\"cost-item\">\r\n                <span>{day.title}</span>\r\n                <span className=\"cost\">{day.cost.toLocaleString()}</span>\r\n              </div>\r\n            ))}\r\n            <div className=\"cost-item\">\r\n              <span>Total Amount</span>\r\n              <span className=\"cost-total\">{total.toLocaleString()}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"payment-card\">\r\n            <h2>Card Payment</h2>\r\n            <Lock size={20} />\r\n\r\n            <form onSubmit={handleSubmit} className=\"payment-form\">\r\n              <CardElement options={{ style: { base: { fontSize: '16px' } } }} />\r\n\r\n              {error && <div className=\"error-message\">{error}</div>}\r\n              {success && <div className=\"success-message\">Payment successful! Redirecting...</div>}\r\n\r\n              <button type=\"submit\" disabled={!stripe || loading}>\r\n                {loading ? \"Processing...\" : `Pay ${total.toLocaleString()}`}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,IAAI,EAAEC,MAAM,QAAQ,cAAc;AACvD,OAAO,oBAAoB;AAC3B,OAAOC,MAAM,MAAM,kBAAkB;AAErC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ,GAAG;IACjCC,IAAI,EAAE,CACJ;MAAEC,KAAK,EAAE,uBAAuB;MAAEC,IAAI,EAAE;IAAO,CAAC,EAChD;MAAED,KAAK,EAAE,oBAAoB;MAAEC,IAAI,EAAE;IAAM,CAAC,EAC5C;MAAED,KAAK,EAAE,oBAAoB;MAAEC,IAAI,EAAE;IAAM,CAAC,CAC7C;IACDC,kBAAkB,EAAE;EACtB;AAAE,CAAC,KAAK;EACN,MAAMC,MAAM,GAAGd,SAAS,CAAC,CAAC;EAC1B,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM0B,QAAQ,GAAGd,QAAQ,CAACC,IAAI,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,CAACd,IAAI,EAAE,CAAC,CAAC;EACtE,MAAMe,QAAQ,GAAIJ,QAAQ,GAAGd,QAAQ,CAACI,kBAAkB,GAAI,GAAG;EAC/D,MAAMe,KAAK,GAAGL,QAAQ,GAAGI,QAAQ;EAEjC7B,SAAS,CAAC,MAAM;IACd,IAAIuB,OAAO,EAAE;MACX,MAAMQ,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7Bd,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMe,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACR,OAAO,EAAEL,QAAQ,CAAC,CAAC;EAEvB,MAAMgB,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBhB,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI,CAACJ,MAAM,IAAI,CAACC,QAAQ,EAAE;MACxBK,QAAQ,CAAC,oCAAoC,CAAC;MAC9CF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAAC,0CAA0C,EAAE;QAC5EC,MAAM,EAAET;MACV,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,UAAUJ,QAAQ,CAACK,IAAI,CAACC,OAAO,EAAE,CAAC;MACpD;MAEA,MAAM;QAAEC;MAAa,CAAC,GAAGP,QAAQ,CAACK,IAAI;MAEtC,MAAM;QAAErB,KAAK,EAAEwB,WAAW;QAAEC;MAAc,CAAC,GAAG,MAAM9B,MAAM,CAAC+B,kBAAkB,CAACH,YAAY,EAAE;QAC1FI,cAAc,EAAE;UACdC,IAAI,EAAEhC,QAAQ,CAACiC,UAAU,CAACjD,WAAW;QACvC;MACF,CAAC,CAAC;MAEF,IAAI4C,WAAW,EAAE;QACfvB,QAAQ,CAACuB,WAAW,CAACF,OAAO,CAAC;QAC7BnB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,MAAM,IAAIsB,aAAa,CAACN,MAAM,KAAK,WAAW,EAAE;QAC/ChB,UAAU,CAAC,IAAI,CAAC;QAChBF,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACLA,QAAQ,CAAC,mBAAmBwB,aAAa,CAACN,MAAM,qBAAqB,CAAC;QACtEhB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,OAAO2B,GAAG,EAAE;MACZ7B,QAAQ,CAAC6B,GAAG,CAACR,OAAO,IAAI,iDAAiD,CAAC;MAC1EnB,UAAU,CAAC,KAAK,CAAC;IACnB;IACAJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEtB,KAAA,CAAAsD,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjC7D,KAAA,CAAAsD,aAAA,CAAC3C,MAAM;IAAA6C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACV7D,KAAA,CAAAsD,aAAA;IAAKC,SAAS,EAAC,0BAA0B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvC7D,KAAA,CAAAsD,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,uBAAyB,CAAC,eAC9B7D,KAAA,CAAAsD,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3B7D,KAAA,CAAAsD,aAAA,CAAC5C,MAAM;IAACoD,IAAI,EAAE,EAAG;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,wBACjB,CAAC,eAEN7D,KAAA,CAAAsD,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5B7D,KAAA,CAAAsD,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3B7D,KAAA,CAAAsD,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAgB,CAAC,eACrB7D,KAAA,CAAAsD,aAAA,CAAC9C,UAAU;IAACsD,IAAI,EAAE,EAAG;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EACvBhD,QAAQ,CAACC,IAAI,CAACiD,GAAG,CAAC,CAACjC,GAAG,EAAEkC,KAAK,kBAC5BhE,KAAA,CAAAsD,aAAA;IAAKW,GAAG,EAAED,KAAM;IAACT,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpC7D,KAAA,CAAAsD,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO/B,GAAG,CAACf,KAAY,CAAC,eACxBf,KAAA,CAAAsD,aAAA;IAAMC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE/B,GAAG,CAACd,IAAI,CAACkD,cAAc,CAAC,CAAQ,CACrD,CACN,CAAC,eACFlE,KAAA,CAAAsD,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB7D,KAAA,CAAAsD,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,cAAkB,CAAC,eACzB7D,KAAA,CAAAsD,aAAA;IAAMC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE7B,KAAK,CAACkC,cAAc,CAAC,CAAQ,CACxD,CACF,CAAC,eAENlE,KAAA,CAAAsD,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3B7D,KAAA,CAAAsD,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAgB,CAAC,eACrB7D,KAAA,CAAAsD,aAAA,CAAC7C,IAAI;IAACqD,IAAI,EAAE,EAAG;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAElB7D,KAAA,CAAAsD,aAAA;IAAMa,QAAQ,EAAE/B,YAAa;IAACmB,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpD7D,KAAA,CAAAsD,aAAA,CAACnD,WAAW;IAACiE,OAAO,EAAE;MAAEC,KAAK,EAAE;QAAEC,IAAI,EAAE;UAAEC,QAAQ,EAAE;QAAO;MAAE;IAAE,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAElEtC,KAAK,iBAAIvB,KAAA,CAAAsD,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEtC,KAAW,CAAC,EACrDE,OAAO,iBAAIzB,KAAA,CAAAsD,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oCAAuC,CAAC,eAErF7D,KAAA,CAAAsD,aAAA;IAAQkB,IAAI,EAAC,QAAQ;IAACC,QAAQ,EAAE,CAACvD,MAAM,IAAIG,OAAQ;IAAAmC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChDxC,OAAO,GAAG,eAAe,GAAG,OAAOW,KAAK,CAACkC,cAAc,CAAC,CAAC,EACpD,CACJ,CACH,CACF,CACF,CACF,CAAC;AAEV,CAAC;AAED,eAAetD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}