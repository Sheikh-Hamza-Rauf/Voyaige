{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\RestaurantsPage\\\\Restaurants.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Restaurants.css\";\nimport NavBar from \"../NavBar/Navbar\";\nconst Restaurants = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    // Fetch restaurants data\n    fetch(\"/new_restaurant_db.restaurants_data.json\").then(res => res.json()).then(data => {\n      console.log(\"Fetched Data:\", data); // ✅ Debugging\n      if (Array.isArray(data)) {\n        setRestaurants(data);\n      } else {\n        console.error(\"Data format incorrect\", data);\n      }\n    }).catch(err => console.error(\"Error fetching restaurants:\", err));\n\n    // Fetch reviews data\n    fetch(\"/new_restaurant_db.restaurants_reviews.json\").then(res => res.json()).then(data => {\n      console.log(\"Fetched Reviews:\", data); // Debugging\n      setReviews(data);\n    }).catch(err => console.error(\"Error loading reviews:\", err));\n  }, []);\n\n  // Function to find rating by matching restaurant name\n  const getRating = name => {\n    const review = reviews.find(r => r.restaurant_name === name);\n    return review ? review.rating : \"No rating available\";\n  };\n\n  // Group restaurants by city\n  const groupedByCity = {};\n  restaurants.forEach(restaurant => {\n    if (!groupedByCity[restaurant.location]) {\n      groupedByCity[restaurant.location] = [];\n    }\n    groupedByCity[restaurant.location].push(restaurant);\n  });\n  console.log(\"Grouped Restaurants by City:\", groupedByCity); // Debugging\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"restaurants-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Restaurants\"), Object.entries(groupedByCity).map(([city, cityRestaurants]) => /*#__PURE__*/React.createElement(\"div\", {\n    key: city,\n    className: \"city-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"city-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, city), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"restaurants-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, cityRestaurants.slice(0, 5).map((restaurant, index) => restaurant && restaurant.name && /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"restaurant-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: restaurant.image_url,\n    alt: restaurant.name,\n    className: \"restaurant-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, restaurant.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \"Cuisine: \", restaurant.cuisine), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \"Rating: \", getRating(restaurant.name))))))));\n};\nexport default Restaurants;","map":{"version":3,"names":["React","useState","useEffect","NavBar","Restaurants","restaurants","setRestaurants","reviews","setReviews","fetch","then","res","json","data","console","log","Array","isArray","error","catch","err","getRating","name","review","find","r","restaurant_name","rating","groupedByCity","forEach","restaurant","location","push","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","city","cityRestaurants","key","slice","index","src","image_url","alt","cuisine"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/RestaurantsPage/Restaurants.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Restaurants.css\";\r\nimport NavBar from \"../NavBar/Navbar\";\r\n\r\nconst Restaurants = () => {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch restaurants data\r\n    fetch(\"/new_restaurant_db.restaurants_data.json\")\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(\"Fetched Data:\", data); // ✅ Debugging\r\n      if (Array.isArray(data)) {\r\n        setRestaurants(data);\r\n      } else {\r\n        console.error(\"Data format incorrect\", data);\r\n      }\r\n    })\r\n    .catch((err) => console.error(\"Error fetching restaurants:\", err));\r\n    \r\n    // Fetch reviews data\r\n    fetch(\"/new_restaurant_db.restaurants_reviews.json\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"Fetched Reviews:\", data); // Debugging\r\n        setReviews(data);\r\n      })\r\n      .catch((err) => console.error(\"Error loading reviews:\", err));\r\n  }, []);\r\n\r\n  // Function to find rating by matching restaurant name\r\n  const getRating = (name) => {\r\n    const review = reviews.find((r) => r.restaurant_name === name);\r\n    return review ? review.rating : \"No rating available\";\r\n  };\r\n\r\n  // Group restaurants by city\r\n  const groupedByCity = {};\r\n  restaurants.forEach((restaurant) => {\r\n    if (!groupedByCity[restaurant.location]) {\r\n      groupedByCity[restaurant.location] = [];\r\n    }\r\n    groupedByCity[restaurant.location].push(restaurant);\r\n  });\r\n\r\n  console.log(\"Grouped Restaurants by City:\", groupedByCity); // Debugging\r\n\r\n  return (\r\n    <div className=\"restaurants-container\">\r\n      <NavBar />\r\n      <h1>Restaurants</h1>\r\n      \r\n      {Object.entries(groupedByCity).map(([city, cityRestaurants]) => (\r\n        <div key={city} className=\"city-section\">\r\n          <h2 className=\"city-heading\">{city}</h2>\r\n          <div className=\"restaurants-grid\">\r\n            {cityRestaurants.slice(0, 5).map((restaurant, index) => (\r\n              restaurant && restaurant.name && (\r\n                <div key={index} className=\"restaurant-card\">\r\n                  <img\r\n                    src={restaurant.image_url}\r\n                    alt={restaurant.name}\r\n                    className=\"restaurant-image\"\r\n                  />\r\n                  <h3>{restaurant.name}</h3>\r\n                  <p>Cuisine: {restaurant.cuisine}</p>\r\n                  <p>Rating: {getRating(restaurant.name)}</p>\r\n                </div>\r\n              )\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restaurants;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}