{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState } from 'react';\nimport NavBar from \"../NavBar/Navbar\";\nconst MiloChatbot = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [chatbotResponse, setChatbotResponse] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/MiloChatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_input: userInput\n        })\n      });\n      const data = await response.json();\n      setChatbotResponse(data.response || 'Error: Unable to process your request.');\n    } catch (error) {\n      console.error('Error:', error);\n      setChatbotResponse('Error occurred while contacting the server.');\n    } finally {\n      setIsLoading(false);\n      setUserInput(\"\"); // Clear the input field\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Welcome to Milo, Your Travel Assistant\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userInput,\n    onChange: handleInputChange,\n    placeholder: \"Ask me anything about your trip...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Ask\")), isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Response:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, chatbotResponse)));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","NavBar","MiloChatbot","userInput","setUserInput","chatbotResponse","setChatbotResponse","isLoading","setIsLoading","handleInputChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","user_input","data","json","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport NavBar from \"../NavBar/Navbar\";\r\n\r\n\r\n\r\nconst MiloChatbot = () => {\r\n    const [userInput, setUserInput] = useState(\"\");\r\n    const [chatbotResponse, setChatbotResponse] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleInputChange = (e) => {\r\n        setUserInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/MiloChatbot', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ user_input: userInput }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            setChatbotResponse(data.response || 'Error: Unable to process your request.');\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setChatbotResponse('Error occurred while contacting the server.');\r\n        } finally {\r\n            setIsLoading(false);\r\n            setUserInput(\"\"); // Clear the input field\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot\">\r\n            <h2>Welcome to Milo, Your Travel Assistant</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={userInput}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Ask me anything about your trip...\"\r\n                />\r\n                <button type=\"submit\">Ask</button>\r\n            </form>\r\n            {isLoading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <div>\r\n                    <h3>Response:</h3>\r\n                    <p>{chatbotResponse}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}