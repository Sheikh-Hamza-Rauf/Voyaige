{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nconst MiloChatbot = () => {\n  const [messages, setMessages] = useState([{\n    text: \"Hello! I'm Milo. How can I help you with your travel plans today?\",\n    sender: \"bot\"\n  }]);\n  const [userInput, setUserInput] = useState(\"\");\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (userInput.trim() === \"\") return;\n\n    // Display user's message\n    const newMessages = [...messages, {\n      text: userInput,\n      sender: \"user\"\n    }];\n    setMessages(newMessages);\n\n    // Send the user's input to the backend (Flask server)\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/chat\", {\n        message: userInput\n      });\n      const botResponse = response.data.message;\n      setMessages([...newMessages, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setMessages([...newMessages, {\n        text: \"Oops, something went wrong! Please try again later.\",\n        sender: \"bot\"\n      }]);\n    }\n    setUserInput(\"\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: msg.sender === \"user\" ? \"message user\" : \"message bot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, msg.text))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userInput,\n    onChange: e => setUserInput(e.target.value),\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","axios","MiloChatbot","messages","setMessages","text","sender","userInput","setUserInput","handleSendMessage","e","preventDefault","trim","newMessages","response","post","message","botResponse","data","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","key","onSubmit","type","value","onChange","target","placeholder"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst MiloChatbot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"Hello! I'm Milo. How can I help you with your travel plans today?\", sender: \"bot\" },\r\n  ]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (userInput.trim() === \"\") return;\r\n\r\n    // Display user's message\r\n    const newMessages = [...messages, { text: userInput, sender: \"user\" }];\r\n    setMessages(newMessages);\r\n\r\n    // Send the user's input to the backend (Flask server)\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:5000/chat\", {\r\n        message: userInput,\r\n      });\r\n\r\n      const botResponse = response.data.message;\r\n      setMessages([\r\n        ...newMessages,\r\n        { text: botResponse, sender: \"bot\" },\r\n      ]);\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      setMessages([\r\n        ...newMessages,\r\n        { text: \"Oops, something went wrong! Please try again later.\", sender: \"bot\" },\r\n      ]);\r\n    }\r\n\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={msg.sender === \"user\" ? \"message user\" : \"message bot\"}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <form onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}