{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\HomePage\\\\PreplannedTrip\\\\Tripdetail.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport _ from 'lodash';\nimport './Tripdetail.css';\nimport Navbar from '../../NavBar/Navbar';\nimport { User } from 'lucide-react';\nconst TripDetails = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    cityData,\n    tripTitle,\n    tripImage\n  } = location.state || {};\n  const [reviewsData, setReviewsData] = useState([]);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [HotelReviewsData, setHotelReviewsData] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [selectedHotel, setSelectedHotel] = useState(null);\n  const [selectedAttraction, setSelectedAttraction] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [currentAttractionImageIndex, setCurrentAttractionImageIndex] = useState(0);\n  const [currentRestaurantImageIndex, setCurrentRestaurantImageIndex] = useState(0);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    // Fetch restaurant reviews data from JSON file\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch('/restaurants_reviews.json');\n        const data = await response.json();\n\n        // Convert ratings to numbers and calculate average ratings\n        const formattedReviews = data.map(review => ({\n          ...review,\n          rating: parseFloat(review.rating) || 0 // Convert rating to number\n        }));\n        setReviewsData(formattedReviews);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    // Fetch hotel reviews data from JSON file\n    const fetchHotelReviews = async () => {\n      try {\n        const response = await fetch('/hotel_reviews.json');\n        const data = await response.json();\n\n        // Convert ratings to numbers and calculate average ratings\n        const formattedHotelReviews = data.map(review => ({\n          ...review,\n          rating: parseFloat(review.rating) || 0 // Convert rating to number\n        }));\n        setHotelReviewsData(formattedHotelReviews);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n    fetchReviews();\n    fetchHotelReviews();\n  }, [cityData]); // Re-fetch when cityData changes\n\n  // Calculate total price based on hotel prices and number of days for each city\n  useEffect(() => {\n    if (cityData) {\n      let total = 0;\n      cityData.forEach(city => {\n        if (city.hotels && city.hotels.length > 0) {\n          const hotelPrice = city.hotels[0].price; // Assuming there's only one hotel per city\n          total += hotelPrice * city.days;\n        }\n      });\n      setTotalPrice(total);\n    }\n  }, [cityData]);\n\n  // Function to calculate the average rating of a restaurant\n  const calculateAverageRating = restaurantId => {\n    const restaurantReviews = reviewsData.filter(review => review.restaurant_id === restaurantId);\n    if (restaurantReviews.length === 0) return 0;\n\n    // Calculate the average rating using _.mean\n    const averageRating = _.mean(restaurantReviews.map(review => review.rating));\n    return averageRating.toFixed(1); // Round to 1 decimal place\n  };\n\n  // Function to get reviews for a restaurant\n  const getRestaurantReviews = restaurantId => {\n    return reviewsData.filter(review => review.restaurant_id === restaurantId);\n  };\n\n  // Function to calculate the average rating of a hotel\n  const calculateAverageHotelRating = hotelId => {\n    const HotelReviews = HotelReviewsData.filter(review => review.hotel_id === hotelId);\n    if (HotelReviews.length === 0) return 0;\n    // Calculate the average rating using _.mean\n    const averageHotelRating = _.mean(HotelReviews.map(review => review.rating));\n    return averageHotelRating.toFixed(1); // Round to 1 decimal place\n  };\n\n  // Function to get reviews for a hotel\n  const getHotelReviews = hotelId => {\n    return HotelReviewsData.filter(review => review.hotel_id === hotelId);\n  };\n\n  // Handle restaurant click\n  const handleRestaurantClick = restaurant => {\n    const reviews = getRestaurantReviews(restaurant.id);\n    setSelectedRestaurant({\n      ...restaurant,\n      reviews,\n      rating: calculateAverageRating(restaurant.id)\n    });\n  };\n  const handleAttractionClick = attraction => {\n    setSelectedAttraction(attraction);\n  };\n\n  // Handle hotel click\n  const handleHotelClick = hotel => {\n    const hotelReviews = getHotelReviews(hotel.hotel_id);\n    setSelectedHotel({\n      ...hotel,\n      reviews: hotelReviews,\n      rating: calculateAverageHotelRating(hotel.hotel_id)\n    });\n  };\n  const handleBooking = async () => {\n    if (!cityData || !tripTitle) {\n      alert('Missing trip data');\n      return;\n    }\n\n    // Get the logged-in user's email from localStorage\n    const userData = JSON.parse(localStorage.getItem('user'));\n    const userEmail = userData === null || userData === void 0 ? void 0 : userData.email;\n    if (!userEmail) {\n      alert('User not logged in. Please log in to book the trip.');\n      return;\n    }\n\n    // Create a properly structured cityBookings array\n    const bookingData = {\n      tripTitle,\n      email: userEmail,\n      cityBookings: cityData.map(city => ({\n        cityName: city.cityName,\n        days: city.days\n      }))\n    };\n\n    // ✅ Log data before sending to backend\n    console.log('Sending Data:', bookingData);\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 5000); // Timeout after 5 seconds\n\n      const response = await fetch('http://localhost:5000/api/users/add-preplanned', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookingData),\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n\n      /*if (response.ok) {\r\n        // Redirect to the checkout page with hotel data\r\n        const hotelData = cityData.map((city) => ({\r\n          hotelName: city.hotels[0].name, // Assuming there's only one hotel per city\r\n          hotelPrice: city.hotels[0].price,\r\n          totalPrice: totalPrice,\r\n        }));\r\n          /*navigate('/checkout', {\r\n          state: {\r\n            hotelData,\r\n            totalPrice,\r\n          },\r\n        });*/\n\n      if (response.ok) {\n        const hotelData = cityData.map(city => {\n          var _city$hotels$, _city$hotels$2;\n          return {\n            hotelName: ((_city$hotels$ = city.hotels[0]) === null || _city$hotels$ === void 0 ? void 0 : _city$hotels$.name) || 'Unknown',\n            hotelPrice: ((_city$hotels$2 = city.hotels[0]) === null || _city$hotels$2 === void 0 ? void 0 : _city$hotels$2.price) || 0,\n            totalPrice: totalPrice\n          };\n        });\n        navigate('/checkout2', {\n          state: {\n            hotelData,\n            totalPrice\n          }\n        });\n        /*const checkoutUrl = `/checkout?hotelData=${encodeURIComponent(JSON.stringify(hotelData))}&totalPrice=${totalPrice}`;\r\n        window.location.href = checkoutUrl;*/\n      } else {\n        const data = await response.json();\n        alert(`Failed to book trip: ${data.message}`);\n      }\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.error('Request timed out');\n        alert('The server is not responding. Please try again later.');\n      } else {\n        console.error('Error booking trip:', error);\n        alert('An error occurred while booking the trip');\n      }\n    }\n  };\n\n  // Split data by days and limit to 4 items max per day\n  const splitDataByDays = (items, days) => {\n    const itemsPerDay = Math.ceil(items.length / days);\n    return Array.from({\n      length: days\n    }, (_, i) => items.slice(i * itemsPerDay, (i + 1) * itemsPerDay).slice(0, 4) // Limit to 4 items per day\n    );\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trip-details-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }), tripImage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trip-detail-trip-image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tripImage,\n    alt: tripTitle,\n    className: \"trip-detail-trip-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  })), tripTitle && /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"trip-detail-trip-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, tripTitle), cityData === null || cityData === void 0 ? void 0 : cityData.map((city, index) => {\n    var _city$hotels;\n    const splitRestaurants = splitDataByDays(city.restaurants || [], city.days);\n    const splitAttractions = splitDataByDays(city.attractions || [], city.days);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"trip-detail-city-section\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"trip-detail-city-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, city.days, \" Days in \", city.cityName), Array.from({\n      length: city.days\n    }, (_, dayIndex) => {\n      var _splitRestaurants$day, _splitAttractions$day;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: dayIndex,\n        className: \"trip-detail-day-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }\n      }, \"Day \", dayIndex + 1), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }\n      }, \"Restaurants\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"trip-detail-list-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, (_splitRestaurants$day = splitRestaurants[dayIndex]) === null || _splitRestaurants$day === void 0 ? void 0 : _splitRestaurants$day.map((restaurant, idx) => {\n        var _restaurant$images;\n        const avgRating = calculateAverageRating(restaurant.id);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: idx,\n          className: \"trip-detail-list-item\",\n          onClick: () => handleRestaurantClick(restaurant),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"trip-detail-hover-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: encodeURI((_restaurant$images = restaurant.images) === null || _restaurant$images === void 0 ? void 0 : _restaurant$images[0]) || '/placeholder.png',\n          alt: restaurant.name,\n          className: \"trip-detail-card-image\",\n          onError: e => {\n            e.target.onerror = null; // Prevent infinite loop in case fallback fails\n            e.target.src = 'https://cdn.vectorstock.com/i/preview-2x/44/16/spoon-and-fork-abstract-logo-graphic-food-icon-vector-26574416.webp';\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"trip-detail-hover-card-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }\n        }, restaurant.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }\n        }, \"\\u2B50 Rating : \", avgRating, \" (\", getRestaurantReviews(restaurant.id).length, \" reviews)\"))));\n      })), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }\n      }, \"Attractions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"trip-detail-list-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }\n      }, (_splitAttractions$day = splitAttractions[dayIndex]) === null || _splitAttractions$day === void 0 ? void 0 : _splitAttractions$day.map((attraction, idx) => {\n        var _attraction$images;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: idx,\n          className: \"trip-detail-list-item\",\n          onClick: () => handleAttractionClick(attraction),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"trip-detail-hover-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: ((_attraction$images = attraction.images) === null || _attraction$images === void 0 ? void 0 : _attraction$images[0]) || '/placeholder.png',\n          alt: attraction.name,\n          className: \"trip-detail-card-image\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"trip-detail-hover-card-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 27\n          }\n        }, attraction.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 27\n          }\n        }, \"\\u2B50 Rating: \", attraction.rating))));\n      })));\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, \"Hotels\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"trip-detail-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }, (_city$hotels = city.hotels) === null || _city$hotels === void 0 ? void 0 : _city$hotels.map((hotel, idx) => {\n      var _hotel$images;\n      const avgHotelRating = calculateAverageHotelRating(hotel.hotel_id);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: idx,\n        className: \"trip-detail-list-item\",\n        onClick: () => handleHotelClick(hotel),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"trip-detail-hover-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: ((_hotel$images = hotel.images) === null || _hotel$images === void 0 ? void 0 : _hotel$images[0]) || '/placeholder.png',\n        alt: hotel.name,\n        className: \"trip-detail-card-image\",\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = '/placeholder.png';\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"trip-detail-hover-card-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }\n      }, hotel.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }\n      }, \"\\u2B50 Rating : \", avgHotelRating, \" (\", getHotelReviews(hotel.hotel_id).length, \" reviews)\"), hotel.price && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 41\n        }\n      }, \"\\uD83D\\uDCB0 \", hotel.price))));\n    })));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"trip-detail-booking\",\n    onClick: handleBooking,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }\n  }, \"BOOK NOW (\", totalPrice > 0 ? `💰 Rs ${totalPrice.toFixed(2)}` : 'Calculating...', \")\"));\n};\nexport default TripDetails;","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","_","Navbar","User","TripDetails","location","navigate","cityData","tripTitle","tripImage","state","reviewsData","setReviewsData","selectedRestaurant","setSelectedRestaurant","HotelReviewsData","setHotelReviewsData","totalPrice","setTotalPrice","selectedHotel","setSelectedHotel","selectedAttraction","setSelectedAttraction","currentImageIndex","setCurrentImageIndex","currentAttractionImageIndex","setCurrentAttractionImageIndex","currentRestaurantImageIndex","setCurrentRestaurantImageIndex","window","scrollTo","fetchReviews","response","fetch","data","json","formattedReviews","map","review","rating","parseFloat","error","console","fetchHotelReviews","formattedHotelReviews","total","forEach","city","hotels","length","hotelPrice","price","days","calculateAverageRating","restaurantId","restaurantReviews","filter","restaurant_id","averageRating","mean","toFixed","getRestaurantReviews","calculateAverageHotelRating","hotelId","HotelReviews","hotel_id","averageHotelRating","getHotelReviews","handleRestaurantClick","restaurant","reviews","id","handleAttractionClick","attraction","handleHotelClick","hotel","hotelReviews","handleBooking","alert","userData","JSON","parse","localStorage","getItem","userEmail","email","bookingData","cityBookings","cityName","log","controller","AbortController","timeoutId","setTimeout","abort","method","headers","body","stringify","signal","clearTimeout","ok","hotelData","_city$hotels$","_city$hotels$2","hotelName","name","message","splitDataByDays","items","itemsPerDay","Math","ceil","Array","from","i","slice","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","index","_city$hotels","splitRestaurants","restaurants","splitAttractions","attractions","key","dayIndex","_splitRestaurants$day","_splitAttractions$day","idx","_restaurant$images","avgRating","onClick","encodeURI","images","onError","e","target","onerror","_attraction$images","_hotel$images","avgHotelRating"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/HomePage/PreplannedTrip/Tripdetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport './Tripdetail.css';\r\nimport Navbar from '../../NavBar/Navbar';\r\nimport { User } from 'lucide-react';\r\n\r\nconst TripDetails = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { cityData, tripTitle, tripImage } = location.state || {};\r\n  const [reviewsData, setReviewsData] = useState([]);\r\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\r\n  const [HotelReviewsData, setHotelReviewsData] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  const [selectedHotel, setSelectedHotel] = useState(null);\r\n  const [selectedAttraction, setSelectedAttraction] = useState(null);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const [currentAttractionImageIndex, setCurrentAttractionImageIndex] = useState(0);\r\n  const [currentRestaurantImageIndex, setCurrentRestaurantImageIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    // Fetch restaurant reviews data from JSON file\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await fetch('/restaurants_reviews.json');\r\n        const data = await response.json();\r\n\r\n        // Convert ratings to numbers and calculate average ratings\r\n        const formattedReviews = data.map((review) => ({\r\n          ...review,\r\n          rating: parseFloat(review.rating) || 0, // Convert rating to number\r\n        }));\r\n\r\n        setReviewsData(formattedReviews);\r\n      } catch (error) {\r\n        console.error('Error fetching reviews:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch hotel reviews data from JSON file\r\n    const fetchHotelReviews = async () => {\r\n      try {\r\n        const response = await fetch('/hotel_reviews.json');\r\n        const data = await response.json();\r\n\r\n        // Convert ratings to numbers and calculate average ratings\r\n        const formattedHotelReviews = data.map((review) => ({\r\n          ...review,\r\n          rating: parseFloat(review.rating) || 0, // Convert rating to number\r\n        }));\r\n\r\n        setHotelReviewsData(formattedHotelReviews);\r\n      } catch (error) {\r\n        console.error('Error fetching reviews:', error);\r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n    fetchHotelReviews();\r\n  }, [cityData]); // Re-fetch when cityData changes\r\n\r\n  // Calculate total price based on hotel prices and number of days for each city\r\n  useEffect(() => {\r\n    if (cityData) {\r\n      let total = 0;\r\n      cityData.forEach((city) => {\r\n        if (city.hotels && city.hotels.length > 0) {\r\n          const hotelPrice = city.hotels[0].price; // Assuming there's only one hotel per city\r\n          total += hotelPrice * city.days;\r\n        }\r\n      });\r\n      setTotalPrice(total);\r\n    }\r\n  }, [cityData]);\r\n\r\n  // Function to calculate the average rating of a restaurant\r\n  const calculateAverageRating = (restaurantId) => {\r\n    const restaurantReviews = reviewsData.filter(\r\n      (review) => review.restaurant_id === restaurantId\r\n    );\r\n    if (restaurantReviews.length === 0) return 0;\r\n\r\n    // Calculate the average rating using _.mean\r\n    const averageRating = _.mean(restaurantReviews.map((review) => review.rating));\r\n    return averageRating.toFixed(1); // Round to 1 decimal place\r\n  };\r\n\r\n  // Function to get reviews for a restaurant\r\n  const getRestaurantReviews = (restaurantId) => {\r\n    return reviewsData.filter((review) => review.restaurant_id === restaurantId);\r\n  };\r\n\r\n  // Function to calculate the average rating of a hotel\r\n  const calculateAverageHotelRating = (hotelId) => {\r\n    const HotelReviews = HotelReviewsData.filter(\r\n      (review) => review.hotel_id === hotelId\r\n    );\r\n    if (HotelReviews.length === 0) return 0;\r\n    // Calculate the average rating using _.mean\r\n    const averageHotelRating = _.mean(HotelReviews.map((review) => review.rating));\r\n    return averageHotelRating.toFixed(1); // Round to 1 decimal place\r\n  };\r\n\r\n  // Function to get reviews for a hotel\r\n  const getHotelReviews = (hotelId) => {\r\n    return HotelReviewsData.filter((review) => review.hotel_id === hotelId);\r\n  };\r\n\r\n  // Handle restaurant click\r\n  const handleRestaurantClick = (restaurant) => {\r\n    const reviews = getRestaurantReviews(restaurant.id);\r\n    setSelectedRestaurant({\r\n      ...restaurant,\r\n      reviews,\r\n      rating: calculateAverageRating(restaurant.id),\r\n    });\r\n  };\r\n\r\n  const handleAttractionClick = (attraction) => {\r\n    setSelectedAttraction(attraction);\r\n  };\r\n\r\n  // Handle hotel click\r\n  const handleHotelClick = (hotel) => {\r\n    const hotelReviews = getHotelReviews(hotel.hotel_id);\r\n    setSelectedHotel({\r\n      ...hotel,\r\n      reviews: hotelReviews,\r\n      rating: calculateAverageHotelRating(hotel.hotel_id),\r\n    });\r\n  };\r\n\r\n  const handleBooking = async () => {\r\n    if (!cityData || !tripTitle) {\r\n      alert('Missing trip data');\r\n      return;\r\n    }\r\n\r\n    // Get the logged-in user's email from localStorage\r\n    const userData = JSON.parse(localStorage.getItem('user'));\r\n    const userEmail = userData?.email;\r\n\r\n    if (!userEmail) {\r\n      alert('User not logged in. Please log in to book the trip.');\r\n      return;\r\n    }\r\n\r\n    // Create a properly structured cityBookings array\r\n    const bookingData = {\r\n      tripTitle,\r\n      email: userEmail,\r\n      cityBookings: cityData.map((city) => ({\r\n        cityName: city.cityName,\r\n        days: city.days,\r\n      })),\r\n    };\r\n\r\n    // ✅ Log data before sending to backend\r\n    console.log('Sending Data:', bookingData);\r\n\r\n    try {\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 5000); // Timeout after 5 seconds\r\n\r\n      const response = await fetch('http://localhost:5000/api/users/add-preplanned', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(bookingData),\r\n        signal: controller.signal,\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      /*if (response.ok) {\r\n        // Redirect to the checkout page with hotel data\r\n        const hotelData = cityData.map((city) => ({\r\n          hotelName: city.hotels[0].name, // Assuming there's only one hotel per city\r\n          hotelPrice: city.hotels[0].price,\r\n          totalPrice: totalPrice,\r\n        }));\r\n\r\n        /*navigate('/checkout', {\r\n          state: {\r\n            hotelData,\r\n            totalPrice,\r\n          },\r\n        });*/\r\n\r\n        if (response.ok) {\r\n          const hotelData = cityData.map((city) => ({\r\n            hotelName: city.hotels[0]?.name || 'Unknown',\r\n            hotelPrice: city.hotels[0]?.price || 0,\r\n            totalPrice: totalPrice,\r\n          }));\r\n  \r\n          navigate('/checkout2', { state: { hotelData, totalPrice } });\r\n        /*const checkoutUrl = `/checkout?hotelData=${encodeURIComponent(JSON.stringify(hotelData))}&totalPrice=${totalPrice}`;\r\n        window.location.href = checkoutUrl;*/\r\n      } else {\r\n        const data = await response.json();\r\n        alert(`Failed to book trip: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      if (error.name === 'AbortError') {\r\n        console.error('Request timed out');\r\n        alert('The server is not responding. Please try again later.');\r\n      } else {\r\n        console.error('Error booking trip:', error);\r\n        alert('An error occurred while booking the trip');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Split data by days and limit to 4 items max per day\r\n  const splitDataByDays = (items, days) => {\r\n    const itemsPerDay = Math.ceil(items.length / days);\r\n    return Array.from({ length: days }, (_, i) =>\r\n      items.slice(i * itemsPerDay, (i + 1) * itemsPerDay).slice(0, 4) // Limit to 4 items per day\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"trip-details-page\">\r\n      <Navbar />\r\n      {tripImage && (\r\n        <div className=\"trip-detail-trip-image-container\">\r\n          <img src={tripImage} alt={tripTitle} className=\"trip-detail-trip-image\" />\r\n        </div>\r\n      )}\r\n      {tripTitle && <h1 className=\"trip-detail-trip-title\">{tripTitle}</h1>}\r\n\r\n      {cityData?.map((city, index) => {\r\n        const splitRestaurants = splitDataByDays(city.restaurants || [], city.days);\r\n        const splitAttractions = splitDataByDays(city.attractions || [], city.days);\r\n\r\n        return (\r\n          <div className=\"trip-detail-city-section\" key={index}>\r\n            <h2 className=\"trip-detail-city-name\">\r\n              {city.days} Days in {city.cityName}\r\n            </h2>\r\n\r\n            {Array.from({ length: city.days }, (_, dayIndex) => (\r\n              <div key={dayIndex} className=\"trip-detail-day-section\">\r\n                <h3>Day {dayIndex + 1}</h3>\r\n\r\n                {/* Restaurants */}\r\n                <h4>Restaurants</h4>\r\n                <div className=\"trip-detail-list-container\">\r\n                  {splitRestaurants[dayIndex]?.map((restaurant, idx) => {\r\n                    const avgRating = calculateAverageRating(restaurant.id);\r\n                    return (\r\n                      <div\r\n                        key={idx}\r\n                        className=\"trip-detail-list-item\"\r\n                        onClick={() => handleRestaurantClick(restaurant)}\r\n                      >\r\n                        <div className=\"trip-detail-hover-card\">\r\n                          <img\r\n                            src={encodeURI(restaurant.images?.[0]) || '/placeholder.png'}\r\n                            alt={restaurant.name}\r\n                            className=\"trip-detail-card-image\"\r\n                            onError={(e) => {\r\n                              e.target.onerror = null; // Prevent infinite loop in case fallback fails\r\n                              e.target.src =\r\n                                'https://cdn.vectorstock.com/i/preview-2x/44/16/spoon-and-fork-abstract-logo-graphic-food-icon-vector-26574416.webp';\r\n                            }}\r\n                          />\r\n                          <div className=\"trip-detail-hover-card-content\">\r\n                            <h4>{restaurant.name}</h4>\r\n                            <p>⭐ Rating : {avgRating} ({getRestaurantReviews(restaurant.id).length} reviews)</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* Attractions */}\r\n                <h4>Attractions</h4>\r\n                <div className=\"trip-detail-list-container\">\r\n                  {splitAttractions[dayIndex]?.map((attraction, idx) => (\r\n                    <div\r\n                      key={idx}\r\n                      className=\"trip-detail-list-item\"\r\n                      onClick={() => handleAttractionClick(attraction)}\r\n                    >\r\n                      <div className=\"trip-detail-hover-card\">\r\n                        <img\r\n                          src={attraction.images?.[0] || '/placeholder.png'}\r\n                          alt={attraction.name}\r\n                          className=\"trip-detail-card-image\"\r\n                        />\r\n                        <div className=\"trip-detail-hover-card-content\">\r\n                          <h4>{attraction.name}</h4>\r\n                          <p>⭐ Rating: {attraction.rating}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            {/* Hotels Section */}\r\n            <h3>Hotels</h3>\r\n            <div className=\"trip-detail-list-container\">\r\n              {city.hotels?.map((hotel, idx) => {\r\n                const avgHotelRating = calculateAverageHotelRating(hotel.hotel_id);\r\n\r\n                return (\r\n                  <div key={idx} className=\"trip-detail-list-item\" onClick={() => handleHotelClick(hotel)}>\r\n                    <div className=\"trip-detail-hover-card\">\r\n                      <img\r\n                        src={hotel.images?.[0] || '/placeholder.png'}\r\n                        alt={hotel.name}\r\n                        className=\"trip-detail-card-image\"\r\n                        onError={(e) => {\r\n                          e.target.onerror = null;\r\n                          e.target.src = '/placeholder.png';\r\n                        }}\r\n                      />\r\n                      <div className=\"trip-detail-hover-card-content\">\r\n                        <h4>{hotel.name}</h4>\r\n                        <p>⭐ Rating : {avgHotelRating} ({getHotelReviews(hotel.hotel_id).length} reviews)</p>\r\n                        {hotel.price && <p>💰 {hotel.price}</p>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {/* BOOK NOW BUTTON */}\r\n      <button className=\"trip-detail-booking\" onClick={handleBooking}>\r\n        BOOK NOW ({totalPrice > 0 ? `💰 Rs ${totalPrice.toFixed(2)}` : 'Calculating...'})\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}