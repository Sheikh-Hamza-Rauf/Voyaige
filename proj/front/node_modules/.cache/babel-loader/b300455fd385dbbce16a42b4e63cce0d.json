{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./MiloChatbot.css\";\nconst MiloChatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [itineraryData, setItineraryData] = useState([]);\n  const [rightContainerVisible, setRightContainerVisible] = useState(false);\n  const historyRef = useRef([]);\n  const historyIndexRef = useRef(-1);\n  const handleUserInput = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: userMessage\n    }]);\n    setInput(\"\");\n    historyRef.current = [userMessage, ...historyRef.current];\n    historyIndexRef.current = -1;\n    let endpoint = \"/chatbot\";\n    let payload = {\n      user_input: userMessage\n    };\n    if (/\\b(plan|generate|create)\\s+(a\\s+)?(trip|itinerary)\\b/i.test(userMessage)) {\n      const cityMatch = userMessage.match(/\\bfrom\\s+(\\w+)\\s+to\\s+(\\w+)\\b/i) || userMessage.match(/\\bto\\s+(\\w+)\\s+from\\s+(\\w+)\\b/i);\n      const startingCity = cityMatch ? cityMatch[2] : \"Islamabad\";\n      const destinationCity = cityMatch ? cityMatch[1] : \"Lahore\";\n      endpoint = \"/generate-itinerary\";\n      payload = {\n        starting_city: startingCity,\n        destination_city: destinationCity\n      };\n    }\n    try {\n      const response = await fetch(`http://127.0.0.1:5000${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (endpoint === \"/generate-itinerary\" && Array.isArray(data.messages) && data.messages.length > 0) {\n        setItineraryData(data.messages.filter(line => line.trim() !== \"\"));\n        setRightContainerVisible(true);\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Generated itinerary is ready!\"\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: data.response || \"Sorry, I couldn't generate an itinerary. Please try again.\"\n        }]);\n      }\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"An error occurred. Please try again.\"\n      }]);\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      handleUserInput();\n    } else if (event.key === \"ArrowUp\" && historyRef.current.length > 0) {\n      historyIndexRef.current = Math.min(historyIndexRef.current + 1, historyRef.current.length - 1);\n      setInput(historyRef.current[historyIndexRef.current]);\n    } else if (event.key === \"ArrowDown\" && historyIndexRef.current > 0) {\n      historyIndexRef.current--;\n      setInput(historyRef.current[historyIndexRef.current]);\n    }\n  };\n  const closeRightContainer = () => {\n    setRightContainerVisible(false);\n    setItineraryData([]);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `chatbot-container ${rightContainerVisible ? \"shift-left\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `message ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, msg.text))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyDown: handleKeyDown,\n    placeholder: \"Type your message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUserInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Send\"))), rightContainerVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"itinerary-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-btn\",\n    onClick: closeRightContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"\\u2716\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Generated Itinerary\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, itineraryData.map((line, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 59\n    }\n  }, line)))));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","useRef","useEffect","MiloChatbot","messages","setMessages","input","setInput","itineraryData","setItineraryData","rightContainerVisible","setRightContainerVisible","historyRef","historyIndexRef","handleUserInput","trim","userMessage","prev","sender","text","current","endpoint","payload","user_input","test","cityMatch","match","startingCity","destinationCity","starting_city","destination_city","response","fetch","method","headers","body","JSON","stringify","data","json","Array","isArray","length","filter","line","error","handleKeyDown","event","key","Math","min","closeRightContainer","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","onKeyDown","placeholder","onClick","idx"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./MiloChatbot.css\";\r\n\r\nconst MiloChatbot = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [itineraryData, setItineraryData] = useState([]);\r\n    const [rightContainerVisible, setRightContainerVisible] = useState(false);\r\n    \r\n    const historyRef = useRef([]);\r\n    const historyIndexRef = useRef(-1);\r\n\r\n    const handleUserInput = async () => {\r\n        if (!input.trim()) return;\r\n        \r\n        const userMessage = input.trim();\r\n        setMessages(prev => [...prev, { sender: \"user\", text: userMessage }]);\r\n        setInput(\"\");\r\n        \r\n        historyRef.current = [userMessage, ...historyRef.current];\r\n        historyIndexRef.current = -1;\r\n        \r\n        let endpoint = \"/chatbot\";\r\n        let payload = { user_input: userMessage };\r\n        \r\n        if (/\\b(plan|generate|create)\\s+(a\\s+)?(trip|itinerary)\\b/i.test(userMessage)) {\r\n            const cityMatch = userMessage.match(/\\bfrom\\s+(\\w+)\\s+to\\s+(\\w+)\\b/i) ||\r\n                              userMessage.match(/\\bto\\s+(\\w+)\\s+from\\s+(\\w+)\\b/i);\r\n\r\n            const startingCity = cityMatch ? cityMatch[2] : \"Islamabad\";\r\n            const destinationCity = cityMatch ? cityMatch[1] : \"Lahore\";\r\n\r\n            endpoint = \"/generate-itinerary\";\r\n            payload = { starting_city: startingCity, destination_city: destinationCity };\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:5000${endpoint}`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(payload),\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (endpoint === \"/generate-itinerary\" && Array.isArray(data.messages) && data.messages.length > 0) {\r\n                setItineraryData(data.messages.filter(line => line.trim() !== \"\"));\r\n                setRightContainerVisible(true);\r\n                setMessages(prev => [...prev, { sender: \"milo\", text: \"Generated itinerary is ready!\" }]);\r\n            } else {\r\n                setMessages(prev => [...prev, { sender: \"milo\", text: data.response || \"Sorry, I couldn't generate an itinerary. Please try again.\" }]);\r\n            }\r\n        } catch (error) {\r\n            setMessages(prev => [...prev, { sender: \"milo\", text: \"An error occurred. Please try again.\" }]);\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            handleUserInput();\r\n        } else if (event.key === \"ArrowUp\" && historyRef.current.length > 0) {\r\n            historyIndexRef.current = Math.min(historyIndexRef.current + 1, historyRef.current.length - 1);\r\n            setInput(historyRef.current[historyIndexRef.current]);\r\n        } else if (event.key === \"ArrowDown\" && historyIndexRef.current > 0) {\r\n            historyIndexRef.current--;\r\n            setInput(historyRef.current[historyIndexRef.current]);\r\n        }\r\n    };\r\n\r\n    const closeRightContainer = () => {\r\n        setRightContainerVisible(false);\r\n        setItineraryData([]);\r\n    };\r\n\r\n    return (\r\n        <div className={`chatbot-container ${rightContainerVisible ? \"shift-left\" : \"\"}`}>\r\n            <div className=\"chat-container\">\r\n                <div className=\"messages\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className={`message ${msg.sender}`}>\r\n                            {msg.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"input-area\">\r\n                    <input \r\n                        type=\"text\" \r\n                        value={input} \r\n                        onChange={(e) => setInput(e.target.value)} \r\n                        onKeyDown={handleKeyDown} \r\n                        placeholder=\"Type your message...\" \r\n                    />\r\n                    <button onClick={handleUserInput}>Send</button>\r\n                </div>\r\n            </div>\r\n\r\n            {rightContainerVisible && (\r\n                <div className=\"itinerary-container\">\r\n                    <button className=\"close-btn\" onClick={closeRightContainer}>✖</button>\r\n                    <h3>Generated Itinerary</h3>\r\n                    <ul>\r\n                        {itineraryData.map((line, idx) => <li key={idx}>{line}</li>)}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}