{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\Voyaige\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\Booking\\\\BookingOptions.js\";\n// import React, { useState, useEffect } from \"react\";\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\n// import Navbar from \"../NavBar/Navbar\";\n// import transportImg from \"./images/transport.png\";\n// import hotelImg from \"./images/hotel.jpg\";\n// import airbnbImg from \"./images/airbnb.jpg\";\n// import \"./BookingOptions.css\";\n// import { FaEdit } from \"react-icons/fa\";\n\n// const BookingOptions = () => {\n//   // State for selected hotel and transport (load from localStorage)\n//   const [selectedHotel, setSelectedHotel] = useState(\n//     JSON.parse(localStorage.getItem(\"selectedHotel\")) || null\n//   );\n//   const [selectedTransport, setSelectedTransport] = useState(\n//     JSON.parse(localStorage.getItem(\"selectedTransport\")) || null\n//   );\n\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const { tripDetails, dayIndex, dayData } = location.state || {};\n\n//   // Handle editing the hotel selection\n//   const handleEditHotel = () => {\n//     navigate(\"/BookHotel\");\n//   };\n\n//   // Confirm Booking and Send Data Back to UserCustomization\n//   const handleConfirmBooking = () => {\n//     const updatedDayData = {\n//       ...dayData,\n//       transport: selectedTransport,\n//       accommodation: selectedHotel,\n//       cost: calculateTotalPrice(),\n//     };\n\n//     const bookingData = {\n//       selectedHotel,\n//       selectedTransport,\n//       totalPrice: calculateTotalPrice(),\n//       tripDetails,\n//       dayIndex,\n//       updatedDayData,\n//     };\n\n//     // Navigate back to UserCustomization with all booking data\n//     navigate(\"/UserCustomization\", { state: { bookingData } });\n//   };\n\n//   // Update localStorage whenever hotel or transport is selected\n//   useEffect(() => {\n//     if (selectedHotel) {\n//       localStorage.setItem(\"selectedHotel\", JSON.stringify(selectedHotel));\n//     }\n//     if (selectedTransport) {\n//       localStorage.setItem(\"selectedTransport\", JSON.stringify(selectedTransport));\n//     }\n//   }, [selectedHotel, selectedTransport]);\n\n//   // Calculate total price\n//   const calculateTotalPrice = () => {\n//     let totalPrice = 0;\n//     if (selectedHotel?.price) totalPrice += parseFloat(selectedHotel.price) || 0;\n//     if (selectedTransport?.price) totalPrice += parseFloat(selectedTransport.price) || 0;\n//     return totalPrice;\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <Navbar />\n\n//       {/* Back Arrow Icon */}\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/UserCustomization\")}>\n//         ←\n//       </div>\n\n//       {/* Centered Heading */}\n//       <div className=\"center-heading\">\n//       </div>\n\n//       {/* Booking Options */}\n//       <div className=\"booking-options\">\n//         <div className=\"option-card\">\n//           <h3>1. Customize Transport</h3>\n//           <img src={transportImg} alt=\"Transport\" />\n//           {selectedTransport ? (\n//             <div className=\"booked-transport\">\n//               <p><strong>Transport Selected:</strong> {selectedTransport.name || selectedTransport.car_name || selectedTransport.bus_name || selectedTransport.train_name}</p>\n//               <p>Departure: {selectedTransport.departure_time || \"N/A\"}</p>\n//               <p>Price: {selectedTransport.price ? `${selectedTransport.price} PKR` : \"Price Not Available\"}</p>\n//               <button className=\"edit-btn\" onClick={() => navigate(\"/BookTransport\")}>\n//                 <FaEdit /> Edit\n//               </button>\n//             </div>\n//           ) : (\n//             <Link to=\"/BookTransport\" className=\"explore-btn\">\n//               Explore\n//             </Link>\n//           )}\n//         </div>\n\n//         <div className=\"option-card\">\n//           <h3>2. Book a Hotel</h3>\n//           <img src={hotelImg} alt=\"Hotel\" />\n//           {selectedHotel ? (\n//             <div className=\"booked-hotel\">\n//               <p><strong>Hotel Booked:</strong> {selectedHotel.name}</p>\n//               <p>Rating: {selectedHotel.rating} / 5</p>\n//               <p>Price: {selectedHotel.price} Rs per night</p>\n//               <p>Status: <span style={{ color: \"green\" }}>✔</span> Booked</p>\n//               <button className=\"edit-btn\" onClick={handleEditHotel}>\n//                 <FaEdit /> Edit\n//               </button>\n//             </div>\n//           ) : (\n//             <Link to=\"/BookHotel\" className=\"explore-btn\">\n//               Explore\n//             </Link>\n//           )}\n//         </div>\n\n//         <div className=\"option-card\">\n//           <h3>3. Book an Airbnb</h3>\n//           <img src={airbnbImg} alt=\"Airbnb\" />\n//           <Link to=\"/BookAirbnb\" className=\"explore-btn\">\n//             Explore\n//           </Link>\n//         </div>\n//       </div>\n\n//       {/* Confirm Button */}\n//       <div className=\"confirm-btn-container\">\n//         <button className=\"confirm-btn\" onClick={handleConfirmBooking}>\n//           Confirm: {calculateTotalPrice()} PKR ➔\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookingOptions;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\n// import Navbar from \"../NavBar/Navbar\";\n// import transportImg from \"./images/transport.png\";\n// import hotelImg from \"./images/hotel.jpg\";\n// import airbnbImg from \"./images/airbnb.jpg\";\n// import \"./BookingOptions.css\";\n// import { FaEdit } from \"react-icons/fa\";\n\n// const BookingOptions = () => {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const { customizationData, currentDetails } = location.state || {};\n\n//   // Create a unique trip ID based on trip details to use as storage key\n//   // This ensures different trips have separate storage\n//   const getTripStorageKey = () => {\n//     if (!customizationData) return null;\n\n//     const { startingPoint, destination, startDate, endDate, guests } = customizationData;\n//     if (!startingPoint || !destination || !startDate || !endDate) return null;\n\n//     return `trip_${startingPoint}_${destination}_${startDate}_${endDate}_${guests}`;\n//   };\n\n//   const tripStorageKey = getTripStorageKey();\n\n//   // Initialize state with data from location state or trip-specific localStorage\n//   const [selectedHotel, setSelectedHotel] = useState(() => {\n//     // First try to get from currentDetails passed in navigation\n//     if (currentDetails && currentDetails.hotel) {\n//       return currentDetails.hotel;\n//     }\n\n//     // If not found and we have a valid tripStorageKey, try to get from localStorage\n//     if (tripStorageKey) {\n//       const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n//       if (savedTripDetails) {\n//         try {\n//           const parsedDetails = JSON.parse(savedTripDetails);\n//           return parsedDetails.hotel || null;\n//         } catch (error) {\n//           console.error(\"Error parsing trip details from localStorage:\", error);\n//           return null;\n//         }\n//       }\n//     }\n\n//     return null;\n//   });\n\n//   const [selectedTransport, setSelectedTransport] = useState(() => {\n//     // First try to get from currentDetails passed in navigation\n//     if (currentDetails && currentDetails.transport) {\n//       return currentDetails.transport;\n//     }\n\n//     // If not found and we have a valid tripStorageKey, try to get from localStorage\n//     if (tripStorageKey) {\n//       const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n//       if (savedTripDetails) {\n//         try {\n//           const parsedDetails = JSON.parse(savedTripDetails);\n//           return parsedDetails.transport || null;\n//         } catch (error) {\n//           console.error(\"Error parsing trip details from localStorage:\", error);\n//           return null;\n//         }\n//       }\n//     }\n\n//     return null;\n//   });\n\n//   // Calculate total price\n//   const calculateTotalPrice = () => {\n//     let totalPrice = 0;\n//     if (selectedHotel?.price) totalPrice += parseFloat(selectedHotel.price) || 0;\n//     if (selectedTransport?.price) totalPrice += parseFloat(selectedTransport.price) || 0;\n//     return totalPrice;\n//   };\n\n//   // Handle editing the hotel selection\n//   const handleEditHotel = () => {\n//     // Save current trip key to localStorage so hotel booking page knows which trip we're working with\n//     if (tripStorageKey) {\n//       localStorage.setItem('currentTripKey', tripStorageKey);\n//     }\n//     navigate(\"/BookHotel\", { \n//       state: { \n//         customizationData,\n//         returnToOptions: true\n//       } \n//     });\n//   };\n\n//   // Handle editing the transport selection\n//   const handleEditTransport = () => {\n//     // Save current trip key to localStorage so transport booking page knows which trip we're working with\n//     if (tripStorageKey) {\n//       localStorage.setItem('currentTripKey', tripStorageKey);\n//     }\n//     navigate(\"/BookTransport\", { \n//       state: { \n//         customizationData,\n//         returnToOptions: true\n//       } \n//     });\n//   };\n\n//   // When a user returns from BookHotel or BookTransport pages, update local state\n//   useEffect(() => {\n//     if (tripStorageKey) {\n//       const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n//       if (savedTripDetails) {\n//         try {\n//           const parsedDetails = JSON.parse(savedTripDetails);\n//           // Only update if the data exists to avoid overwriting with null\n//           if (parsedDetails.hotel) setSelectedHotel(parsedDetails.hotel);\n//           if (parsedDetails.transport) setSelectedTransport(parsedDetails.transport);\n//         } catch (error) {\n//           console.error(\"Error parsing trip details from localStorage:\", error);\n//         }\n//       }\n//     }\n//   }, [tripStorageKey]);\n\n//   // Save selections to trip-specific localStorage\n//   useEffect(() => {\n//     if (tripStorageKey) {\n//       // Get existing trip details first\n//       let tripDetails = { hotel: null, transport: null };\n//       const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n//       if (savedTripDetails) {\n//         try {\n//           tripDetails = JSON.parse(savedTripDetails);\n//         } catch (error) {\n//           console.error(\"Error parsing trip details:\", error);\n//         }\n//       }\n\n//       // Update with new selections\n//       const updatedDetails = {\n//         ...tripDetails,\n//         hotel: selectedHotel,\n//         transport: selectedTransport\n//       };\n\n//       // Save back to localStorage\n//       localStorage.setItem(`tripDetails_${tripStorageKey}`, JSON.stringify(updatedDetails));\n//     }\n//   }, [selectedHotel, selectedTransport, tripStorageKey]);\n\n//   // Confirm Booking and Send Data Back to UserCustomization\n//   const handleConfirmBooking = () => {\n//     // Create booking data to pass back to UserCustomization\n//     const bookingData = {\n//       selectedHotel,\n//       selectedTransport,\n//       totalPrice: calculateTotalPrice()\n//     };\n\n//     // Navigate back to UserCustomization with all booking data\n//     navigate(\"/UserCustomization\", { \n//       state: { \n//         customizationData, \n//         bookingData \n//       } \n//     });\n//   };\n\n//   // If we don't have customization data, redirect to the home page\n//   useEffect(() => {\n//     if (!customizationData && !tripStorageKey) {\n//       navigate(\"/\");\n//     }\n//   }, [customizationData, tripStorageKey, navigate]);\n\n//   return (\n//     <div className=\"container\">\n//       <Navbar />\n\n//       {/* Back Arrow Icon */}\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/UserCustomization\", { state: { customizationData } })}>\n//         ←\n//       </div>\n\n//       {/* Centered Heading */}\n//       <div className=\"center-heading\">\n//         <h2>Booking Options</h2>\n//         {tripStorageKey && (\n//           <p className=\"trip-id-info\">\n//             Trip from {customizationData?.startingPoint || \"\"} to {customizationData?.destination || \"\"}\n//           </p>\n//         )}\n//       </div>\n\n//       {/* Booking Options */}\n//       <div className=\"booking-options\">\n//         <div className=\"option-card\">\n//           <h3>1. Customize Transport</h3>\n//           <img src={transportImg} alt=\"Transport\" />\n//           {selectedTransport ? (\n//             <div className=\"booked-transport\">\n//               <p><strong>Transport Selected:</strong> {selectedTransport.name || selectedTransport.car_name || selectedTransport.bus_name || selectedTransport.train_name}</p>\n//               <p>Type: {selectedTransport.type || \"N/A\"}</p>\n//               <p>Departure: {selectedTransport.departure_time || \"N/A\"}</p>\n//               <p>Price: {selectedTransport.price ? `${selectedTransport.price} PKR` : \"Price Not Available\"}</p>\n//               <button className=\"edit-btn\" onClick={handleEditTransport}>\n//                 <FaEdit /> Edit\n//               </button>\n//             </div>\n//           ) : (\n//             <Link \n//               to=\"/BookTransport\" \n//               state={{ customizationData, returnToOptions: true }}\n//               className=\"explore-btn\"\n//               onClick={() => {\n//                 if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\n//               }}\n//             >\n//               Explore\n//             </Link>\n//           )}\n//         </div>\n\n//         <div className=\"option-card\">\n//           <h3>2. Book a Hotel</h3>\n//           <img src={hotelImg} alt=\"Hotel\" />\n//           {selectedHotel ? (\n//             <div className=\"booked-hotel\">\n//               <p><strong>Hotel Booked:</strong> {selectedHotel.name}</p>\n//               <p>Rating: {selectedHotel.rating} / 5</p>\n//               <p>Price: {selectedHotel.price} PKR per night</p>\n//               <p>Status: <span style={{ color: \"green\" }}>✔</span> Selected</p>\n//               <button className=\"edit-btn\" onClick={handleEditHotel}>\n//                 <FaEdit /> Edit\n//               </button>\n//             </div>\n//           ) : (\n//             <Link \n//               to=\"/BookHotel\" \n//               state={{ customizationData, returnToOptions: true }}\n//               className=\"explore-btn\"\n//               onClick={() => {\n//                 if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\n//               }}\n//             >\n//               Explore\n//             </Link>\n//           )}\n//         </div>\n\n//         <div className=\"option-card\">\n//           <h3>3. Book an Airbnb</h3>\n//           <img src={airbnbImg} alt=\"Airbnb\" />\n//           <Link \n//             to=\"/BookAirbnb\" \n//             state={{ customizationData, returnToOptions: true }}\n//             className=\"explore-btn\" \n//             onClick={() => {\n//               if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\n//             }}\n//           >\n//             Explore\n//           </Link>\n//         </div>\n//       </div>\n\n//       {/* Confirm Button */}\n//       <div className=\"confirm-btn-container\">\n//         <button \n//           className=\"confirm-btn\" \n//           onClick={handleConfirmBooking}\n//           disabled={!selectedHotel && !selectedTransport}\n//         >\n//           Confirm: {calculateTotalPrice().toLocaleString()} PKR ➔\n//         </button>\n//       </div>\n\n//       {(!selectedHotel && !selectedTransport) && (\n//         <p className=\"selection-note\">Please select at least one option before confirming.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default BookingOptions;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport Navbar from \"../NavBar/Navbar\";\nimport transportImg from \"./images/transport.png\";\nimport hotelImg from \"./images/hotel.jpg\";\nimport airbnbImg from \"./images/airbnb.jpg\";\nimport \"./BookingOptions.css\";\nimport { FaEdit, FaArrowLeft, FaCheck, FaLongArrowAltRight } from \"react-icons/fa\";\nimport { IoMdPricetag } from \"react-icons/io\";\nimport { BiSolidHotel, BiSolidCar, BiSolidHome } from \"react-icons/bi\";\nconst BookingOptions = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    customizationData,\n    currentDetails\n  } = location.state || {};\n\n  // Loading state for better UX\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Create a unique trip ID based on trip details to use as storage key\n  const getTripStorageKey = () => {\n    if (!customizationData) return null;\n    const {\n      startingPoint,\n      destination,\n      startDate,\n      endDate,\n      guests\n    } = customizationData;\n    if (!startingPoint || !destination || !startDate || !endDate) return null;\n    return `trip_${startingPoint}_${destination}_${startDate}_${endDate}_${guests}`;\n  };\n  const tripStorageKey = getTripStorageKey();\n\n  // Initialize state with data from location state or trip-specific localStorage\n  const [selectedHotel, setSelectedHotel] = useState(null);\n  const [selectedTransport, setSelectedTransport] = useState(null);\n\n  // Calculate total price\n  const calculateTotalPrice = () => {\n    let totalPrice = 0;\n    if (selectedHotel === null || selectedHotel === void 0 ? void 0 : selectedHotel.price) totalPrice += parseFloat(selectedHotel.price) || 0;\n    if (selectedTransport === null || selectedTransport === void 0 ? void 0 : selectedTransport.price) totalPrice += parseFloat(selectedTransport.price) || 0;\n    return totalPrice;\n  };\n\n  // Format price with commas for thousands\n  const formatPrice = price => {\n    return parseFloat(price).toLocaleString();\n  };\n\n  // Handle editing the hotel selection\n  const handleEditHotel = () => {\n    if (tripStorageKey) {\n      localStorage.setItem('currentTripKey', tripStorageKey);\n    }\n    navigate(\"/BookHotel\", {\n      state: {\n        customizationData,\n        returnToOptions: true\n      }\n    });\n  };\n\n  // Handle editing the transport selection\n  const handleEditTransport = () => {\n    if (tripStorageKey) {\n      localStorage.setItem('currentTripKey', tripStorageKey);\n    }\n    navigate(\"/BookTransport\", {\n      state: {\n        customizationData,\n        returnToOptions: true\n      }\n    });\n  };\n\n  // Initialize data\n  useEffect(() => {\n    setIsLoading(true);\n\n    // Function to load data\n    const loadData = async () => {\n      let hotelData = null;\n      let transportData = null;\n\n      // First try to get from currentDetails passed in navigation\n      if (currentDetails) {\n        hotelData = currentDetails.hotel || null;\n        transportData = currentDetails.transport || null;\n      }\n\n      // If not found and we have a valid tripStorageKey, try to get from localStorage\n      if (!hotelData || !transportData) {\n        if (tripStorageKey) {\n          const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n          if (savedTripDetails) {\n            try {\n              const parsedDetails = JSON.parse(savedTripDetails);\n              if (!hotelData) hotelData = parsedDetails.hotel || null;\n              if (!transportData) transportData = parsedDetails.transport || null;\n            } catch (error) {\n              console.error(\"Error parsing trip details from localStorage:\", error);\n            }\n          }\n        }\n      }\n\n      // Update state with loaded data\n      setSelectedHotel(hotelData);\n      setSelectedTransport(transportData);\n\n      // Simulate a slight delay for better UX\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 500);\n    };\n    loadData();\n  }, [currentDetails, tripStorageKey]);\n\n  // When a user returns from BookHotel or BookTransport pages, update local state\n  useEffect(() => {\n    if (tripStorageKey) {\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n      if (savedTripDetails) {\n        try {\n          const parsedDetails = JSON.parse(savedTripDetails);\n          // Only update if the data exists to avoid overwriting with null\n          if (parsedDetails.hotel) setSelectedHotel(parsedDetails.hotel);\n          if (parsedDetails.transport) setSelectedTransport(parsedDetails.transport);\n        } catch (error) {\n          console.error(\"Error parsing trip details from localStorage:\", error);\n        }\n      }\n    }\n  }, [tripStorageKey]);\n\n  // Save selections to trip-specific localStorage\n  useEffect(() => {\n    if (tripStorageKey && !isLoading) {\n      // Get existing trip details first\n      let tripDetails = {\n        hotel: null,\n        transport: null\n      };\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n      if (savedTripDetails) {\n        try {\n          tripDetails = JSON.parse(savedTripDetails);\n        } catch (error) {\n          console.error(\"Error parsing trip details:\", error);\n        }\n      }\n\n      // Update with new selections\n      const updatedDetails = {\n        ...tripDetails,\n        hotel: selectedHotel,\n        transport: selectedTransport\n      };\n\n      // Save back to localStorage\n      localStorage.setItem(`tripDetails_${tripStorageKey}`, JSON.stringify(updatedDetails));\n    }\n  }, [selectedHotel, selectedTransport, tripStorageKey, isLoading]);\n\n  // Confirm Booking and Send Data Back to UserCustomization\n  const handleConfirmBooking = () => {\n    // Create booking data to pass back to UserCustomization\n    const bookingData = {\n      selectedHotel,\n      selectedTransport,\n      totalPrice: calculateTotalPrice()\n    };\n\n    // Show confirmation animation\n    setIsConfirming(true);\n\n    // Add slight delay for better UX before navigating\n    setTimeout(() => {\n      // Navigate back to UserCustomization with all booking data\n      navigate(\"/UserCustomization\", {\n        state: {\n          customizationData,\n          bookingData\n        }\n      });\n    }, 800);\n  };\n\n  // State for confirmation animation\n  const [isConfirming, setIsConfirming] = useState(false);\n\n  // If we don't have customization data, redirect to the home page\n  // useEffect(() => {\n  //   if (!customizationData && !tripStorageKey) {\n  //     navigate(\"/\");\n  //   }\n  // }, [customizationData, tripStorageKey, navigate]);\n\n  // Get transport name from selected transport object\n  const getTransportName = transport => {\n    if (!transport) return '';\n    return transport.name || transport.car_name || transport.bus_name || transport.train_name || 'Transport';\n  };\n\n  // Get transport type or default text\n  const getTransportType = transport => {\n    if (!transport) return 'N/A';\n    return transport.type || 'Standard';\n  };\n\n  // Check if at least one option is selected\n  const hasSelection = selectedHotel || selectedTransport;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back-arrow\",\n    onClick: () => navigate(\"/UserCustomization\", {\n      state: {\n        customizationData\n      }\n    }),\n    \"aria-label\": \"Go back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 9\n    }\n  }, \"Booking Options\"), customizationData && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"trip-id-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 11\n    }\n  }, customizationData.startingPoint, \" \\u2192 \", customizationData.destination, customizationData.startDate && ` • ${customizationData.startDate}`))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"booking-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 15\n    }\n  }, \"1\"), \" Customize Transport\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: transportImg,\n    alt: \"Transport\",\n    className: \"option-card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 9\n    }\n  }, selectedTransport ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"booking-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 18\n    }\n  }, \"Transport:\"), \" \", getTransportName(selectedTransport)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 18\n    }\n  }, \"Type:\"), \" \", getTransportType(selectedTransport)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 18\n    }\n  }, \"Departure:\"), \" \", selectedTransport.departure_time || \"Flexible\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 17\n    }\n  }, \"Price:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price-tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IoMdPricetag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 19\n    }\n  }), \" \", selectedTransport.price ? formatPrice(selectedTransport.price) : \"N/A\", \" PKR\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 17\n    }\n  }, \"Status:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaCheck, {\n    className: \"status-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 19\n    }\n  }), \" Selected\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit-btn\",\n    onClick: handleEditTransport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaEdit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 19\n    }\n  }), \" Edit Selection\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 15\n    }\n  }, \"Choose your preferred mode of transportation for your journey.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/BookTransport\",\n    state: {\n      customizationData,\n      returnToOptions: true\n    },\n    className: \"explore-btn\",\n    onClick: () => {\n      if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BiSolidCar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 19\n    }\n  }), \" Explore Options\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 15\n    }\n  }, \"2\"), \" Book a Hotel\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: hotelImg,\n    alt: \"Hotel\",\n    className: \"option-card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 9\n    }\n  }, selectedHotel ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"booking-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 18\n    }\n  }, \"Hotel:\"), \" \", selectedHotel.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 18\n    }\n  }, \"Rating:\"), \" \", selectedHotel.rating, \" / 5\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 17\n    }\n  }, \"Price:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price-tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IoMdPricetag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 19\n    }\n  }), \" \", formatPrice(selectedHotel.price), \" PKR/night\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 17\n    }\n  }, \"Status:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaCheck, {\n    className: \"status-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 19\n    }\n  }), \" Selected\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit-btn\",\n    onClick: handleEditHotel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaEdit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 19\n    }\n  }), \" Edit Selection\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 15\n    }\n  }, \"Find comfortable accommodations for your stay.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/BookHotel\",\n    state: {\n      customizationData,\n      returnToOptions: true\n    },\n    className: \"explore-btn\",\n    onClick: () => {\n      if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BiSolidHotel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 19\n    }\n  }), \" Explore Options\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 15\n    }\n  }, \"3\"), \" Book an Airbnb\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: airbnbImg,\n    alt: \"Airbnb\",\n    className: \"option-card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 11\n    }\n  }, \"Discover unique stays and experiences with local hosts.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/BookAirbnb\",\n    state: {\n      customizationData,\n      returnToOptions: true\n    },\n    className: \"explore-btn\",\n    onClick: () => {\n      if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BiSolidHome, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 15\n    }\n  }), \" Explore Options\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confirm-btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 5\n    }\n  }, hasSelection && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confirmation-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 11\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 13\n    }\n  }, \"Transport:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 13\n    }\n  }, selectedTransport ? `${getTransportName(selectedTransport)} (${formatPrice(selectedTransport.price)} PKR)` : 'Not selected')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 13\n    }\n  }, \"Accommodation:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 13\n    }\n  }, selectedHotel ? `${selectedHotel.name} (${formatPrice(selectedHotel.price)} PKR/night)` : 'Not selected')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-item summary-total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 13\n    }\n  }, \"Total:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 13\n    }\n  }, formatPrice(calculateTotalPrice()), \" PKR\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: `confirm-btn ${isConfirming ? 'confirming' : ''}`,\n    onClick: handleConfirmBooking,\n    disabled: !hasSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 7\n    }\n  }, isConfirming ? 'Processing...' : /*#__PURE__*/React.createElement(React.Fragment, null, \"Confirm Booking \", formatPrice(calculateTotalPrice()), \" PKR \", /*#__PURE__*/React.createElement(FaLongArrowAltRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 70\n    }\n  }))), !hasSelection && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"selection-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 9\n    }\n  }, \"Please select at least one option before confirming.\")));\n};\nexport default BookingOptions;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","Navbar","transportImg","hotelImg","airbnbImg","FaEdit","FaArrowLeft","FaCheck","FaLongArrowAltRight","IoMdPricetag","BiSolidHotel","BiSolidCar","BiSolidHome","BookingOptions","navigate","location","customizationData","currentDetails","state","isLoading","setIsLoading","getTripStorageKey","startingPoint","destination","startDate","endDate","guests","tripStorageKey","selectedHotel","setSelectedHotel","selectedTransport","setSelectedTransport","calculateTotalPrice","totalPrice","price","parseFloat","formatPrice","toLocaleString","handleEditHotel","localStorage","setItem","returnToOptions","handleEditTransport","loadData","hotelData","transportData","hotel","transport","savedTripDetails","getItem","parsedDetails","JSON","parse","error","console","setTimeout","tripDetails","updatedDetails","stringify","handleConfirmBooking","bookingData","setIsConfirming","isConfirming","getTransportName","name","car_name","bus_name","train_name","getTransportType","type","hasSelection","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","departure_time","Fragment","to","rating","disabled"],"sources":["F:/Web/Voyaige/Voyaige/proj/front/src/components/Booking/BookingOptions.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n// import Navbar from \"../NavBar/Navbar\";\r\n// import transportImg from \"./images/transport.png\";\r\n// import hotelImg from \"./images/hotel.jpg\";\r\n// import airbnbImg from \"./images/airbnb.jpg\";\r\n// import \"./BookingOptions.css\";\r\n// import { FaEdit } from \"react-icons/fa\";\r\n\r\n// const BookingOptions = () => {\r\n//   // State for selected hotel and transport (load from localStorage)\r\n//   const [selectedHotel, setSelectedHotel] = useState(\r\n//     JSON.parse(localStorage.getItem(\"selectedHotel\")) || null\r\n//   );\r\n//   const [selectedTransport, setSelectedTransport] = useState(\r\n//     JSON.parse(localStorage.getItem(\"selectedTransport\")) || null\r\n//   );\r\n\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n//   const { tripDetails, dayIndex, dayData } = location.state || {};\r\n\r\n//   // Handle editing the hotel selection\r\n//   const handleEditHotel = () => {\r\n//     navigate(\"/BookHotel\");\r\n//   };\r\n\r\n//   // Confirm Booking and Send Data Back to UserCustomization\r\n//   const handleConfirmBooking = () => {\r\n//     const updatedDayData = {\r\n//       ...dayData,\r\n//       transport: selectedTransport,\r\n//       accommodation: selectedHotel,\r\n//       cost: calculateTotalPrice(),\r\n//     };\r\n\r\n//     const bookingData = {\r\n//       selectedHotel,\r\n//       selectedTransport,\r\n//       totalPrice: calculateTotalPrice(),\r\n//       tripDetails,\r\n//       dayIndex,\r\n//       updatedDayData,\r\n//     };\r\n\r\n//     // Navigate back to UserCustomization with all booking data\r\n//     navigate(\"/UserCustomization\", { state: { bookingData } });\r\n//   };\r\n\r\n//   // Update localStorage whenever hotel or transport is selected\r\n//   useEffect(() => {\r\n//     if (selectedHotel) {\r\n//       localStorage.setItem(\"selectedHotel\", JSON.stringify(selectedHotel));\r\n//     }\r\n//     if (selectedTransport) {\r\n//       localStorage.setItem(\"selectedTransport\", JSON.stringify(selectedTransport));\r\n//     }\r\n//   }, [selectedHotel, selectedTransport]);\r\n\r\n//   // Calculate total price\r\n//   const calculateTotalPrice = () => {\r\n//     let totalPrice = 0;\r\n//     if (selectedHotel?.price) totalPrice += parseFloat(selectedHotel.price) || 0;\r\n//     if (selectedTransport?.price) totalPrice += parseFloat(selectedTransport.price) || 0;\r\n//     return totalPrice;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <Navbar />\r\n\r\n//       {/* Back Arrow Icon */}\r\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/UserCustomization\")}>\r\n//         ←\r\n//       </div>\r\n\r\n//       {/* Centered Heading */}\r\n//       <div className=\"center-heading\">\r\n//       </div>\r\n\r\n//       {/* Booking Options */}\r\n//       <div className=\"booking-options\">\r\n//         <div className=\"option-card\">\r\n//           <h3>1. Customize Transport</h3>\r\n//           <img src={transportImg} alt=\"Transport\" />\r\n//           {selectedTransport ? (\r\n//             <div className=\"booked-transport\">\r\n//               <p><strong>Transport Selected:</strong> {selectedTransport.name || selectedTransport.car_name || selectedTransport.bus_name || selectedTransport.train_name}</p>\r\n//               <p>Departure: {selectedTransport.departure_time || \"N/A\"}</p>\r\n//               <p>Price: {selectedTransport.price ? `${selectedTransport.price} PKR` : \"Price Not Available\"}</p>\r\n//               <button className=\"edit-btn\" onClick={() => navigate(\"/BookTransport\")}>\r\n//                 <FaEdit /> Edit\r\n//               </button>\r\n//             </div>\r\n//           ) : (\r\n//             <Link to=\"/BookTransport\" className=\"explore-btn\">\r\n//               Explore\r\n//             </Link>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"option-card\">\r\n//           <h3>2. Book a Hotel</h3>\r\n//           <img src={hotelImg} alt=\"Hotel\" />\r\n//           {selectedHotel ? (\r\n//             <div className=\"booked-hotel\">\r\n//               <p><strong>Hotel Booked:</strong> {selectedHotel.name}</p>\r\n//               <p>Rating: {selectedHotel.rating} / 5</p>\r\n//               <p>Price: {selectedHotel.price} Rs per night</p>\r\n//               <p>Status: <span style={{ color: \"green\" }}>✔</span> Booked</p>\r\n//               <button className=\"edit-btn\" onClick={handleEditHotel}>\r\n//                 <FaEdit /> Edit\r\n//               </button>\r\n//             </div>\r\n//           ) : (\r\n//             <Link to=\"/BookHotel\" className=\"explore-btn\">\r\n//               Explore\r\n//             </Link>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"option-card\">\r\n//           <h3>3. Book an Airbnb</h3>\r\n//           <img src={airbnbImg} alt=\"Airbnb\" />\r\n//           <Link to=\"/BookAirbnb\" className=\"explore-btn\">\r\n//             Explore\r\n//           </Link>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Confirm Button */}\r\n//       <div className=\"confirm-btn-container\">\r\n//         <button className=\"confirm-btn\" onClick={handleConfirmBooking}>\r\n//           Confirm: {calculateTotalPrice()} PKR ➔\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingOptions;\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n// import Navbar from \"../NavBar/Navbar\";\r\n// import transportImg from \"./images/transport.png\";\r\n// import hotelImg from \"./images/hotel.jpg\";\r\n// import airbnbImg from \"./images/airbnb.jpg\";\r\n// import \"./BookingOptions.css\";\r\n// import { FaEdit } from \"react-icons/fa\";\r\n\r\n// const BookingOptions = () => {\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n//   const { customizationData, currentDetails } = location.state || {};\r\n\r\n//   // Create a unique trip ID based on trip details to use as storage key\r\n//   // This ensures different trips have separate storage\r\n//   const getTripStorageKey = () => {\r\n//     if (!customizationData) return null;\r\n    \r\n//     const { startingPoint, destination, startDate, endDate, guests } = customizationData;\r\n//     if (!startingPoint || !destination || !startDate || !endDate) return null;\r\n    \r\n//     return `trip_${startingPoint}_${destination}_${startDate}_${endDate}_${guests}`;\r\n//   };\r\n\r\n//   const tripStorageKey = getTripStorageKey();\r\n  \r\n//   // Initialize state with data from location state or trip-specific localStorage\r\n//   const [selectedHotel, setSelectedHotel] = useState(() => {\r\n//     // First try to get from currentDetails passed in navigation\r\n//     if (currentDetails && currentDetails.hotel) {\r\n//       return currentDetails.hotel;\r\n//     }\r\n    \r\n//     // If not found and we have a valid tripStorageKey, try to get from localStorage\r\n//     if (tripStorageKey) {\r\n//       const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n//       if (savedTripDetails) {\r\n//         try {\r\n//           const parsedDetails = JSON.parse(savedTripDetails);\r\n//           return parsedDetails.hotel || null;\r\n//         } catch (error) {\r\n//           console.error(\"Error parsing trip details from localStorage:\", error);\r\n//           return null;\r\n//         }\r\n//       }\r\n//     }\r\n    \r\n//     return null;\r\n//   });\r\n  \r\n//   const [selectedTransport, setSelectedTransport] = useState(() => {\r\n//     // First try to get from currentDetails passed in navigation\r\n//     if (currentDetails && currentDetails.transport) {\r\n//       return currentDetails.transport;\r\n//     }\r\n    \r\n//     // If not found and we have a valid tripStorageKey, try to get from localStorage\r\n//     if (tripStorageKey) {\r\n//       const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n//       if (savedTripDetails) {\r\n//         try {\r\n//           const parsedDetails = JSON.parse(savedTripDetails);\r\n//           return parsedDetails.transport || null;\r\n//         } catch (error) {\r\n//           console.error(\"Error parsing trip details from localStorage:\", error);\r\n//           return null;\r\n//         }\r\n//       }\r\n//     }\r\n    \r\n//     return null;\r\n//   });\r\n\r\n//   // Calculate total price\r\n//   const calculateTotalPrice = () => {\r\n//     let totalPrice = 0;\r\n//     if (selectedHotel?.price) totalPrice += parseFloat(selectedHotel.price) || 0;\r\n//     if (selectedTransport?.price) totalPrice += parseFloat(selectedTransport.price) || 0;\r\n//     return totalPrice;\r\n//   };\r\n\r\n//   // Handle editing the hotel selection\r\n//   const handleEditHotel = () => {\r\n//     // Save current trip key to localStorage so hotel booking page knows which trip we're working with\r\n//     if (tripStorageKey) {\r\n//       localStorage.setItem('currentTripKey', tripStorageKey);\r\n//     }\r\n//     navigate(\"/BookHotel\", { \r\n//       state: { \r\n//         customizationData,\r\n//         returnToOptions: true\r\n//       } \r\n//     });\r\n//   };\r\n\r\n//   // Handle editing the transport selection\r\n//   const handleEditTransport = () => {\r\n//     // Save current trip key to localStorage so transport booking page knows which trip we're working with\r\n//     if (tripStorageKey) {\r\n//       localStorage.setItem('currentTripKey', tripStorageKey);\r\n//     }\r\n//     navigate(\"/BookTransport\", { \r\n//       state: { \r\n//         customizationData,\r\n//         returnToOptions: true\r\n//       } \r\n//     });\r\n//   };\r\n\r\n//   // When a user returns from BookHotel or BookTransport pages, update local state\r\n//   useEffect(() => {\r\n//     if (tripStorageKey) {\r\n//       const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n//       if (savedTripDetails) {\r\n//         try {\r\n//           const parsedDetails = JSON.parse(savedTripDetails);\r\n//           // Only update if the data exists to avoid overwriting with null\r\n//           if (parsedDetails.hotel) setSelectedHotel(parsedDetails.hotel);\r\n//           if (parsedDetails.transport) setSelectedTransport(parsedDetails.transport);\r\n//         } catch (error) {\r\n//           console.error(\"Error parsing trip details from localStorage:\", error);\r\n//         }\r\n//       }\r\n//     }\r\n//   }, [tripStorageKey]);\r\n\r\n//   // Save selections to trip-specific localStorage\r\n//   useEffect(() => {\r\n//     if (tripStorageKey) {\r\n//       // Get existing trip details first\r\n//       let tripDetails = { hotel: null, transport: null };\r\n//       const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n//       if (savedTripDetails) {\r\n//         try {\r\n//           tripDetails = JSON.parse(savedTripDetails);\r\n//         } catch (error) {\r\n//           console.error(\"Error parsing trip details:\", error);\r\n//         }\r\n//       }\r\n      \r\n//       // Update with new selections\r\n//       const updatedDetails = {\r\n//         ...tripDetails,\r\n//         hotel: selectedHotel,\r\n//         transport: selectedTransport\r\n//       };\r\n      \r\n//       // Save back to localStorage\r\n//       localStorage.setItem(`tripDetails_${tripStorageKey}`, JSON.stringify(updatedDetails));\r\n//     }\r\n//   }, [selectedHotel, selectedTransport, tripStorageKey]);\r\n\r\n//   // Confirm Booking and Send Data Back to UserCustomization\r\n//   const handleConfirmBooking = () => {\r\n//     // Create booking data to pass back to UserCustomization\r\n//     const bookingData = {\r\n//       selectedHotel,\r\n//       selectedTransport,\r\n//       totalPrice: calculateTotalPrice()\r\n//     };\r\n\r\n//     // Navigate back to UserCustomization with all booking data\r\n//     navigate(\"/UserCustomization\", { \r\n//       state: { \r\n//         customizationData, \r\n//         bookingData \r\n//       } \r\n//     });\r\n//   };\r\n  \r\n//   // If we don't have customization data, redirect to the home page\r\n//   useEffect(() => {\r\n//     if (!customizationData && !tripStorageKey) {\r\n//       navigate(\"/\");\r\n//     }\r\n//   }, [customizationData, tripStorageKey, navigate]);\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <Navbar />\r\n\r\n//       {/* Back Arrow Icon */}\r\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/UserCustomization\", { state: { customizationData } })}>\r\n//         ←\r\n//       </div>\r\n\r\n//       {/* Centered Heading */}\r\n//       <div className=\"center-heading\">\r\n//         <h2>Booking Options</h2>\r\n//         {tripStorageKey && (\r\n//           <p className=\"trip-id-info\">\r\n//             Trip from {customizationData?.startingPoint || \"\"} to {customizationData?.destination || \"\"}\r\n//           </p>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Booking Options */}\r\n//       <div className=\"booking-options\">\r\n//         <div className=\"option-card\">\r\n//           <h3>1. Customize Transport</h3>\r\n//           <img src={transportImg} alt=\"Transport\" />\r\n//           {selectedTransport ? (\r\n//             <div className=\"booked-transport\">\r\n//               <p><strong>Transport Selected:</strong> {selectedTransport.name || selectedTransport.car_name || selectedTransport.bus_name || selectedTransport.train_name}</p>\r\n//               <p>Type: {selectedTransport.type || \"N/A\"}</p>\r\n//               <p>Departure: {selectedTransport.departure_time || \"N/A\"}</p>\r\n//               <p>Price: {selectedTransport.price ? `${selectedTransport.price} PKR` : \"Price Not Available\"}</p>\r\n//               <button className=\"edit-btn\" onClick={handleEditTransport}>\r\n//                 <FaEdit /> Edit\r\n//               </button>\r\n//             </div>\r\n//           ) : (\r\n//             <Link \r\n//               to=\"/BookTransport\" \r\n//               state={{ customizationData, returnToOptions: true }}\r\n//               className=\"explore-btn\"\r\n//               onClick={() => {\r\n//                 if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\r\n//               }}\r\n//             >\r\n//               Explore\r\n//             </Link>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"option-card\">\r\n//           <h3>2. Book a Hotel</h3>\r\n//           <img src={hotelImg} alt=\"Hotel\" />\r\n//           {selectedHotel ? (\r\n//             <div className=\"booked-hotel\">\r\n//               <p><strong>Hotel Booked:</strong> {selectedHotel.name}</p>\r\n//               <p>Rating: {selectedHotel.rating} / 5</p>\r\n//               <p>Price: {selectedHotel.price} PKR per night</p>\r\n//               <p>Status: <span style={{ color: \"green\" }}>✔</span> Selected</p>\r\n//               <button className=\"edit-btn\" onClick={handleEditHotel}>\r\n//                 <FaEdit /> Edit\r\n//               </button>\r\n//             </div>\r\n//           ) : (\r\n//             <Link \r\n//               to=\"/BookHotel\" \r\n//               state={{ customizationData, returnToOptions: true }}\r\n//               className=\"explore-btn\"\r\n//               onClick={() => {\r\n//                 if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\r\n//               }}\r\n//             >\r\n//               Explore\r\n//             </Link>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"option-card\">\r\n//           <h3>3. Book an Airbnb</h3>\r\n//           <img src={airbnbImg} alt=\"Airbnb\" />\r\n//           <Link \r\n//             to=\"/BookAirbnb\" \r\n//             state={{ customizationData, returnToOptions: true }}\r\n//             className=\"explore-btn\" \r\n//             onClick={() => {\r\n//               if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\r\n//             }}\r\n//           >\r\n//             Explore\r\n//           </Link>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Confirm Button */}\r\n//       <div className=\"confirm-btn-container\">\r\n//         <button \r\n//           className=\"confirm-btn\" \r\n//           onClick={handleConfirmBooking}\r\n//           disabled={!selectedHotel && !selectedTransport}\r\n//         >\r\n//           Confirm: {calculateTotalPrice().toLocaleString()} PKR ➔\r\n//         </button>\r\n//       </div>\r\n      \r\n//       {(!selectedHotel && !selectedTransport) && (\r\n//         <p className=\"selection-note\">Please select at least one option before confirming.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingOptions;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport transportImg from \"./images/transport.png\";\r\nimport hotelImg from \"./images/hotel.jpg\";\r\nimport airbnbImg from \"./images/airbnb.jpg\";\r\nimport \"./BookingOptions.css\";\r\nimport { FaEdit, FaArrowLeft, FaCheck, FaLongArrowAltRight } from \"react-icons/fa\";\r\nimport { IoMdPricetag } from \"react-icons/io\";\r\nimport { BiSolidHotel, BiSolidCar, BiSolidHome } from \"react-icons/bi\";\r\n\r\nconst BookingOptions = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { customizationData, currentDetails } = location.state || {};\r\n\r\n  // Loading state for better UX\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  // Create a unique trip ID based on trip details to use as storage key\r\n  const getTripStorageKey = () => {\r\n    if (!customizationData) return null;\r\n    \r\n    const { startingPoint, destination, startDate, endDate, guests } = customizationData;\r\n    if (!startingPoint || !destination || !startDate || !endDate) return null;\r\n    \r\n    return `trip_${startingPoint}_${destination}_${startDate}_${endDate}_${guests}`;\r\n  };\r\n\r\n  const tripStorageKey = getTripStorageKey();\r\n  \r\n  // Initialize state with data from location state or trip-specific localStorage\r\n  const [selectedHotel, setSelectedHotel] = useState(null);\r\n  const [selectedTransport, setSelectedTransport] = useState(null);\r\n  \r\n  // Calculate total price\r\n  const calculateTotalPrice = () => {\r\n    let totalPrice = 0;\r\n    if (selectedHotel?.price) totalPrice += parseFloat(selectedHotel.price) || 0;\r\n    if (selectedTransport?.price) totalPrice += parseFloat(selectedTransport.price) || 0;\r\n    return totalPrice;\r\n  };\r\n\r\n  // Format price with commas for thousands\r\n  const formatPrice = (price) => {\r\n    return parseFloat(price).toLocaleString();\r\n  };\r\n\r\n  // Handle editing the hotel selection\r\n  const handleEditHotel = () => {\r\n    if (tripStorageKey) {\r\n      localStorage.setItem('currentTripKey', tripStorageKey);\r\n    }\r\n    navigate(\"/BookHotel\", { \r\n      state: { \r\n        customizationData,\r\n        returnToOptions: true\r\n      } \r\n    });\r\n  };\r\n\r\n  // Handle editing the transport selection\r\n  const handleEditTransport = () => {\r\n    if (tripStorageKey) {\r\n      localStorage.setItem('currentTripKey', tripStorageKey);\r\n    }\r\n    navigate(\"/BookTransport\", { \r\n      state: { \r\n        customizationData,\r\n        returnToOptions: true\r\n      } \r\n    });\r\n  };\r\n\r\n  // Initialize data\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    \r\n    // Function to load data\r\n    const loadData = async () => {\r\n      let hotelData = null;\r\n      let transportData = null;\r\n      \r\n      // First try to get from currentDetails passed in navigation\r\n      if (currentDetails) {\r\n        hotelData = currentDetails.hotel || null;\r\n        transportData = currentDetails.transport || null;\r\n      }\r\n      \r\n      // If not found and we have a valid tripStorageKey, try to get from localStorage\r\n      if (!hotelData || !transportData) {\r\n        if (tripStorageKey) {\r\n          const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n          if (savedTripDetails) {\r\n            try {\r\n              const parsedDetails = JSON.parse(savedTripDetails);\r\n              if (!hotelData) hotelData = parsedDetails.hotel || null;\r\n              if (!transportData) transportData = parsedDetails.transport || null;\r\n            } catch (error) {\r\n              console.error(\"Error parsing trip details from localStorage:\", error);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Update state with loaded data\r\n      setSelectedHotel(hotelData);\r\n      setSelectedTransport(transportData);\r\n      \r\n      // Simulate a slight delay for better UX\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 500);\r\n    };\r\n    \r\n    loadData();\r\n  }, [currentDetails, tripStorageKey]);\r\n\r\n  // When a user returns from BookHotel or BookTransport pages, update local state\r\n  useEffect(() => {\r\n    if (tripStorageKey) {\r\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n      if (savedTripDetails) {\r\n        try {\r\n          const parsedDetails = JSON.parse(savedTripDetails);\r\n          // Only update if the data exists to avoid overwriting with null\r\n          if (parsedDetails.hotel) setSelectedHotel(parsedDetails.hotel);\r\n          if (parsedDetails.transport) setSelectedTransport(parsedDetails.transport);\r\n        } catch (error) {\r\n          console.error(\"Error parsing trip details from localStorage:\", error);\r\n        }\r\n      }\r\n    }\r\n  }, [tripStorageKey]);\r\n\r\n  // Save selections to trip-specific localStorage\r\n  useEffect(() => {\r\n    if (tripStorageKey && (!isLoading)) {\r\n      // Get existing trip details first\r\n      let tripDetails = { hotel: null, transport: null };\r\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n      if (savedTripDetails) {\r\n        try {\r\n          tripDetails = JSON.parse(savedTripDetails);\r\n        } catch (error) {\r\n          console.error(\"Error parsing trip details:\", error);\r\n        }\r\n      }\r\n      \r\n      // Update with new selections\r\n      const updatedDetails = {\r\n        ...tripDetails,\r\n        hotel: selectedHotel,\r\n        transport: selectedTransport\r\n      };\r\n      \r\n      // Save back to localStorage\r\n      localStorage.setItem(`tripDetails_${tripStorageKey}`, JSON.stringify(updatedDetails));\r\n    }\r\n  }, [selectedHotel, selectedTransport, tripStorageKey, isLoading]);\r\n\r\n// Confirm Booking and Send Data Back to UserCustomization\r\nconst handleConfirmBooking = () => {\r\n  // Create booking data to pass back to UserCustomization\r\n  const bookingData = {\r\n    selectedHotel,\r\n    selectedTransport,\r\n    totalPrice: calculateTotalPrice()\r\n  };\r\n\r\n  // Show confirmation animation\r\n  setIsConfirming(true);\r\n  \r\n  // Add slight delay for better UX before navigating\r\n  setTimeout(() => {\r\n    // Navigate back to UserCustomization with all booking data\r\n    navigate(\"/UserCustomization\", { \r\n      state: { \r\n        customizationData, \r\n        bookingData \r\n      } \r\n    });\r\n  }, 800);\r\n};\r\n\r\n// State for confirmation animation\r\nconst [isConfirming, setIsConfirming] = useState(false);\r\n\r\n// If we don't have customization data, redirect to the home page\r\n// useEffect(() => {\r\n//   if (!customizationData && !tripStorageKey) {\r\n//     navigate(\"/\");\r\n//   }\r\n// }, [customizationData, tripStorageKey, navigate]);\r\n\r\n// Get transport name from selected transport object\r\nconst getTransportName = (transport) => {\r\n  if (!transport) return '';\r\n  return transport.name || \r\n         transport.car_name || \r\n         transport.bus_name || \r\n         transport.train_name || \r\n         'Transport';\r\n};\r\n\r\n// Get transport type or default text\r\nconst getTransportType = (transport) => {\r\n  if (!transport) return 'N/A';\r\n  return transport.type || 'Standard';\r\n};\r\n\r\n// Check if at least one option is selected\r\nconst hasSelection = selectedHotel || selectedTransport;\r\n\r\nreturn (\r\n  <div className=\"container\">\r\n    <Navbar />\r\n\r\n    {/* Header Section */}\r\n    <div className=\"header-section\">\r\n      {/* Back Arrow Icon */}\r\n      <div \r\n        className=\"back-arrow\" \r\n        onClick={() => navigate(\"/UserCustomization\", { state: { customizationData } })}\r\n        aria-label=\"Go back\"\r\n      >\r\n        <FaArrowLeft />\r\n      </div>\r\n\r\n      {/* Centered Heading */}\r\n      <div className=\"center-heading\">\r\n        <h2>Booking Options</h2>\r\n        {customizationData && (\r\n          <p className=\"trip-id-info\">\r\n            {customizationData.startingPoint} → {customizationData.destination}\r\n            {customizationData.startDate && ` • ${customizationData.startDate}`}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n\r\n    {/* Booking Options */}\r\n    <div className=\"booking-options\">\r\n      <div className=\"option-card\">\r\n        <div className=\"option-card-header\">\r\n          <h3><span>1</span> Customize Transport</h3>\r\n        </div>\r\n        <img src={transportImg} alt=\"Transport\" className=\"option-card-image\" />\r\n        <div className=\"option-card-content\">\r\n          {selectedTransport ? (\r\n            <div className=\"booking-details\">\r\n              <p><strong>Transport:</strong> {getTransportName(selectedTransport)}</p>\r\n              <p><strong>Type:</strong> {getTransportType(selectedTransport)}</p>\r\n              <p><strong>Departure:</strong> {selectedTransport.departure_time || \"Flexible\"}</p>\r\n              <p>\r\n                <strong>Price:</strong> \r\n                <span className=\"price-tag\">\r\n                  <IoMdPricetag /> {selectedTransport.price ? formatPrice(selectedTransport.price) : \"N/A\"} PKR\r\n                </span>\r\n              </p>\r\n              <p>\r\n                <strong>Status:</strong>\r\n                <span className=\"status\">\r\n                  <FaCheck className=\"status-icon\" /> Selected\r\n                </span>\r\n              </p>\r\n              <div className=\"card-actions\">\r\n                <button className=\"edit-btn\" onClick={handleEditTransport}>\r\n                  <FaEdit /> Edit Selection\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <p>Choose your preferred mode of transportation for your journey.</p>\r\n              <div className=\"card-actions\">\r\n                <Link \r\n                  to=\"/BookTransport\" \r\n                  state={{ customizationData, returnToOptions: true }}\r\n                  className=\"explore-btn\"\r\n                  onClick={() => {\r\n                    if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\r\n                  }}\r\n                >\r\n                  <BiSolidCar /> Explore Options\r\n                </Link>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"option-card\">\r\n        <div className=\"option-card-header\">\r\n          <h3><span>2</span> Book a Hotel</h3>\r\n        </div>\r\n        <img src={hotelImg} alt=\"Hotel\" className=\"option-card-image\" />\r\n        <div className=\"option-card-content\">\r\n          {selectedHotel ? (\r\n            <div className=\"booking-details\">\r\n              <p><strong>Hotel:</strong> {selectedHotel.name}</p>\r\n              <p><strong>Rating:</strong> {selectedHotel.rating} / 5</p>\r\n              <p>\r\n                <strong>Price:</strong>\r\n                <span className=\"price-tag\">\r\n                  <IoMdPricetag /> {formatPrice(selectedHotel.price)} PKR/night\r\n                </span>\r\n              </p>\r\n              <p>\r\n                <strong>Status:</strong>\r\n                <span className=\"status\">\r\n                  <FaCheck className=\"status-icon\" /> Selected\r\n                </span>\r\n              </p>\r\n              <div className=\"card-actions\">\r\n                <button className=\"edit-btn\" onClick={handleEditHotel}>\r\n                  <FaEdit /> Edit Selection\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <p>Find comfortable accommodations for your stay.</p>\r\n              <div className=\"card-actions\">\r\n                <Link \r\n                  to=\"/BookHotel\" \r\n                  state={{ customizationData, returnToOptions: true }}\r\n                  className=\"explore-btn\"\r\n                  onClick={() => {\r\n                    if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\r\n                  }}\r\n                >\r\n                  <BiSolidHotel /> Explore Options\r\n                </Link>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"option-card\">\r\n        <div className=\"option-card-header\">\r\n          <h3><span>3</span> Book an Airbnb</h3>\r\n        </div>\r\n        <img src={airbnbImg} alt=\"Airbnb\" className=\"option-card-image\" />\r\n        <div className=\"option-card-content\">\r\n          <p>Discover unique stays and experiences with local hosts.</p>\r\n          <div className=\"card-actions\">\r\n            <Link \r\n              to=\"/BookAirbnb\" \r\n              state={{ customizationData, returnToOptions: true }}\r\n              className=\"explore-btn\" \r\n              onClick={() => {\r\n                if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\r\n              }}\r\n            >\r\n              <BiSolidHome /> Explore Options\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    {/* Confirmation Section */}\r\n    <div className=\"confirm-btn-container\">\r\n      {hasSelection && (\r\n        <div className=\"confirmation-summary\">\r\n          <h3>Summary</h3>\r\n          <div className=\"summary-item\">\r\n            <span>Transport:</span>\r\n            <span>{selectedTransport ? `${getTransportName(selectedTransport)} (${formatPrice(selectedTransport.price)} PKR)` : 'Not selected'}</span>\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <span>Accommodation:</span>\r\n            <span>{selectedHotel ? `${selectedHotel.name} (${formatPrice(selectedHotel.price)} PKR/night)` : 'Not selected'}</span>\r\n          </div>\r\n          <div className=\"summary-item summary-total\">\r\n            <span>Total:</span>\r\n            <span>{formatPrice(calculateTotalPrice())} PKR</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <button \r\n        className={`confirm-btn ${isConfirming ? 'confirming' : ''}`}\r\n        onClick={handleConfirmBooking}\r\n        disabled={!hasSelection}\r\n      >\r\n        {isConfirming ? 'Processing...' : (\r\n          <>\r\n            Confirm Booking {formatPrice(calculateTotalPrice())} PKR <FaLongArrowAltRight />\r\n          </>\r\n        )}\r\n      </button>\r\n      \r\n      {!hasSelection && (\r\n        <p className=\"selection-note\">Please select at least one option before confirming.</p>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default BookingOptions;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAO,sBAAsB;AAC7B,SAASC,MAAM,EAAEC,WAAW,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,gBAAgB;AAClF,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,YAAY,EAAEC,UAAU,EAAEC,WAAW,QAAQ,gBAAgB;AAEtE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,QAAQ,GAAGf,WAA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","ignoreList":[]},"metadata":{},"sourceType":"module"}