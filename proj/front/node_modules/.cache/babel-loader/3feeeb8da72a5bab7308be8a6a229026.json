{"ast":null,"code":"/*\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport LoginForm from './components/LoginForm/Login';\r\nimport SignupForm from './components/SignupForm/Signup';\r\nimport Home from './components/HomePage/Homepage';\r\nimport HeroSection from \"./components/HomePage/HeroSection\";\r\nimport City from \"./components/CityPage/City\";\r\nimport CityPage from './components/CityPage/CityPage';\r\nimport Footer from './components/CityPage/Footer';\r\nimport PlanSelection from './components/HomePage/PlanSelection';\r\nimport MiloChatbot from './components/ChatbotPage/MiloChatbot';\r\nimport Challenges from \"./components/HomePage/Challenges\";\r\nimport CrosswordGrid from \"./components/HomePage/CrosswordGrid\";\r\nimport Quiz from \"./components/HomePage/quiz\"; \r\nimport ItineraryForm from \"./components/RecommendationForm/ItineraryForm\";\r\nimport CheckoutPage from \"./components/CheckoutPage/CheckoutPage\";\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport './App.css';\r\nimport TripDetails from \"./components/HomePage/PreplannedTrip/Tripdetail\";\r\nimport AllTrips from \"./components/HomePage/PreplannedTrip/AllTrips\";\r\nimport ToursSection from \"./components/HomePage/PreplannedTrip/ToursSection\";\r\nimport UserCustomization from \"./components/Booking/UserCustomization/UserCustomization\"\r\nimport BookingOptions from \"./components/Booking/BookingOptions\"\r\nimport BookHotel from \"./components/Booking/BookHotel\";\r\nimport BookTransport from \"./components/Booking/BookTransport\";\r\nimport Hotel from \"./components/HotelsPage/Hotels\";\r\nimport Restaurants from \"./components/RestaurantsPage/Restaurants\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport UserProfile from \"./components/UserProfile/Profile\";\r\nimport LoadingScreen from \"./components/Loader/LoadingScreen\";\r\nimport ChekoutPage from \"./components/ChekoutPage/ChekoutPage\";\r\nimport Confirmation from \"./components/Confirmation/Confirmation\"; \r\nconst stripePromise = loadStripe('pk_test_51MqErmDG40mBr38yGJ5Efis4h3Sy1yPqbDVzGI0cVtt8t4dPVgK2B8nUf7pTJzhuY5I6JnI8Qpn1yReQRT9M5KL000i6zT7fco');\r\n\r\nfunction App() {\r\n  const [points, setPoints] = useState(0); // State to track total points\r\n\r\n  // Callback to handle points received from Quiz\r\n  const handlePointsUpdate = (earnedPoints) => {\r\n    console.log(\"Points received from Quiz:\", earnedPoints); // Log the points for debugging\r\n    setPoints((prevPoints) => prevPoints + earnedPoints); // Update points\r\n  };\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className=\"main-content\">\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/login\" element={<LoginForm />} />\r\n            <Route path=\"/signup\" element={<SignupForm />} />\r\n            <Route path=\"/city\" element={<City />} /> \r\n            <Route path=\"/city/:cityName\" element={<CityPageWrapper />} />\r\n            <Route path=\"/restaurants\" element={<Restaurants />} />\r\n            <Route path=\"/UserCustomization\" element={<UserCustomization/>}/>\r\n            <Route path=\"/bookoption\" element={<BookingOptions/>}  />\r\n            <Route path=\"/BookHotel\" element={<BookHotel/> } />\r\n            <Route path=\"/BookTransport\" element={<BookTransport/>} />\r\n            <Route path=\"/PlanSelection\" element={<PlanSelection />} />\r\n            <Route path=\"/MiloChatbot\" element={<MiloChatbot />} /> \r\n            <Route path=\"/form-plan\" element={<ItineraryForm />} />\r\n            <Route path=\"/\" element={<Challenges />} />\r\n            <Route path=\"/crossword\" element={<CrosswordGrid />} />\r\n            <Route path=\"/hotels\" element={<Hotel />} />\r\n            <Route path=\"/profile\" element={<UserProfile />} />\r\n            <Route\r\n              path=\"/quiz\"\r\n              element={<Quiz onPointsUpdate={handlePointsUpdate} />} // Pass callback to Quiz\r\n            />\r\n            <Route path=\"/\" element={<ToursSection />} />\r\n             <Route path=\"/all-trips\" element={<AllTrips />} />\r\n            <Route path=\"/trip-details\" element={<TripDetails />} />\r\n            <Route \r\n              path=\"/checkout\" \r\n              element={\r\n                <Elements stripe={stripePromise}>\r\n                  <CheckoutPage />\r\n                </Elements>\r\n              } \r\n            />\r\n            <Route path =\"/cart\" element = {<Cart/>} ></Route>\r\n\r\n          </Routes>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// Wrapper component to handle city name from both URL params and state\r\nconst CityPageWrapper = () => {\r\n  const location = useLocation();\r\n  const cityName = location.state?.cityName || 'Islamabad'; // Default to Islamabad if no city specified\r\n\r\n  return <CityPage cityName={cityName} />;\r\n};\r\n\r\nconst ConditionalFooter = () => {\r\n  const location = useLocation();\r\n  const excludedRoutes = [\"/login\", \"/signup\"]; // Exclude on login/signup pages\r\n\r\n  return !excludedRoutes.includes(location.pathname) ? <Footer /> : null;\r\n};\r\n\r\nexport default App;\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/App.js"],"sourcesContent":["/*\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport LoginForm from './components/LoginForm/Login';\r\nimport SignupForm from './components/SignupForm/Signup';\r\nimport Home from './components/HomePage/Homepage';\r\nimport HeroSection from \"./components/HomePage/HeroSection\";\r\nimport City from \"./components/CityPage/City\";\r\nimport CityPage from './components/CityPage/CityPage';\r\nimport Footer from './components/CityPage/Footer';\r\nimport PlanSelection from './components/HomePage/PlanSelection';\r\nimport MiloChatbot from './components/ChatbotPage/MiloChatbot';\r\nimport Challenges from \"./components/HomePage/Challenges\";\r\nimport CrosswordGrid from \"./components/HomePage/CrosswordGrid\";\r\nimport Quiz from \"./components/HomePage/quiz\"; \r\nimport ItineraryForm from \"./components/RecommendationForm/ItineraryForm\";\r\nimport CheckoutPage from \"./components/CheckoutPage/CheckoutPage\";\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport './App.css';\r\nimport TripDetails from \"./components/HomePage/PreplannedTrip/Tripdetail\";\r\nimport AllTrips from \"./components/HomePage/PreplannedTrip/AllTrips\";\r\nimport ToursSection from \"./components/HomePage/PreplannedTrip/ToursSection\";\r\nimport UserCustomization from \"./components/Booking/UserCustomization/UserCustomization\"\r\nimport BookingOptions from \"./components/Booking/BookingOptions\"\r\nimport BookHotel from \"./components/Booking/BookHotel\";\r\nimport BookTransport from \"./components/Booking/BookTransport\";\r\nimport Hotel from \"./components/HotelsPage/Hotels\";\r\nimport Restaurants from \"./components/RestaurantsPage/Restaurants\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport UserProfile from \"./components/UserProfile/Profile\";\r\nimport LoadingScreen from \"./components/Loader/LoadingScreen\";\r\nimport ChekoutPage from \"./components/ChekoutPage/ChekoutPage\";\r\nimport Confirmation from \"./components/Confirmation/Confirmation\"; \r\nconst stripePromise = loadStripe('pk_test_51MqErmDG40mBr38yGJ5Efis4h3Sy1yPqbDVzGI0cVtt8t4dPVgK2B8nUf7pTJzhuY5I6JnI8Qpn1yReQRT9M5KL000i6zT7fco');\r\n\r\nfunction App() {\r\n  const [points, setPoints] = useState(0); // State to track total points\r\n\r\n  // Callback to handle points received from Quiz\r\n  const handlePointsUpdate = (earnedPoints) => {\r\n    console.log(\"Points received from Quiz:\", earnedPoints); // Log the points for debugging\r\n    setPoints((prevPoints) => prevPoints + earnedPoints); // Update points\r\n  };\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className=\"main-content\">\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/login\" element={<LoginForm />} />\r\n            <Route path=\"/signup\" element={<SignupForm />} />\r\n            <Route path=\"/city\" element={<City />} /> \r\n            <Route path=\"/city/:cityName\" element={<CityPageWrapper />} />\r\n            <Route path=\"/restaurants\" element={<Restaurants />} />\r\n            <Route path=\"/UserCustomization\" element={<UserCustomization/>}/>\r\n            <Route path=\"/bookoption\" element={<BookingOptions/>}  />\r\n            <Route path=\"/BookHotel\" element={<BookHotel/> } />\r\n            <Route path=\"/BookTransport\" element={<BookTransport/>} />\r\n            <Route path=\"/PlanSelection\" element={<PlanSelection />} />\r\n            <Route path=\"/MiloChatbot\" element={<MiloChatbot />} /> \r\n            <Route path=\"/form-plan\" element={<ItineraryForm />} />\r\n            <Route path=\"/\" element={<Challenges />} />\r\n            <Route path=\"/crossword\" element={<CrosswordGrid />} />\r\n            <Route path=\"/hotels\" element={<Hotel />} />\r\n            <Route path=\"/profile\" element={<UserProfile />} />\r\n            <Route\r\n              path=\"/quiz\"\r\n              element={<Quiz onPointsUpdate={handlePointsUpdate} />} // Pass callback to Quiz\r\n            />\r\n            <Route path=\"/\" element={<ToursSection />} />\r\n             <Route path=\"/all-trips\" element={<AllTrips />} />\r\n            <Route path=\"/trip-details\" element={<TripDetails />} />\r\n            <Route \r\n              path=\"/checkout\" \r\n              element={\r\n                <Elements stripe={stripePromise}>\r\n                  <CheckoutPage />\r\n                </Elements>\r\n              } \r\n            />\r\n            <Route path =\"/cart\" element = {<Cart/>} ></Route>\r\n\r\n          </Routes>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// Wrapper component to handle city name from both URL params and state\r\nconst CityPageWrapper = () => {\r\n  const location = useLocation();\r\n  const cityName = location.state?.cityName || 'Islamabad'; // Default to Islamabad if no city specified\r\n\r\n  return <CityPage cityName={cityName} />;\r\n};\r\n\r\nconst ConditionalFooter = () => {\r\n  const location = useLocation();\r\n  const excludedRoutes = [\"/login\", \"/signup\"]; // Exclude on login/signup pages\r\n\r\n  return !excludedRoutes.includes(location.pathname) ? <Footer /> : null;\r\n};\r\n\r\nexport default App;\r\n*/\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}