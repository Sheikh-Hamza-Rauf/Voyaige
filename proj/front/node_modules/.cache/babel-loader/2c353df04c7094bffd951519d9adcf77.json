{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import hotelData from \"./images/clean_hotel_data.json\";\n// import \"./BookHotel.css\";\n// import defaultImage from \"./images/hotel.jpg\";\n// import Navbar from \"../NavBar/Navbar\";\n\n// const ConfirmationModal = ({ hotel, onConfirm, onCancel }) => {\n//   return (\n//     <div className=\"confirmation-modal\">\n//       <div className=\"modal-content\">\n//         <h2>Confirm Booking</h2>\n//         <p>Are you sure you want to book <strong>{hotel.name}</strong>?</p>\n//         <p><strong>Price:</strong> {hotel.price} Rs per night</p>\n//         <div className=\"modal-buttons\">\n//           <button className=\"confirm-btn\" onClick={onConfirm}>Yes, Book Now</button>\n//           <button className=\"cancel-btn\" onClick={onCancel}>Cancel</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const BookHotel = () => {\n//   const [hotels, setHotels] = useState([]);\n//   const [selectedHotel, setSelectedHotel] = useState(null);\n//   const [filter, setFilter] = useState({ name: \"\", price: \"\", city: \"\", sort: \"rating\" });\n//   const [showConfirmation, setShowConfirmation] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const hotelsWithRatings = hotelData.map((hotel) => ({\n//       ...hotel,\n//       rating: (Math.random() * (5 - 3.5) + 3).toFixed(1),\n//     }));\n//     setHotels(hotelsWithRatings);\n//   }, []);\n\n//   const filteredHotels = hotels\n//     .filter(hotel =>\n//       (filter.name ? hotel.name.toLowerCase().includes(filter.name.toLowerCase()) : true) &&\n//       (filter.city ? hotel.city.toLowerCase().includes(filter.city.toLowerCase()) : true) &&\n//       (filter.price ? hotel.price <= filter.price : true)\n//     )\n//     .sort((a, b) => (filter.sort === \"price\" ? b.price - a.price : b.rating - a.rating));\n\n//   const handleHotelSelect = (hotel) => {\n//     setSelectedHotel(hotel);\n//   };\n\n//   const handleClosePopUp = () => {\n//     setSelectedHotel(null);\n//   };\n\n//   const handleBooking = () => {\n//     setShowConfirmation(true);\n//   };\n\n//   const confirmBooking = () => {\n//     localStorage.setItem(\"selectedHotel\", JSON.stringify(selectedHotel));\n//     setShowConfirmation(false);\n//     navigate(\"/bookoption\");\n//   };\n\n//   return (\n//     <div className=\"book-hotel-container\">\n//       <Navbar />\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/bookoption\")}>←</div>\n\n//       <div className=\"trans\">\n//         <h2>Book a Hotel</h2>\n\n//         <div className=\"filters\">\n//           <input type=\"text\" placeholder=\"Hotel Name\" value={filter.name} onChange={(e) => setFilter({ ...filter, name: e.target.value })} />\n//           <input type=\"text\" placeholder=\"Filter by city\" value={filter.city} onChange={(e) => setFilter({ ...filter, city: e.target.value })} />\n//           <input type=\"number\" placeholder=\"Max price\" value={filter.price} onChange={(e) => setFilter({ ...filter, price: e.target.value })} />\n//           <select value={filter.sort} onChange={(e) => setFilter({ ...filter, sort: e.target.value })}>\n//             <option value=\"rating\">Sort by Rating</option>\n//             <option value=\"price\">Sort by Price</option>\n//           </select>\n//         </div>\n\n//         <div className=\"hotel-list\">\n//           {filteredHotels.map((hotel) => (\n//             <div className=\"hotel-card\" key={hotel.id} onClick={() => handleHotelSelect(hotel)}>\n//               <img src={(hotel.images && hotel.images[0]) || defaultImage} alt={hotel.name} className=\"hotel-image\" />\n//               <h3>{hotel.name}</h3>\n//               <p>Rating: {hotel.rating} / 5</p>\n//               <p>Price: {hotel.price}Rs per night</p>\n//               <button className=\"book-btn\">Book</button>\n//             </div>\n//           ))}\n//         </div>\n\n//         {selectedHotel && (\n//           <div className=\"hotel-popup\">\n//             <div className=\"popup-content\">\n//               <button className=\"close-btn\" onClick={handleClosePopUp}>&times;</button>\n//               <h2>{selectedHotel.name}</h2>\n//               <div className=\"popup-images\">\n//                 {selectedHotel.images && selectedHotel.images.slice(0, 2).map((img, index) => (\n//                   <img key={index} src={img || defaultImage} alt={`Hotel ${index + 1}`} className=\"popup-image\" />\n//                 ))}\n//               </div>\n//               <p><strong>About:</strong> {selectedHotel.description || \"No description available\"}</p>\n//               <p><strong>Location:</strong> {selectedHotel.city}</p>\n//               <p><strong>Address:</strong> {selectedHotel.address || \"Not available\"}</p>\n//               <p><strong>Price:</strong> {selectedHotel.price}Rs per night</p>\n//               <p><strong>Rating:</strong> {selectedHotel.rating} / 5</p>\n//               <p><strong>Facilities:</strong> {selectedHotel.facilities ? selectedHotel.facilities.join(\", \") : \"No facilities listed\"}</p>\n//               <button className=\"book-btn\" onClick={handleBooking}>Book Now</button>\n//             </div>\n//           </div>\n//         )}\n\n//         {showConfirmation && selectedHotel && (\n//           <ConfirmationModal\n//             hotel={selectedHotel}\n//             onConfirm={confirmBooking}\n//             onCancel={() => setShowConfirmation(false)}\n//           />\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookHotel;","map":{"version":3,"names":[],"sources":["F:/Web/Voyaige/Voyaige/proj/front/src/components/Booking/BookHotel.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import hotelData from \"./images/clean_hotel_data.json\";\r\n// import \"./BookHotel.css\";\r\n// import defaultImage from \"./images/hotel.jpg\";\r\n// import Navbar from \"../NavBar/Navbar\";\r\n\r\n// const ConfirmationModal = ({ hotel, onConfirm, onCancel }) => {\r\n//   return (\r\n//     <div className=\"confirmation-modal\">\r\n//       <div className=\"modal-content\">\r\n//         <h2>Confirm Booking</h2>\r\n//         <p>Are you sure you want to book <strong>{hotel.name}</strong>?</p>\r\n//         <p><strong>Price:</strong> {hotel.price} Rs per night</p>\r\n//         <div className=\"modal-buttons\">\r\n//           <button className=\"confirm-btn\" onClick={onConfirm}>Yes, Book Now</button>\r\n//           <button className=\"cancel-btn\" onClick={onCancel}>Cancel</button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const BookHotel = () => {\r\n//   const [hotels, setHotels] = useState([]);\r\n//   const [selectedHotel, setSelectedHotel] = useState(null);\r\n//   const [filter, setFilter] = useState({ name: \"\", price: \"\", city: \"\", sort: \"rating\" });\r\n//   const [showConfirmation, setShowConfirmation] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const hotelsWithRatings = hotelData.map((hotel) => ({\r\n//       ...hotel,\r\n//       rating: (Math.random() * (5 - 3.5) + 3).toFixed(1),\r\n//     }));\r\n//     setHotels(hotelsWithRatings);\r\n//   }, []);\r\n\r\n//   const filteredHotels = hotels\r\n//     .filter(hotel =>\r\n//       (filter.name ? hotel.name.toLowerCase().includes(filter.name.toLowerCase()) : true) &&\r\n//       (filter.city ? hotel.city.toLowerCase().includes(filter.city.toLowerCase()) : true) &&\r\n//       (filter.price ? hotel.price <= filter.price : true)\r\n//     )\r\n//     .sort((a, b) => (filter.sort === \"price\" ? b.price - a.price : b.rating - a.rating));\r\n\r\n//   const handleHotelSelect = (hotel) => {\r\n//     setSelectedHotel(hotel);\r\n//   };\r\n\r\n//   const handleClosePopUp = () => {\r\n//     setSelectedHotel(null);\r\n//   };\r\n\r\n//   const handleBooking = () => {\r\n//     setShowConfirmation(true);\r\n//   };\r\n\r\n//   const confirmBooking = () => {\r\n//     localStorage.setItem(\"selectedHotel\", JSON.stringify(selectedHotel));\r\n//     setShowConfirmation(false);\r\n//     navigate(\"/bookoption\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"book-hotel-container\">\r\n//       <Navbar />\r\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/bookoption\")}>←</div>\r\n\r\n//       <div className=\"trans\">\r\n//         <h2>Book a Hotel</h2>\r\n\r\n//         <div className=\"filters\">\r\n//           <input type=\"text\" placeholder=\"Hotel Name\" value={filter.name} onChange={(e) => setFilter({ ...filter, name: e.target.value })} />\r\n//           <input type=\"text\" placeholder=\"Filter by city\" value={filter.city} onChange={(e) => setFilter({ ...filter, city: e.target.value })} />\r\n//           <input type=\"number\" placeholder=\"Max price\" value={filter.price} onChange={(e) => setFilter({ ...filter, price: e.target.value })} />\r\n//           <select value={filter.sort} onChange={(e) => setFilter({ ...filter, sort: e.target.value })}>\r\n//             <option value=\"rating\">Sort by Rating</option>\r\n//             <option value=\"price\">Sort by Price</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div className=\"hotel-list\">\r\n//           {filteredHotels.map((hotel) => (\r\n//             <div className=\"hotel-card\" key={hotel.id} onClick={() => handleHotelSelect(hotel)}>\r\n//               <img src={(hotel.images && hotel.images[0]) || defaultImage} alt={hotel.name} className=\"hotel-image\" />\r\n//               <h3>{hotel.name}</h3>\r\n//               <p>Rating: {hotel.rating} / 5</p>\r\n//               <p>Price: {hotel.price}Rs per night</p>\r\n//               <button className=\"book-btn\">Book</button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         {selectedHotel && (\r\n//           <div className=\"hotel-popup\">\r\n//             <div className=\"popup-content\">\r\n//               <button className=\"close-btn\" onClick={handleClosePopUp}>&times;</button>\r\n//               <h2>{selectedHotel.name}</h2>\r\n//               <div className=\"popup-images\">\r\n//                 {selectedHotel.images && selectedHotel.images.slice(0, 2).map((img, index) => (\r\n//                   <img key={index} src={img || defaultImage} alt={`Hotel ${index + 1}`} className=\"popup-image\" />\r\n//                 ))}\r\n//               </div>\r\n//               <p><strong>About:</strong> {selectedHotel.description || \"No description available\"}</p>\r\n//               <p><strong>Location:</strong> {selectedHotel.city}</p>\r\n//               <p><strong>Address:</strong> {selectedHotel.address || \"Not available\"}</p>\r\n//               <p><strong>Price:</strong> {selectedHotel.price}Rs per night</p>\r\n//               <p><strong>Rating:</strong> {selectedHotel.rating} / 5</p>\r\n//               <p><strong>Facilities:</strong> {selectedHotel.facilities ? selectedHotel.facilities.join(\", \") : \"No facilities listed\"}</p>\r\n//               <button className=\"book-btn\" onClick={handleBooking}>Book Now</button>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {showConfirmation && selectedHotel && (\r\n//           <ConfirmationModal\r\n//             hotel={selectedHotel}\r\n//             onConfirm={confirmBooking}\r\n//             onCancel={() => setShowConfirmation(false)}\r\n//           />\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookHotel;\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}