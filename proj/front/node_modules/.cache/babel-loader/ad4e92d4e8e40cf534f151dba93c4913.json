{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../NavBar/Navbar\";\nimport \"./MiloChatbot.css\";\nconst MiloChatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [isTyping, setIsTyping] = useState(false);\n  const [followUpStep, setFollowUpStep] = useState(null);\n  const [followUpData, setFollowUpData] = useState({});\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\n  useEffect(() => {\n    const initialMessages = [{\n      sender: \"bot\",\n      text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\"\n    }];\n    setMessages(initialMessages);\n  }, []);\n  const addLineBreaks = text => {\n    return text.split(\"\\n\").map((line, index) => /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, line, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    })));\n  };\n  const handleUserMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: userMessage\n    }]);\n    setHistory([userMessage, ...history]);\n    setInput(\"\");\n    setWelcomeVisible(false);\n    setIsTyping(true);\n\n    // Handle follow-up steps for itinerary generation\n    if (followUpStep) {\n      const updatedFollowUpData = {\n        ...followUpData\n      };\n      if (followUpStep === \"transport\") {\n        updatedFollowUpData.transport = userMessage;\n        if (userMessage.toLowerCase() === \"bus\" || userMessage.toLowerCase() === \"train\") {\n          setMessages(prev => [...prev, {\n            sender: \"milo\",\n            text: \"Bus or train can only be used for Day 1. For the remaining days, please choose a car.\"\n          }]);\n          setFollowUpStep(\"car\");\n          setFollowUpData(updatedFollowUpData);\n          setIsTyping(false);\n          return;\n        } else {\n          setFollowUpStep(\"budget\");\n          setFollowUpData(updatedFollowUpData);\n          setMessages(prev => [...prev, {\n            sender: \"milo\",\n            text: \"What is your budget?\"\n          }]);\n          setIsTyping(false);\n          return;\n        }\n      }\n      if (followUpStep === \"car\") {\n        updatedFollowUpData.car = userMessage;\n        setFollowUpStep(\"budget\");\n        setFollowUpData(updatedFollowUpData);\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"What is your budget?\"\n        }]);\n        setIsTyping(false);\n        return;\n      }\n      if (followUpStep === \"budget\") {\n        const budget = parseInt(userMessage, 10);\n        if (budget < 10000) {\n          setMessages(prev => [...prev, {\n            sender: \"milo\",\n            text: \"That's too little for a trip. Please provide a budget above 10,000.\"\n          }]);\n          setIsTyping(false);\n          return;\n        }\n        updatedFollowUpData.budget = budget;\n        setFollowUpStep(null);\n\n        // Send the complete itinerary request\n        const payload = {\n          user_input: \"generate itinerary\",\n          ...updatedFollowUpData\n        };\n        try {\n          const response = await fetch(`${apiBaseURL}/generate-itinerary`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(payload)\n          });\n          const data = await response.json();\n          const botResponse = data.response || \"I'm here to assist you!\";\n          setMessages(prev => [...prev, {\n            sender: \"milo\",\n            text: addLineBreaks(botResponse)\n          }]);\n        } catch (error) {\n          console.error(\"Error communicating with backend:\", error);\n          setMessages(prev => [...prev, {\n            sender: \"milo\",\n            text: \"Sorry, something went wrong. Please try again later.\"\n          }]);\n        } finally {\n          setIsTyping(false);\n        }\n        return;\n      }\n    }\n\n    // Handle initial itinerary planning message\n    if (userMessage.toLowerCase().includes(\"plan a trip\")) {\n      const userInputParts = userMessage.split(\" \");\n      const startingCity = userInputParts.includes(\"from\") ? userInputParts[userInputParts.indexOf(\"from\") + 1] : \"Islamabad\";\n      const destinationCity = userInputParts.includes(\"to\") ? userInputParts[userInputParts.indexOf(\"to\") + 1] : \"Lahore\";\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\n      setFollowUpStep(\"transport\");\n      setFollowUpData({\n        starting_city: startingCity,\n        destination_city: destinationCity,\n        days\n      });\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"What mode of transport would you like to use (Bus, Train, Car)?\"\n      }]);\n      setIsTyping(false);\n      return;\n    }\n\n    // Handle other messages\n    try {\n      const response = await fetch(`${apiBaseURL}/MiloChatbot`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_input: userMessage\n        })\n      });\n      const data = await response.json();\n      const botResponse = data.response || \"I'm here to assist you!\";\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: addLineBreaks(botResponse)\n      }]);\n    } catch (error) {\n      console.error(\"Error communicating with backend:\", error);\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Sorry, something went wrong. Please try again later.\"\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleUserMessage();\n    } else if (e.key === \"ArrowUp\") {\n      if (historyIndex < history.length - 1) {\n        const newIndex = historyIndex + 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(newIndex);\n      }\n    } else if (e.key === \"ArrowDown\") {\n      if (historyIndex > 0) {\n        const newIndex = historyIndex - 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(newIndex);\n      } else {\n        setInput(\"\");\n        setHistoryIndex(-1);\n      }\n    }\n  };\n  useEffect(() => {\n    const chatContainer = document.getElementById(\"chat-container\");\n    if (chatContainer) {\n      chatContainer.scrollTop = chatContainer.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }), welcomeVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Welcome to a chat with Milo, your personal smart AI trip planner.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"Click on the input bar to start the chat.\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chat-container\",\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat-bubble ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`))), isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-bubble milo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"Milo is typing...\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type your message here...\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyDown: handleKeyDown,\n    onFocus: () => setWelcomeVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","useEffect","Navbar","MiloChatbot","messages","setMessages","input","setInput","welcomeVisible","setWelcomeVisible","history","setHistory","historyIndex","setHistoryIndex","isTyping","setIsTyping","followUpStep","setFollowUpStep","followUpData","setFollowUpData","apiBaseURL","initialMessages","sender","text","addLineBreaks","split","map","line","index","createElement","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","handleUserMessage","trim","userMessage","prev","updatedFollowUpData","transport","toLowerCase","car","budget","parseInt","payload","user_input","response","fetch","method","headers","body","JSON","stringify","data","json","botResponse","error","console","includes","userInputParts","startingCity","indexOf","destinationCity","daysMatch","match","days","starting_city","destination_city","handleKeyDown","e","length","newIndex","chatContainer","document","getElementById","scrollTop","scrollHeight","className","id","msg","type","placeholder","value","onChange","target","onKeyDown","onFocus","onClick"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport \"./MiloChatbot.css\";\r\n\r\nconst MiloChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\r\n  const [history, setHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [followUpStep, setFollowUpStep] = useState(null);\r\n  const [followUpData, setFollowUpData] = useState({});\r\n\r\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\r\n\r\n  useEffect(() => {\r\n    const initialMessages = [\r\n      { sender: \"bot\", text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\" },\r\n    ];\r\n    setMessages(initialMessages);\r\n  }, []);\r\n\r\n  const addLineBreaks = (text) => {\r\n    return text.split(\"\\n\").map((line, index) => (\r\n      <span key={index}>\r\n        {line}\r\n        <br />\r\n      </span>\r\n    ));\r\n  };\r\n\r\n  const handleUserMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim();\r\n    setMessages((prev) => [...prev, { sender: \"user\", text: userMessage }]);\r\n    setHistory([userMessage, ...history]);\r\n    setInput(\"\");\r\n    setWelcomeVisible(false);\r\n    setIsTyping(true);\r\n\r\n    // Handle follow-up steps for itinerary generation\r\n    if (followUpStep) {\r\n      const updatedFollowUpData = { ...followUpData };\r\n\r\n      if (followUpStep === \"transport\") {\r\n        updatedFollowUpData.transport = userMessage;\r\n\r\n        if (userMessage.toLowerCase() === \"bus\" || userMessage.toLowerCase() === \"train\") {\r\n          setMessages((prev) => [\r\n            ...prev,\r\n            { sender: \"milo\", text: \"Bus or train can only be used for Day 1. For the remaining days, please choose a car.\" },\r\n          ]);\r\n          setFollowUpStep(\"car\");\r\n          setFollowUpData(updatedFollowUpData);\r\n          setIsTyping(false);\r\n          return;\r\n        } else {\r\n          setFollowUpStep(\"budget\");\r\n          setFollowUpData(updatedFollowUpData);\r\n          setMessages((prev) => [...prev, { sender: \"milo\", text: \"What is your budget?\" }]);\r\n          setIsTyping(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (followUpStep === \"car\") {\r\n        updatedFollowUpData.car = userMessage;\r\n        setFollowUpStep(\"budget\");\r\n        setFollowUpData(updatedFollowUpData);\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"What is your budget?\" }]);\r\n        setIsTyping(false);\r\n        return;\r\n      }\r\n\r\n      if (followUpStep === \"budget\") {\r\n        const budget = parseInt(userMessage, 10);\r\n        if (budget < 10000) {\r\n          setMessages((prev) => [\r\n            ...prev,\r\n            { sender: \"milo\", text: \"That's too little for a trip. Please provide a budget above 10,000.\" },\r\n          ]);\r\n          setIsTyping(false);\r\n          return;\r\n        }\r\n\r\n        updatedFollowUpData.budget = budget;\r\n        setFollowUpStep(null);\r\n\r\n        // Send the complete itinerary request\r\n        const payload = {\r\n          user_input: \"generate itinerary\",\r\n          ...updatedFollowUpData,\r\n        };\r\n\r\n        try {\r\n          const response = await fetch(`${apiBaseURL}/generate-itinerary`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(payload),\r\n          });\r\n          const data = await response.json();\r\n          const botResponse = data.response || \"I'm here to assist you!\";\r\n          setMessages((prev) => [...prev, { sender: \"milo\", text: addLineBreaks(botResponse) }]);\r\n        } catch (error) {\r\n          console.error(\"Error communicating with backend:\", error);\r\n          setMessages((prev) => [\r\n            ...prev,\r\n            { sender: \"milo\", text: \"Sorry, something went wrong. Please try again later.\" },\r\n          ]);\r\n        } finally {\r\n          setIsTyping(false);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Handle initial itinerary planning message\r\n    if (userMessage.toLowerCase().includes(\"plan a trip\")) {\r\n      const userInputParts = userMessage.split(\" \");\r\n      const startingCity = userInputParts.includes(\"from\")\r\n        ? userInputParts[userInputParts.indexOf(\"from\") + 1]\r\n        : \"Islamabad\";\r\n      const destinationCity = userInputParts.includes(\"to\")\r\n        ? userInputParts[userInputParts.indexOf(\"to\") + 1]\r\n        : \"Lahore\";\r\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\r\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\r\n\r\n      setFollowUpStep(\"transport\");\r\n      setFollowUpData({ starting_city: startingCity, destination_city: destinationCity, days });\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: \"What mode of transport would you like to use (Bus, Train, Car)?\" }]);\r\n      setIsTyping(false);\r\n      return;\r\n    }\r\n\r\n    // Handle other messages\r\n    try {\r\n      const response = await fetch(`${apiBaseURL}/MiloChatbot`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ user_input: userMessage }),\r\n      });\r\n      const data = await response.json();\r\n      const botResponse = data.response || \"I'm here to assist you!\";\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: addLineBreaks(botResponse) }]);\r\n    } catch (error) {\r\n      console.error(\"Error communicating with backend:\", error);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"milo\", text: \"Sorry, something went wrong. Please try again later.\" },\r\n      ]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleUserMessage();\r\n    } else if (e.key === \"ArrowUp\") {\r\n      if (historyIndex < history.length - 1) {\r\n        const newIndex = historyIndex + 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      }\r\n    } else if (e.key === \"ArrowDown\") {\r\n      if (historyIndex > 0) {\r\n        const newIndex = historyIndex - 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      } else {\r\n        setInput(\"\");\r\n        setHistoryIndex(-1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const chatContainer = document.getElementById(\"chat-container\");\r\n    if (chatContainer) {\r\n      chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <Navbar />\r\n      {welcomeVisible && (\r\n        <div className=\"welcome-message\">\r\n          <p>Welcome to a chat with Milo, your personal smart AI trip planner.</p>\r\n          <p>Click on the input bar to start the chat.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div id=\"chat-container\" className=\"chat-container\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\r\n            <span>{msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`}</span>\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"chat-bubble milo\">\r\n            <span>Milo is typing...</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          onFocus={() => setWelcomeVisible(false)}\r\n        />\r\n        <button onClick={handleUserMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}