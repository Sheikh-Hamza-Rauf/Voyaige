{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\HotelsPage\\\\Hotels.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport hotelData from \"./clean_hotel_data.json\";\nimport \"./Hotels.css\";\nimport NavBar from \"../NavBar/Navbar\";\n\n// List of local images to randomize\nconst hotelImages = [require(\"./hotel.jpg\")];\nconst getRandomImage = () => {\n  return hotelImages[Math.floor(Math.random() * hotelImages.length)];\n};\nconst Hotels = () => {\n  const [hotelsByCity, setHotelsByCity] = useState({});\n  const [ratings, setRatings] = useState({});\n  useEffect(() => {\n    fetch(\"/ratings.csv\") // Ensure the correct file path\n    .then(response => response.text()).then(csvText => {\n      Papa.parse(csvText, {\n        header: true,\n        skipEmptyLines: true,\n        complete: result => {\n          const ratingsMap = {};\n          result.data.forEach(({\n            name,\n            rating,\n            category\n          }) => {\n            if (name && rating) {\n              ratingsMap[name.trim().toLowerCase()] = {\n                rating: parseFloat(rating) || 0,\n                category: category || \"N/A\"\n              };\n            }\n          });\n          console.log(\"Parsed Ratings: \", ratingsMap);\n          setRatings(ratingsMap);\n        }\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (Object.keys(ratings).length === 0) return;\n    const enrichedHotels = hotelData.map(hotel => {\n      var _ratings$hotelName, _ratings$hotelName2;\n      const hotelName = hotel.name.trim().toLowerCase();\n      return {\n        ...hotel,\n        rating: ((_ratings$hotelName = ratings[hotelName]) === null || _ratings$hotelName === void 0 ? void 0 : _ratings$hotelName.rating) || 0,\n        category: ((_ratings$hotelName2 = ratings[hotelName]) === null || _ratings$hotelName2 === void 0 ? void 0 : _ratings$hotelName2.category) || hotel.category || \"N/A\"\n      };\n    });\n    const groupedHotels = enrichedHotels.reduce((acc, hotel) => {\n      const city = hotel.city || \"Unknown City\";\n      if (!acc[city]) acc[city] = [];\n      acc[city].push(hotel);\n      return acc;\n    }, {});\n    Object.keys(groupedHotels).forEach(city => {\n      groupedHotels[city] = groupedHotels[city].sort((a, b) => b.rating - a.rating).slice(0, 5);\n    });\n    setHotelsByCity(groupedHotels);\n  }, [ratings]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotels-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), Object.entries(hotelsByCity).map(([city, hotels]) => /*#__PURE__*/React.createElement(\"div\", {\n    key: city,\n    className: \"city-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"city-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Hotels in \", city), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hotels-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, hotels.map(hotel => /*#__PURE__*/React.createElement(\"div\", {\n    key: hotel.id,\n    className: \"hotel-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: getRandomImage(),\n    alt: hotel.name,\n    className: \"hotel-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, hotel.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"\\u2B50 \", hotel.rating ? hotel.rating.toFixed(1) : \"N/A\", \" (\", hotel.category, \")\")))))));\n};\nexport default Hotels;","map":{"version":3,"names":["React","useState","useEffect","Papa","hotelData","NavBar","hotelImages","require","getRandomImage","Math","floor","random","length","Hotels","hotelsByCity","setHotelsByCity","ratings","setRatings","fetch","then","response","text","csvText","parse","header","skipEmptyLines","complete","result","ratingsMap","data","forEach","name","rating","category","trim","toLowerCase","parseFloat","console","log","Object","keys","enrichedHotels","map","hotel","_ratings$hotelName","_ratings$hotelName2","hotelName","groupedHotels","reduce","acc","city","push","sort","a","b","slice","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","entries","hotels","key","id","src","alt","toFixed"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/HotelsPage/Hotels.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport hotelData from \"./clean_hotel_data.json\";\r\nimport \"./Hotels.css\";\r\nimport NavBar from \"../NavBar/Navbar\";\r\n\r\n// List of local images to randomize\r\nconst hotelImages = [require(\"./hotel.jpg\")];\r\n\r\nconst getRandomImage = () => {\r\n  return hotelImages[Math.floor(Math.random() * hotelImages.length)];\r\n};\r\n\r\nconst Hotels = () => {\r\n  const [hotelsByCity, setHotelsByCity] = useState({});\r\n  const [ratings, setRatings] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"/ratings.csv\") // Ensure the correct file path\r\n      .then((response) => response.text())\r\n      .then((csvText) => {\r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          skipEmptyLines: true,\r\n          complete: (result) => {\r\n            const ratingsMap = {};\r\n            result.data.forEach(({ name, rating, category }) => {\r\n              if (name && rating) {\r\n                ratingsMap[name.trim().toLowerCase()] = {\r\n                  rating: parseFloat(rating) || 0,\r\n                  category: category || \"N/A\",\r\n                };\r\n              }\r\n            });\r\n            console.log(\"Parsed Ratings: \", ratingsMap);\r\n            setRatings(ratingsMap);\r\n          },\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(ratings).length === 0) return;\r\n\r\n    const enrichedHotels = hotelData.map((hotel) => {\r\n      const hotelName = hotel.name.trim().toLowerCase();\r\n      return {\r\n        ...hotel,\r\n        rating: ratings[hotelName]?.rating || 0,\r\n        category: ratings[hotelName]?.category || hotel.category || \"N/A\",\r\n      };\r\n    });\r\n\r\n    const groupedHotels = enrichedHotels.reduce((acc, hotel) => {\r\n      const city = hotel.city || \"Unknown City\";\r\n      if (!acc[city]) acc[city] = [];\r\n      acc[city].push(hotel);\r\n      return acc;\r\n    }, {});\r\n\r\n    Object.keys(groupedHotels).forEach((city) => {\r\n      groupedHotels[city] = groupedHotels[city]\r\n        .sort((a, b) => b.rating - a.rating)\r\n        .slice(0, 5);\r\n    });\r\n\r\n    setHotelsByCity(groupedHotels);\r\n  }, [ratings]);\r\n\r\n  return (\r\n    <div className=\"hotels-container\">\r\n      <NavBar />\r\n      {Object.entries(hotelsByCity).map(([city, hotels]) => (\r\n        <div key={city} className=\"city-section\">\r\n          <h2 className=\"city-title\">Hotels in {city}</h2>\r\n          <div className=\"hotels-row\">\r\n            {hotels.map((hotel) => (\r\n              <div key={hotel.id} className=\"hotel-card\">\r\n                <img src={getRandomImage()} alt={hotel.name} className=\"hotel-image\" />\r\n                <h3>{hotel.name}</h3>\r\n                <p>‚≠ê {hotel.rating ? hotel.rating.toFixed(1) : \"N/A\"} ({hotel.category})</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hotels;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}