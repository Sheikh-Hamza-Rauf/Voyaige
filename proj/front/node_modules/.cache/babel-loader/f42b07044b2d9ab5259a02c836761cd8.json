{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\project\\\\proj\\\\front\\\\src\\\\components\\\\NavBar\\\\Navbar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Navbar.css';\nimport logo from '../../assets/LOGO.png';\nconst NavBar = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkAuthentication = () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n      }\n    };\n\n    // Check auth on component mount\n    checkAuthentication();\n\n    // Add an event listener to detect when localStorage changes\n    window.addEventListener('storage', checkAuthentication);\n\n    // Clean up the event listener on component unmount\n    return () => {\n      window.removeEventListener('storage', checkAuthentication);\n    };\n  }, []); // Empty dependency array ensures this runs only once when the component mounts\n\n  const signOut = () => {\n    // Clear localStorage and reset authentication state\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"navbar-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Voyaige\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, isAuthenticated ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: signOut,\n    className: \"auth-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Log Out\") : /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    className: \"auth-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Sign In\")));\n};\nexport default NavBar;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","logo","NavBar","isAuthenticated","setIsAuthenticated","navigate","checkAuthentication","token","localStorage","getItem","window","addEventListener","removeEventListener","signOut","removeItem","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","onClick"],"sources":["F:/Web/project/proj/front/src/components/NavBar/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport logo from '../../assets/LOGO.png';\r\n\r\nconst NavBar = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkAuthentication = () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setIsAuthenticated(false);\r\n      }\r\n    };\r\n\r\n    // Check auth on component mount\r\n    checkAuthentication();\r\n\r\n    // Add an event listener to detect when localStorage changes\r\n    window.addEventListener('storage', checkAuthentication);\r\n\r\n    // Clean up the event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('storage', checkAuthentication);\r\n    };\r\n  }, []); // Empty dependency array ensures this runs only once when the component mounts\r\n\r\n  const signOut = () => {\r\n    // Clear localStorage and reset authentication state\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Link to=\"/\" className=\"navbar-logo\">\r\n        <img src={logo} alt=\"Logo\" />\r\n        <span className=\"navbar-name\">Voyaige</span>\r\n      </Link>\r\n      <div className=\"navbar-auth\">\r\n        {isAuthenticated ? (\r\n          <button onClick={signOut} className=\"auth-button\">Log Out</button>\r\n        ) : (\r\n          <Link to=\"/login\" className=\"auth-button\">Sign In</Link>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,cAAc;AACrB,OAAOC,IAAI,MAAM,uBAAuB;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMQ,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;MAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACTH,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,MAAM;QACLA,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC;;IAED;IACAE,mBAAmB,CAAC,CAAC;;IAErB;IACAI,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,mBAAmB,CAAC;;IAEvD;IACA,OAAO,MAAM;MACXI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,mBAAmB,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMO,OAAO,GAAGA,CAAA,KAAM;IACpB;IACAL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;IAC/BV,kBAAkB,CAAC,KAAK,CAAC;IACzBC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACET,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrB1B,KAAA,CAAAmB,aAAA,CAAChB,IAAI;IAACwB,EAAE,EAAC,GAAG;IAACP,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClC1B,KAAA,CAAAmB,aAAA;IAAKS,GAAG,EAAEvB,IAAK;IAACwB,GAAG,EAAC,MAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC7B1B,KAAA,CAAAmB,aAAA;IAAMC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAa,CACvC,CAAC,eACP1B,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzBnB,eAAe,gBACdP,KAAA,CAAAmB,aAAA;IAAQW,OAAO,EAAEb,OAAQ;IAACG,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAe,CAAC,gBAElE1B,KAAA,CAAAmB,aAAA,CAAChB,IAAI;IAACwB,EAAE,EAAC,QAAQ;IAACP,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAa,CAEtD,CACF,CAAC;AAEV,CAAC;AAED,eAAepB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}