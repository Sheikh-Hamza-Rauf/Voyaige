{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState } from 'react';\nimport NavBar from \"../\";\nimport './MiloChatbot.css';\nconst MiloChatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSendMessage = async () => {\n    if (!userInput.trim()) return; // Prevent sending empty messages\n\n    // Add user message\n    setMessages(prevMessages => [...prevMessages, {\n      text: userInput,\n      sender: 'user'\n    }]);\n    setIsLoading(true);\n    setUserInput('');\n\n    // Simulate bot response (you can replace this with your actual API call)\n    setTimeout(() => {\n      setMessages(prevMessages => [...prevMessages, {\n        text: 'I am the bot, how can I assist you?',\n        sender: 'bot'\n      }]);\n      setIsLoading(false);\n    }, 1000); // Simulated delay for bot response\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat-bubble ${message.sender === 'user' ? 'user-bubble' : 'bot-bubble'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, message.text)), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-bubble bot-bubble\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"chat-input\",\n    value: userInput,\n    onChange: e => setUserInput(e.target.value),\n    placeholder: \"Type a message...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"send-button\",\n    onClick: handleSendMessage,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","NavBar","MiloChatbot","messages","setMessages","userInput","setUserInput","isLoading","setIsLoading","handleSendMessage","trim","prevMessages","text","sender","setTimeout","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","key","type","value","onChange","e","target","placeholder","onClick","disabled"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport NavBar from \"../\";\r\nimport './MiloChatbot.css';\r\n\r\nconst MiloChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!userInput.trim()) return; // Prevent sending empty messages\r\n\r\n    // Add user message\r\n    setMessages((prevMessages) => [\r\n      ...prevMessages,\r\n      { text: userInput, sender: 'user' },\r\n    ]);\r\n\r\n    setIsLoading(true);\r\n    setUserInput('');\r\n\r\n    // Simulate bot response (you can replace this with your actual API call)\r\n    setTimeout(() => {\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { text: 'I am the bot, how can I assist you?', sender: 'bot' },\r\n      ]);\r\n      setIsLoading(false);\r\n    }, 1000); // Simulated delay for bot response\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Chat history area */}\r\n      <div className=\"chat-history\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chat-bubble ${message.sender === 'user' ? 'user-bubble' : 'bot-bubble'}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n        {isLoading && (\r\n          <div className=\"chat-bubble bot-bubble\">...</div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Chat input area */}\r\n      <div className=\"chat-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"chat-input\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button\r\n          className=\"send-button\"\r\n          onClick={handleSendMessage}\r\n          disabled={isLoading}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}