{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../NavBar/Navbar\";\nimport \"./MiloChatbot.css\";\nconst MiloChatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [isTyping, setIsTyping] = useState(false);\n  const apiBaseURL = \"http://127.0.0.1:5001/\"; // Replace with your Flask backend's URL\n\n  useEffect(() => {\n    const initialMessages = [{\n      sender: \"bot\",\n      message: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\"\n    }];\n    setMessages(initialMessages);\n  }, []);\n  const handleUserMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: userMessage\n    }]);\n    setHistory([userMessage, ...history]);\n    setInput(\"\");\n    setWelcomeVisible(false);\n    setIsTyping(true);\n    let endpoint = \"/MiloChatbot\";\n    let payload = {\n      user_input: userMessage\n    };\n    if (userMessage.toLowerCase().includes(\"generate itinerary\")) {\n      // Extract details dynamically\n      const userInputParts = userMessage.split(\" \");\n      const startingCity = userInputParts.includes(\"from\") ? userInputParts[userInputParts.indexOf(\"from\") + 1] : \"Islamabad\"; // Default or prompt for input\n      const destinationCity = userInputParts.includes(\"to\") ? userInputParts[userInputParts.indexOf(\"to\") + 1] : \"Lahore\"; // Default or prompt for input\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3; // Default to 3 days\n      const modeOfTransportMatch = userMessage.match(/by\\s+(\\w+)/);\n      const modeOfTransport = modeOfTransportMatch ? modeOfTransportMatch[1].toLowerCase() : \"bus\"; // Default to bus\n      const budgetMatch = userMessage.match(/budget\\s+(\\d+)/);\n      const budget = budgetMatch ? parseInt(budgetMatch[1], 10) : 50000; // Default to 50,000\n\n      endpoint = \"/generate-itinerary\";\n      payload = {\n        user_input: userMessage,\n        starting_city: startingCity,\n        destination_city: destinationCity,\n        days,\n        mode_of_transport: modeOfTransport,\n        budget\n      };\n    } else if (userMessage.toLowerCase().includes(\"tell me about\")) {\n      endpoint = \"/retrieve-details\";\n    } else if (userMessage.toLowerCase().includes(\"top\")) {\n      endpoint = \"/retrieve-top-items\";\n      payload.num_recommendations = 5;\n    } else if (userMessage.toLowerCase().includes(\"compare\")) {\n      endpoint = \"/compare-two-options\";\n    }\n    try {\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      console.log(\"Backend response:\", data); // Debugging: Log the backend response\n\n      const botResponse = typeof data.response === \"string\" ? data.response : JSON.stringify(data.response);\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: botResponse\n      }]);\n    } catch (error) {\n      console.error(\"Error communicating with backend:\", error);\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Sorry, something went wrong. Please try again later.\"\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleUserMessage();\n    } else if (e.key === \"ArrowUp\") {\n      if (historyIndex < history.length - 1) {\n        const newIndex = historyIndex + 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(newIndex);\n      }\n    } else if (e.key === \"ArrowDown\") {\n      if (historyIndex > 0) {\n        const newIndex = historyIndex - 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(newIndex);\n      } else {\n        setInput(\"\");\n        setHistoryIndex(-1);\n      }\n    }\n  };\n  useEffect(() => {\n    const chatContainer = document.getElementById(\"chat-container\");\n    if (chatContainer) {\n      chatContainer.scrollTop = chatContainer.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }), welcomeVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Welcome to a chat with Milo, your personal smart AI trip planner.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Click on the input bar to start the chat.\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chat-container\",\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat-bubble ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`))), isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-bubble milo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Milo is typing...\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type your message here...\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyDown: handleKeyDown,\n    onFocus: () => setWelcomeVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","useEffect","Navbar","MiloChatbot","messages","setMessages","input","setInput","welcomeVisible","setWelcomeVisible","history","setHistory","historyIndex","setHistoryIndex","isTyping","setIsTyping","apiBaseURL","initialMessages","sender","message","handleUserMessage","trim","userMessage","prev","text","endpoint","payload","user_input","toLowerCase","includes","userInputParts","split","startingCity","indexOf","destinationCity","daysMatch","match","days","parseInt","modeOfTransportMatch","modeOfTransport","budgetMatch","budget","starting_city","destination_city","mode_of_transport","num_recommendations","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","botResponse","error","handleKeyDown","e","key","length","newIndex","chatContainer","document","getElementById","scrollTop","scrollHeight","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","map","msg","index","type","placeholder","value","onChange","target","onKeyDown","onFocus","onClick"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../NavBar/Navbar\"\r\nimport \"./MiloChatbot.css\";\r\n\r\nconst MiloChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\r\n  const [history, setHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const apiBaseURL = \"http://127.0.0.1:5001/\"; // Replace with your Flask backend's URL\r\n\r\n  useEffect(() => {\r\n    const initialMessages = [\r\n      { sender: \"bot\", message: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\" },\r\n    ];\r\n    setMessages(initialMessages);\r\n  }, []);\r\n\r\n  const handleUserMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim();\r\n    setMessages((prev) => [...prev, { sender: \"user\", text: userMessage }]);\r\n    setHistory([userMessage, ...history]);\r\n    setInput(\"\");\r\n    setWelcomeVisible(false);\r\n    setIsTyping(true);\r\n\r\n    let endpoint = \"/MiloChatbot\";\r\n    let payload = { user_input: userMessage };\r\n\r\n    if (userMessage.toLowerCase().includes(\"generate itinerary\")) {\r\n      // Extract details dynamically\r\n      const userInputParts = userMessage.split(\" \");\r\n      const startingCity = userInputParts.includes(\"from\")\r\n        ? userInputParts[userInputParts.indexOf(\"from\") + 1]\r\n        : \"Islamabad\"; // Default or prompt for input\r\n      const destinationCity = userInputParts.includes(\"to\")\r\n        ? userInputParts[userInputParts.indexOf(\"to\") + 1]\r\n        : \"Lahore\"; // Default or prompt for input\r\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\r\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3; // Default to 3 days\r\n      const modeOfTransportMatch = userMessage.match(/by\\s+(\\w+)/);\r\n      const modeOfTransport = modeOfTransportMatch\r\n        ? modeOfTransportMatch[1].toLowerCase()\r\n        : \"bus\"; // Default to bus\r\n      const budgetMatch = userMessage.match(/budget\\s+(\\d+)/);\r\n      const budget = budgetMatch ? parseInt(budgetMatch[1], 10) : 50000; // Default to 50,000\r\n    \r\n      endpoint = \"/generate-itinerary\";\r\n      payload = {\r\n        user_input: userMessage,\r\n        starting_city: startingCity,\r\n        destination_city: destinationCity,\r\n        days,\r\n        mode_of_transport: modeOfTransport,\r\n        budget,\r\n      };\r\n    } else if (userMessage.toLowerCase().includes(\"tell me about\")) {\r\n      endpoint = \"/retrieve-details\";\r\n    } else if (userMessage.toLowerCase().includes(\"top\")) {\r\n      endpoint = \"/retrieve-top-items\";\r\n      payload.num_recommendations = 5;\r\n    } else if (userMessage.toLowerCase().includes(\"compare\")) {\r\n      endpoint = \"/compare-two-options\";\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n    \r\n      const data = await response.json();\r\n      console.log(\"Backend response:\", data); // Debugging: Log the backend response\r\n    \r\n     const botResponse = typeof data.response === \"string\" \r\n  ? data.response \r\n  : JSON.stringify(data.response);\r\n\r\nsetMessages((prev) => [...prev, { sender: \"milo\", text: botResponse }]);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error communicating with backend:\", error);\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: \"Sorry, something went wrong. Please try again later.\" }]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };  \r\n    \r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleUserMessage();\r\n    } else if (e.key === \"ArrowUp\") {\r\n      if (historyIndex < history.length - 1) {\r\n        const newIndex = historyIndex + 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      }\r\n    } else if (e.key === \"ArrowDown\") {\r\n      if (historyIndex > 0) {\r\n        const newIndex = historyIndex - 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      } else {\r\n        setInput(\"\");\r\n        setHistoryIndex(-1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const chatContainer = document.getElementById(\"chat-container\");\r\n    if (chatContainer) {\r\n      chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n    <Navbar />\r\n      {welcomeVisible && (\r\n        <div className=\"welcome-message\">\r\n          <p>Welcome to a chat with Milo, your personal smart AI trip planner.</p>\r\n          <p>Click on the input bar to start the chat.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div id=\"chat-container\" className=\"chat-container\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\r\n            <span>{msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`}</span>\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"chat-bubble milo\">\r\n            <span>Milo is typing...</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          onFocus={() => setWelcomeVisible(false)}\r\n        />\r\n        <button onClick={handleUserMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAO,mBAAmB;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMgB,UAAU,GAAG,wBAAwB,CAAC,CAAC;;EAE7Cf,SAAS,CAAC,MAAM;IACd,MAAMgB,eAAe,GAAG,CACtB;MAAEC,MAAM,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAgF,CAAC,CAC5G;IACDd,WAAW,CAACY,eAAe,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACd,KAAK,CAACe,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,WAAW,GAAGhB,KAAK,CAACe,IAAI,CAAC,CAAC;IAChChB,WAAW,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEL,MAAM,EAAE,MAAM;MAAEM,IAAI,EAAEF;IAAY,CAAC,CAAC,CAAC;IACvEX,UAAU,CAAC,CAACW,WAAW,EAAE,GAAGZ,OAAO,CAAC,CAAC;IACrCH,QAAQ,CAAC,EAAE,CAAC;IACZE,iBAAiB,CAAC,KAAK,CAAC;IACxBM,WAAW,CAAC,IAAI,CAAC;IAEjB,IAAIU,QAAQ,GAAG,cAAc;IAC7B,IAAIC,OAAO,GAAG;MAAEC,UAAU,EAAEL;IAAY,CAAC;IAEzC,IAAIA,WAAW,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;MAC5D;MACA,MAAMC,cAAc,GAAGR,WAAW,CAACS,KAAK,CAAC,GAAG,CAAC;MAC7C,MAAMC,YAAY,GAAGF,cAAc,CAACD,QAAQ,CAAC,MAAM,CAAC,GAChDC,cAAc,CAACA,cAAc,CAACG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAClD,WAAW,CAAC,CAAC;MACjB,MAAMC,eAAe,GAAGJ,cAAc,CAACD,QAAQ,CAAC,IAAI,CAAC,GACjDC,cAAc,CAACA,cAAc,CAACG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAChD,QAAQ,CAAC,CAAC;MACd,MAAME,SAAS,GAAGb,WAAW,CAACc,KAAK,CAAC,cAAc,CAAC;MACnD,MAAMC,IAAI,GAAGF,SAAS,GAAGG,QAAQ,CAACH,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;MACzD,MAAMI,oBAAoB,GAAGjB,WAAW,CAACc,KAAK,CAAC,YAAY,CAAC;MAC5D,MAAMI,eAAe,GAAGD,oBAAoB,GACxCA,oBAAoB,CAAC,CAAC,CAAC,CAACX,WAAW,CAAC,CAAC,GACrC,KAAK,CAAC,CAAC;MACX,MAAMa,WAAW,GAAGnB,WAAW,CAACc,KAAK,CAAC,gBAAgB,CAAC;MACvD,MAAMM,MAAM,GAAGD,WAAW,GAAGH,QAAQ,CAACG,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;;MAEnEhB,QAAQ,GAAG,qBAAqB;MAChCC,OAAO,GAAG;QACRC,UAAU,EAAEL,WAAW;QACvBqB,aAAa,EAAEX,YAAY;QAC3BY,gBAAgB,EAAEV,eAAe;QACjCG,IAAI;QACJQ,iBAAiB,EAAEL,eAAe;QAClCE;MACF,CAAC;IACH,CAAC,MAAM,IAAIpB,WAAW,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;MAC9DJ,QAAQ,GAAG,mBAAmB;IAChC,CAAC,MAAM,IAAIH,WAAW,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;MACpDJ,QAAQ,GAAG,qBAAqB;MAChCC,OAAO,CAACoB,mBAAmB,GAAG,CAAC;IACjC,CAAC,MAAM,IAAIxB,WAAW,CAACM,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;MACxDJ,QAAQ,GAAG,sBAAsB;IACnC;IAEA,IAAI;MACF,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhC,UAAU,GAAGS,QAAQ,EAAE,EAAE;QACvDwB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC3B,OAAO;MAC9B,CAAC,CAAC;MAEF,MAAM4B,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC,CAAC,CAAC;;MAEzC,MAAMI,WAAW,GAAG,OAAOJ,IAAI,CAACP,QAAQ,KAAK,QAAQ,GACtDO,IAAI,CAACP,QAAQ,GACbK,IAAI,CAACC,SAAS,CAACC,IAAI,CAACP,QAAQ,CAAC;MAEjC1C,WAAW,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEL,MAAM,EAAE,MAAM;QAAEM,IAAI,EAAEkC;MAAY,CAAC,CAAC,CAAC;IAEnE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDtD,WAAW,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEL,MAAM,EAAE,MAAM;QAAEM,IAAI,EAAE;MAAuD,CAAC,CAAC,CAAC;IACpH,CAAC,SAAS;MACRT,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAM6C,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrB1C,iBAAiB,CAAC,CAAC;IACrB,CAAC,MAAM,IAAIyC,CAAC,CAACC,GAAG,KAAK,SAAS,EAAE;MAC9B,IAAIlD,YAAY,GAAGF,OAAO,CAACqD,MAAM,GAAG,CAAC,EAAE;QACrC,MAAMC,QAAQ,GAAGpD,YAAY,GAAG,CAAC;QACjCL,QAAQ,CAACG,OAAO,CAACsD,QAAQ,CAAC,CAAC;QAC3BnD,eAAe,CAACmD,QAAQ,CAAC;MAC3B;IACF,CAAC,MAAM,IAAIH,CAAC,CAACC,GAAG,KAAK,WAAW,EAAE;MAChC,IAAIlD,YAAY,GAAG,CAAC,EAAE;QACpB,MAAMoD,QAAQ,GAAGpD,YAAY,GAAG,CAAC;QACjCL,QAAQ,CAACG,OAAO,CAACsD,QAAQ,CAAC,CAAC;QAC3BnD,eAAe,CAACmD,QAAQ,CAAC;MAC3B,CAAC,MAAM;QACLzD,QAAQ,CAAC,EAAE,CAAC;QACZM,eAAe,CAAC,CAAC,CAAC,CAAC;MACrB;IACF;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,MAAMgE,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IAC/D,IAAIF,aAAa,EAAE;MACjBA,aAAa,CAACG,SAAS,GAAGH,aAAa,CAACI,YAAY;IACtD;EACF,CAAC,EAAE,CAACjE,QAAQ,CAAC,CAAC;EAEd,oBACEL,KAAA,CAAAuE,aAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClC9E,KAAA,CAAAuE,aAAA,CAACpE,MAAM;IAAAsE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EACPrE,cAAc,iBACbT,KAAA,CAAAuE,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9B9E,KAAA,CAAAuE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,mEAAoE,CAAC,eACxE9E,KAAA,CAAAuE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,2CAA4C,CAC5C,CACN,eAED9E,KAAA,CAAAuE,aAAA;IAAKQ,EAAE,EAAC,gBAAgB;IAACP,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChDzE,QAAQ,CAAC2E,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBlF,KAAA,CAAAuE,aAAA;IAAKR,GAAG,EAAEmB,KAAM;IAACV,SAAS,EAAE,eAAeS,GAAG,CAAC9D,MAAM,EAAG;IAAAsD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtD9E,KAAA,CAAAuE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAOG,GAAG,CAAC9D,MAAM,KAAK,MAAM,GAAG,QAAQ8D,GAAG,CAACxD,IAAI,EAAE,GAAG,SAASwD,GAAG,CAACxD,IAAI,EAAS,CAC3E,CACN,CAAC,EACDV,QAAQ,iBACPf,KAAA,CAAAuE,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/B9E,KAAA,CAAAuE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,mBAAuB,CAC1B,CAEJ,CAAC,eAEN9E,KAAA,CAAAuE,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9B9E,KAAA,CAAAuE,aAAA;IACEY,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,2BAA2B;IACvCC,KAAK,EAAE9E,KAAM;IACb+E,QAAQ,EAAGxB,CAAC,IAAKtD,QAAQ,CAACsD,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;IAC1CG,SAAS,EAAE3B,aAAc;IACzB4B,OAAO,EAAEA,CAAA,KAAM/E,iBAAiB,CAAC,KAAK,CAAE;IAAA+D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzC,CAAC,eACF9E,KAAA,CAAAuE,aAAA;IAAQmB,OAAO,EAAErE,iBAAkB;IAAAoD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAY,CAC7C,CACF,CAAC;AAEV,CAAC;AAED,eAAe1E,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}