{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../NavBar/Navbar\";\nimport \"./MiloChatbot.css\";\nconst MiloChatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [isTyping, setIsTyping] = useState(false);\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\n  useEffect(() => {\n    const initialMessages = [{\n      sender: \"bot\",\n      text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\"\n    }];\n    setMessages(initialMessages);\n  }, []);\n  const handleUserMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: userMessage\n    }]);\n    setHistory([userMessage, ...history]);\n    setInput(\"\");\n    setWelcomeVisible(false);\n    setIsTyping(true);\n    let endpoint = \"/MiloChatbot\";\n    let payload = {\n      user_input: userMessage\n    };\n    if (/generate itinerary|plan a trip|form a plan|create a plan|create a trip/i.test(userMessage)) {\n      const userInputParts = userMessage.split(\" \");\n      const startingCity = userInputParts.includes(\"from\") ? userInputParts[userInputParts.indexOf(\"from\") + 1] : \"Islamabad\";\n      const destinationCity = userInputParts.includes(\"to\") ? userInputParts[userInputParts.indexOf(\"to\") + 1] : \"Lahore\";\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\n      endpoint = \"/generate-itinerary\";\n      payload = {\n        user_input: userMessage,\n        starting_city: startingCity,\n        destination_city: destinationCity,\n        days\n      };\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Generating itinerary...\"\n      }]);\n    } else if (/top|best/i.test(userMessage)) {\n      const match = userMessage.match(/top\\s+(\\d+)?\\s*(hotels|restaurants|attractions|airbnbs?)\\s+in\\s+([\\w\\s]+)/i);\n      if (match) {\n        const numRecommendations = parseInt(match[1], 10) || 5;\n        const category = match[2].toLowerCase();\n        const city = match[3].trim().toLowerCase();\n        endpoint = \"/retrieve-top-items\";\n        payload = {\n          user_input: userMessage,\n          num_recommendations: numRecommendations,\n          category,\n          city\n        };\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Fetching top items...\"\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Please specify what type of top information you need (e.g., 'top 5 hotels in Lahore').\"\n        }]);\n        setIsTyping(false);\n        return;\n      }\n    } else if (/tell me about|what is|describe|give details on|where is|give info on/i.test(userMessage)) {\n      endpoint = \"/retrieve-details\";\n    } else if (userMessage.toLowerCase().includes(\"compare\")) {\n      endpoint = \"/compare-two-options\";\n    }\n    try {\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      let botResponse;\n      console.log(\"Backend Response:\", data);\n      if (endpoint === \"/retrieve-details\" && data.result) {\n        botResponse = data.result.replace(/\\n/g, \"<br>\");\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: botResponse\n        }]);\n      } else if (endpoint === \"/retrieve-top-items\" && data.result) {\n        const recommendations = data.result.split(\"\\n\").map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"recommendation-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }\n        }, item));\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Here are the top recommendations:\"\n        }, {\n          sender: \"milo\",\n          content: recommendations\n        }]);\n      } else if (endpoint === \"/generate-itinerary\" && data.messages) {\n        const itineraryCards = data.messages.map((day, index) => /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"itinerary-day-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }\n        }, \"Day \", index + 1), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }\n        }, day)));\n        const totalCostCard = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"total-cost-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }\n        }, \"Total Cost\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }\n        }, \"Estimated total cost: $500\"), \" \");\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Generated itinerary is ready!\"\n        }, {\n          sender: \"milo\",\n          content: itineraryCards\n        }, {\n          sender: \"milo\",\n          content: totalCostCard\n        }]);\n      } else {\n        botResponse = \"I'm here to assist you!\";\n        if (!data || !data.messages) {\n          botResponse = \"Failed to generate itinerary. Please try again.\";\n        }\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: botResponse\n        }]);\n      }\n    } catch (error) {\n      console.error(\"Error communicating with backend:\", error);\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Sorry, something went wrong. Please try again later.\"\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleUserMessage();\n    } else if (e.key === \"ArrowUp\") {\n      if (historyIndex < history.length - 1) {\n        const newIndex = historyIndex + 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(newIndex);\n      }\n    } else if (e.key === \"ArrowDown\") {\n      if (historyIndex > 0) {\n        const newIndex = historyIndex - 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(-1);\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }), welcomeVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"Welcome to a chat with Milo, your personal smart AI Trip Planner!\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Click on the input bar to start the chat.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat-bubble ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, msg.content ? msg.content : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`))), isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-bubble milo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, \"Milo is typing...\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type your message here...\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyDown: handleKeyDown,\n    onFocus: () => setWelcomeVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","useEffect","Navbar","MiloChatbot","messages","setMessages","input","setInput","welcomeVisible","setWelcomeVisible","history","setHistory","historyIndex","setHistoryIndex","isTyping","setIsTyping","apiBaseURL","initialMessages","sender","text","handleUserMessage","trim","userMessage","prev","endpoint","payload","user_input","test","userInputParts","split","startingCity","includes","indexOf","destinationCity","daysMatch","match","days","parseInt","starting_city","destination_city","numRecommendations","category","toLowerCase","city","num_recommendations","response","fetch","method","headers","body","JSON","stringify","data","json","botResponse","console","log","result","replace","recommendations","map","item","index","createElement","key","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","content","itineraryCards","day","totalCostCard","error","handleKeyDown","e","length","newIndex","msg","type","placeholder","value","onChange","target","onKeyDown","onFocus","onClick"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport \"./MiloChatbot.css\";\r\n\r\nconst MiloChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\r\n  const [history, setHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\r\n\r\n  useEffect(() => {\r\n    const initialMessages = [\r\n      {\r\n        sender: \"bot\",\r\n        text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\",\r\n      },\r\n    ];\r\n    setMessages(initialMessages);\r\n  }, []);\r\n\r\n  const handleUserMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim();\r\n    setMessages((prev) => [...prev, { sender: \"user\", text: userMessage }]);\r\n    setHistory([userMessage, ...history]);\r\n    setInput(\"\");\r\n    setWelcomeVisible(false);\r\n    setIsTyping(true);\r\n\r\n    let endpoint = \"/MiloChatbot\";\r\n    let payload = { user_input: userMessage };\r\n\r\n    if (/generate itinerary|plan a trip|form a plan|create a plan|create a trip/i.test(userMessage)) {\r\n      const userInputParts = userMessage.split(\" \");\r\n      const startingCity = userInputParts.includes(\"from\")\r\n        ? userInputParts[userInputParts.indexOf(\"from\") + 1]\r\n        : \"Islamabad\";\r\n      const destinationCity = userInputParts.includes(\"to\")\r\n        ? userInputParts[userInputParts.indexOf(\"to\") + 1]\r\n        : \"Lahore\";\r\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\r\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\r\n\r\n      endpoint = \"/generate-itinerary\";\r\n      payload = {\r\n        user_input: userMessage,\r\n        starting_city: startingCity,\r\n        destination_city: destinationCity,\r\n        days,\r\n      };\r\n\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: \"Generating itinerary...\" }]);\r\n    } else if (/top|best/i.test(userMessage)) {\r\n      const match = userMessage.match(/top\\s+(\\d+)?\\s*(hotels|restaurants|attractions|airbnbs?)\\s+in\\s+([\\w\\s]+)/i);\r\n      if (match) {\r\n        const numRecommendations = parseInt(match[1], 10) || 5;\r\n        const category = match[2].toLowerCase();\r\n        const city = match[3].trim().toLowerCase();\r\n\r\n        endpoint = \"/retrieve-top-items\";\r\n        payload = {\r\n          user_input: userMessage,\r\n          num_recommendations: numRecommendations,\r\n          category,\r\n          city,\r\n        };\r\n\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"Fetching top items...\" }]);\r\n      } else {\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          {\r\n            sender: \"milo\",\r\n            text: \"Please specify what type of top information you need (e.g., 'top 5 hotels in Lahore').\",\r\n          },\r\n        ]);\r\n        setIsTyping(false);\r\n        return;\r\n      }\r\n    } else if (/tell me about|what is|describe|give details on|where is|give info on/i.test(userMessage)) {\r\n      endpoint = \"/retrieve-details\";\r\n    } else if (userMessage.toLowerCase().includes(\"compare\")) {\r\n      endpoint = \"/compare-two-options\";\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await response.json();\r\n\r\n      let botResponse;\r\n      console.log(\"Backend Response:\", data);\r\n\r\n      if (endpoint === \"/retrieve-details\" && data.result) {\r\n        botResponse = data.result.replace(/\\n/g, \"<br>\");\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: botResponse }]);\r\n      } else if (endpoint === \"/retrieve-top-items\" && data.result) {\r\n        const recommendations = data.result.split(\"\\n\").map((item, index) => (\r\n          <div key={index} className=\"recommendation-card\">\r\n            {item}\r\n          </div>\r\n        ));\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { sender: \"milo\", text: \"Here are the top recommendations:\" },\r\n          { sender: \"milo\", content: recommendations },\r\n        ]);\r\n      } else if (endpoint === \"/generate-itinerary\" && data.messages) {\r\n        const itineraryCards = data.messages.map((day, index) => (\r\n          <div key={index} className=\"itinerary-day-card\">\r\n            <h4>Day {index + 1}</h4>\r\n            <p>{day}</p>\r\n          </div>\r\n        ));\r\n        const totalCostCard = (\r\n          <div className=\"total-cost-card\">\r\n            <h4>Total Cost</h4>\r\n            <p>Estimated total cost: $500</p> {/* Replace with actual cost from backend if available */}\r\n          </div>\r\n        );\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { sender: \"milo\", text: \"Generated itinerary is ready!\" },\r\n          { sender: \"milo\", content: itineraryCards },\r\n          { sender: \"milo\", content: totalCostCard },\r\n        ]);\r\n      } else {\r\n        botResponse = \"I'm here to assist you!\";\r\n        if (!data || !data.messages) {\r\n          botResponse = \"Failed to generate itinerary. Please try again.\";\r\n        }\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: botResponse }]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error communicating with backend:\", error);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"milo\", text: \"Sorry, something went wrong. Please try again later.\" },\r\n      ]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleUserMessage();\r\n    } else if (e.key === \"ArrowUp\") {\r\n      if (historyIndex < history.length - 1) {\r\n        const newIndex = historyIndex + 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      }\r\n    } else if (e.key === \"ArrowDown\") {\r\n      if (historyIndex > 0) {\r\n        const newIndex = historyIndex - 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(-1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <Navbar />\r\n      {welcomeVisible && (\r\n        <div className=\"welcome-message\">\r\n          <h3>Welcome to a chat with Milo, your personal smart AI Trip Planner!</h3>\r\n          <h4>Click on the input bar to start the chat.</h4>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"chat-container\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\r\n            {msg.content ? (\r\n              msg.content\r\n            ) : (\r\n              <span>{msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`}</span>\r\n            )}\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"chat-bubble milo\">\r\n            <span>Milo is typing...</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          onFocus={() => setWelcomeVisible(false)}\r\n        />\r\n        <button onClick={handleUserMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiloChatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}