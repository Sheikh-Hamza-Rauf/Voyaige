{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../NavBar/Navbar\";\nimport \"./MiloChatbot.css\";\nconst MiloChatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [isTyping, setIsTyping] = useState(false);\n  const [rightContainerVisible, setRightContainerVisible] = useState(false);\n  const [itineraryData, setItineraryData] = useState([]);\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\n  useEffect(() => {\n    setMessages([{\n      sender: \"bot\",\n      text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\"\n    }]);\n  }, []);\n  const handleUserMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: userMessage\n    }]);\n    setHistory([userMessage, ...history]);\n    setInput(\"\");\n    setWelcomeVisible(false);\n    setIsTyping(true);\n    let endpoint = \"/MiloChatbot\";\n    let payload = {\n      user_input: userMessage\n    };\n    if (/generate itinerary|plan a trip|form a plan|create a trip/i.test(userMessage)) {\n      const userInputParts = userMessage.split(\" \");\n      const startingCity = userInputParts.includes(\"from\") ? userInputParts[userInputParts.indexOf(\"from\") + 1] : \"Islamabad\";\n      const destinationCity = userInputParts.includes(\"to\") ? userInputParts[userInputParts.indexOf(\"to\") + 1] : \"Lahore\";\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\n      endpoint = \"/generate-itinerary\";\n      payload = {\n        user_input: userMessage,\n        starting_city: startingCity,\n        destination_city: destinationCity,\n        days\n      };\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Generating itinerary...\"\n      }]);\n    } else if (/top|best/i.test(userMessage)) {\n      const match = userMessage.match(/top\\s+(\\d+)?\\s*(hotels|restaurants|attractions|airbnbs?)\\s+in\\s+([\\w\\s]+)/i);\n      if (match) {\n        const numRecommendations = parseInt(match[1], 10) || 5;\n        const category = match[2].toLowerCase();\n        const city = match[3].trim().toLowerCase();\n        endpoint = \"/retrieve-top-items\";\n        payload = {\n          user_input: userMessage,\n          num_recommendations: numRecommendations,\n          category,\n          city\n        };\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Fetching top items...\"\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Please specify what type of top information you need (e.g., 'top 5 hotels in Lahore').\"\n        }]);\n        setIsTyping(false);\n        return;\n      }\n    } else if (/tell me about|what is|describe|give details on|where is|give info on/i.test(userMessage)) {\n      endpoint = \"/retrieve-details\";\n    } else if (/compare/i.test(userMessage)) {\n      const match = userMessage.match(/compare\\s+([\\w\\s]+)\\s+with\\s+([\\w\\s]+)/i);\n      if (match) {\n        const option1 = match[1].trim();\n        const option2 = match[2].trim();\n        endpoint = \"/compare-two-options\";\n        payload = {\n          option1,\n          option2\n        };\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: `Comparing ${option1} with ${option2}...`\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Please specify two items to compare (e.g., 'compare Serena Hotel with Pearl Continental').\"\n        }]);\n        setIsTyping(false);\n        return;\n      }\n    }\n    try {\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) throw new Error(\"Server responded with an error\");\n      const data = await response.json();\n      let botResponse = \"I'm here to assist you!\";\n      if (endpoint === \"/retrieve-details\" && data.result) {\n        botResponse = data.result.replace(/\\n/g, \"<br>\");\n      } else if (endpoint === \"/retrieve-top-items\" && data.result) {\n        botResponse = \"Here are the top recommendations:\";\n        setRightContainerVisible(true);\n        setItineraryData(data.result.split(\"\\n\").filter(line => line.trim() !== \"\"));\n      } else if (endpoint === \"/generate-itinerary\" && data.response) {\n        botResponse = \"Generated itinerary is ready!\";\n        setRightContainerVisible(true);\n        setItineraryData(data.response.split(\"\\n\").filter(line => line.trim() !== \"\"));\n      } else if (endpoint === \"/compare-two-options\" && data.result) {\n        botResponse = data.result;\n      }\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: botResponse\n      }]);\n    } catch (error) {\n      console.error(\"Error communicating with backend:\", error);\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Sorry, something went wrong. Please try again later.\"\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleUserMessage();\n    } else if (e.key === \"ArrowUp\" && historyIndex < history.length - 1) {\n      setInput(history[historyIndex + 1]);\n      setHistoryIndex(historyIndex + 1);\n    } else if (e.key === \"ArrowDown\" && historyIndex > 0) {\n      setInput(history[historyIndex - 1]);\n      setHistoryIndex(historyIndex - 1);\n    }\n  };\n  const closeRightContainer = () => {\n    setRightContainerVisible(false);\n    setTimeout(() => setItineraryData([]), 300);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `chatbot-container ${rightContainerVisible ? \"shift-left\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Welcome to a chat with Milo, your personal smart AI Trip Planner!\"), welcomeVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 59\n    }\n  }, \"Click on the input bar to start the chat.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat-bubble ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`))), isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-bubble milo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 56\n    }\n  }, \"Milo is typing...\"))), rightContainerVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"itinerary-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-itinerary\",\n    onClick: closeRightContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Itinerary\"), itineraryData.map((line, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    className: \"itinerary-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 47\n    }\n  }, line))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type your message here...\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyDown: handleKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","useEffect","Navbar","MiloChatbot","messages","setMessages","input","setInput","welcomeVisible","setWelcomeVisible","history","setHistory","historyIndex","setHistoryIndex","isTyping","setIsTyping","rightContainerVisible","setRightContainerVisible","itineraryData","setItineraryData","apiBaseURL","sender","text","handleUserMessage","trim","userMessage","prev","endpoint","payload","user_input","test","userInputParts","split","startingCity","includes","indexOf","destinationCity","daysMatch","match","days","parseInt","starting_city","destination_city","numRecommendations","category","toLowerCase","city","num_recommendations","option1","option2","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","botResponse","result","replace","filter","line","error","console","handleKeyDown","e","key","length","closeRightContainer","setTimeout","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onClick","type","placeholder","value","onChange","target","onKeyDown"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport \"./MiloChatbot.css\";\r\n\r\nconst MiloChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\r\n  const [history, setHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [rightContainerVisible, setRightContainerVisible] = useState(false);\r\n  const [itineraryData, setItineraryData] = useState([]);\r\n  \r\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\r\n\r\n  useEffect(() => {\r\n    setMessages([{ sender: \"bot\", text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\" }]);\r\n  }, []);\r\n\r\n  const handleUserMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim();\r\n    setMessages((prev) => [...prev, { sender: \"user\", text: userMessage }]);\r\n    setHistory([userMessage, ...history]);\r\n    setInput(\"\");\r\n    setWelcomeVisible(false);\r\n    setIsTyping(true);\r\n\r\n    let endpoint = \"/MiloChatbot\";\r\n    let payload = { user_input: userMessage };\r\n\r\n    if (/generate itinerary|plan a trip|form a plan|create a trip/i.test(userMessage)) {\r\n        const userInputParts = userMessage.split(\" \");\r\n        const startingCity = userInputParts.includes(\"from\") ? userInputParts[userInputParts.indexOf(\"from\") + 1] : \"Islamabad\";\r\n        const destinationCity = userInputParts.includes(\"to\") ? userInputParts[userInputParts.indexOf(\"to\") + 1] : \"Lahore\";\r\n        const daysMatch = userMessage.match(/(\\d+)\\s+days/);\r\n        const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\r\n\r\n        endpoint = \"/generate-itinerary\";\r\n        payload = { user_input: userMessage, starting_city: startingCity, destination_city: destinationCity, days };\r\n\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"Generating itinerary...\" }]);\r\n    } \r\n    \r\n    else if (/top|best/i.test(userMessage)) {\r\n      const match = userMessage.match(/top\\s+(\\d+)?\\s*(hotels|restaurants|attractions|airbnbs?)\\s+in\\s+([\\w\\s]+)/i);\r\n      if (match) {\r\n        const numRecommendations = parseInt(match[1], 10) || 5;\r\n        const category = match[2].toLowerCase();\r\n        const city = match[3].trim().toLowerCase();\r\n\r\n        endpoint = \"/retrieve-top-items\";\r\n        payload = { user_input: userMessage, num_recommendations: numRecommendations, category, city };\r\n\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"Fetching top items...\" }]);\r\n      } else {\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"Please specify what type of top information you need (e.g., 'top 5 hotels in Lahore').\" }]);\r\n        setIsTyping(false);\r\n        return;\r\n      }\r\n    } \r\n    else if (/tell me about|what is|describe|give details on|where is|give info on/i.test(userMessage)) {\r\n      endpoint = \"/retrieve-details\";\r\n    } \r\n    else if (/compare/i.test(userMessage)) {\r\n      const match = userMessage.match(/compare\\s+([\\w\\s]+)\\s+with\\s+([\\w\\s]+)/i);\r\n      if (match) {\r\n        const option1 = match[1].trim();\r\n        const option2 = match[2].trim();\r\n        endpoint = \"/compare-two-options\";\r\n        payload = { option1, option2 };\r\n\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: `Comparing ${option1} with ${option2}...` }]);\r\n      } else {\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"Please specify two items to compare (e.g., 'compare Serena Hotel with Pearl Continental').\" }]);\r\n        setIsTyping(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Server responded with an error\");\r\n\r\n      const data = await response.json();\r\n      let botResponse = \"I'm here to assist you!\";\r\n\r\n      if (endpoint === \"/retrieve-details\" && data.result) {\r\n        botResponse = data.result.replace(/\\n/g, \"<br>\");\r\n      } \r\n      else if (endpoint === \"/retrieve-top-items\" && data.result) {\r\n        botResponse = \"Here are the top recommendations:\";\r\n        setRightContainerVisible(true);\r\n        setItineraryData(data.result.split(\"\\n\").filter((line) => line.trim() !== \"\"));\r\n      } \r\n      else if (endpoint === \"/generate-itinerary\" && data.response) {\r\n        botResponse = \"Generated itinerary is ready!\";\r\n        setRightContainerVisible(true);\r\n        setItineraryData(data.response.split(\"\\n\").filter((line) => line.trim() !== \"\"));\r\n      } \r\n      else if (endpoint === \"/compare-two-options\" && data.result) {\r\n        botResponse = data.result;\r\n      }\r\n\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: botResponse }]);\r\n    } \r\n    catch (error) {\r\n      console.error(\"Error communicating with backend:\", error);\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: \"Sorry, something went wrong. Please try again later.\" }]);\r\n    } \r\n    finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleUserMessage();\r\n    } \r\n    else if (e.key === \"ArrowUp\" && historyIndex < history.length - 1) {\r\n      setInput(history[historyIndex + 1]);\r\n      setHistoryIndex(historyIndex + 1);\r\n    } \r\n    else if (e.key === \"ArrowDown\" && historyIndex > 0) {\r\n      setInput(history[historyIndex - 1]);\r\n      setHistoryIndex(historyIndex - 1);\r\n    }\r\n  };\r\n\r\n  const closeRightContainer = () => {\r\n    setRightContainerVisible(false);\r\n    setTimeout(() => setItineraryData([]), 300);\r\n  };\r\n\r\n  return (\r\n    <div className={`chatbot-container ${rightContainerVisible ? \"shift-left\" : \"\"}`}>\r\n      <Navbar />\r\n      <h3>Welcome to a chat with Milo, your personal smart AI Trip Planner!</h3>\r\n\r\n      {welcomeVisible && <div className=\"welcome-message\"><h4>Click on the input bar to start the chat.</h4></div>}\r\n\r\n      <div className=\"chat-container\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\r\n            <span>{msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`}</span>\r\n          </div>\r\n        ))}\r\n        {isTyping && <div className=\"chat-bubble milo\"><span>Milo is typing...</span></div>}\r\n      </div>\r\n\r\n      {rightContainerVisible && (\r\n        <div className=\"itinerary-container\">\r\n          <button className=\"close-itinerary\" onClick={closeRightContainer}>&times;</button>\r\n          <h2>Itinerary</h2>\r\n          {itineraryData.map((line, index) => <p key={index} className=\"itinerary-text\">{line}</p>)}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"input-container\">\r\n        <input type=\"text\" placeholder=\"Type your message here...\" value={input} onChange={(e) => setInput(e.target.value)} onKeyDown={handleKeyDown} />\r\n        <button onClick={handleUserMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}