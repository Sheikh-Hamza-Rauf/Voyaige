{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\ChatbotPage\\\\MiloChatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../NavBar/Navbar\";\nimport \"./MiloChatbot.css\";\nconst MiloChatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [isTyping, setIsTyping] = useState(false);\n  const [pendingQuestions, setPendingQuestions] = useState([]);\n  const [currentPayload, setCurrentPayload] = useState({});\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\n  useEffect(() => {\n    const initialMessages = [{\n      sender: \"bot\",\n      text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\"\n    }];\n    setMessages(initialMessages);\n  }, []);\n  const addLineBreaks = text => {\n    return text.replace(/\\n/g, \"\\n\");\n  };\n  const askNextQuestion = () => {\n    if (pendingQuestions.length > 0) {\n      const nextQuestion = pendingQuestions.shift();\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: nextQuestion\n      }]);\n      setIsTyping(false);\n    } else {\n      handleUserMessage(true); // Resume API call with current payload\n    }\n  };\n  const handleUserMessage = async (resume = false) => {\n    if (!resume && !input.trim()) return;\n    const userMessage = resume ? \"\" : input.trim();\n    if (!resume) {\n      setMessages(prev => [...prev, {\n        sender: \"user\",\n        text: userMessage\n      }]);\n      setHistory([userMessage, ...history]);\n      setInput(\"\");\n      setWelcomeVisible(false);\n    }\n    let endpoint = \"/MiloChatbot\";\n    let payload = {\n      user_input: userMessage\n    };\n    if (resume) {\n      payload = currentPayload;\n    } else if ([\"generate itinerary\", \"plan a trip\", \"form a plan\", \"create a plan\", \"create a trip\"].some(phrase => userMessage.toLowerCase().includes(phrase))) {\n      const userInputParts = userMessage.split(\" \");\n      const startingCity = userInputParts.includes(\"from\") ? userInputParts[userInputParts.indexOf(\"from\") + 1] : \"Islamabad\";\n      const destinationCity = userInputParts.includes(\"to\") ? userInputParts[userInputParts.indexOf(\"to\") + 1] : \"Lahore\";\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\n      endpoint = \"/generate-itinerary\";\n      payload = {\n        starting_city: startingCity,\n        destination_city: destinationCity,\n        days\n      };\n      setPendingQuestions([\"What is your mode of transport (bus, train, or car)?\"]);\n      setCurrentPayload(payload);\n      askNextQuestion();\n      return;\n    } else if ([\"tell me about\", \"give details on\", \"what is\", \"where is\", \"give info on\", \"give information on\", \"provide details on\", \"provide information on\"].some(phrase => userMessage.toLowerCase().includes(phrase))) {\n      endpoint = \"/retrieve-details\";\n    } else if ([\"top\", \"best\"].some(phrase => userMessage.toLowerCase().includes(phrase))) {\n      const match = userMessage.match(/top\\s+(\\d+)?\\s*(hotels|restaurants|attractions|airbnbs?)\\s+in\\s+([\\w\\s]+)/i);\n      if (match) {\n        const numRecommendations = parseInt(match[1], 10) || 5;\n        const category = match[2].toLowerCase();\n        const city = match[3].trim().toLowerCase();\n        endpoint = \"/retrieve-top-items\";\n        payload = {\n          user_input: userMessage,\n          num_recommendations: numRecommendations,\n          category,\n          city\n        };\n      } else {\n        setMessages(prev => [...prev, {\n          sender: \"milo\",\n          text: \"Please specify what type of top information you need (e.g., 'top 5 hotels in Lahore').\"\n        }]);\n        setIsTyping(false);\n        return;\n      }\n    } else if (userMessage.toLowerCase().includes(\"compare\")) {\n      endpoint = \"/compare-two-options\";\n    }\n    try {\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      let botResponse;\n      if (endpoint === \"/retrieve-details\" && data.result) {\n        botResponse = data.result;\n      } else if (endpoint === \"/retrieve-top-items\" && data.result) {\n        botResponse = data.result;\n      } else if (endpoint === \"/generate-itinerary\" && data.response) {\n        botResponse = addLineBreaks(data.response);\n      } else {\n        botResponse = \"I'm here to assist you!\";\n      }\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: botResponse\n      }]);\n    } catch (error) {\n      console.error(\"Error communicating with backend:\", error);\n      setMessages(prev => [...prev, {\n        sender: \"milo\",\n        text: \"Sorry, something went wrong. Please try again later.\"\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleUserMessage();\n    } else if (e.key === \"ArrowUp\") {\n      if (historyIndex < history.length - 1) {\n        const newIndex = historyIndex + 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(newIndex);\n      }\n    } else if (e.key === \"ArrowDown\") {\n      if (historyIndex > 0) {\n        const newIndex = historyIndex - 1;\n        setInput(history[newIndex]);\n        setHistoryIndex(newIndex);\n      } else {\n        setInput(\"\");\n        setHistoryIndex(-1);\n      }\n    }\n  };\n  useEffect(() => {\n    const chatContainer = document.getElementById(\"chat-container\");\n    if (chatContainer) {\n      chatContainer.scrollTop = chatContainer.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), welcomeVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"Welcome to a chat with Milo, your personal smart AI trip planner.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"Click on the input bar to start the chat.\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chat-container\",\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat-bubble ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`))), isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-bubble milo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"Milo is typing...\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type your message here...\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyDown: handleKeyDown,\n    onFocus: () => setWelcomeVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default MiloChatbot;","map":{"version":3,"names":["React","useState","useEffect","Navbar","MiloChatbot","messages","setMessages","input","setInput","welcomeVisible","setWelcomeVisible","history","setHistory","historyIndex","setHistoryIndex","isTyping","setIsTyping","pendingQuestions","setPendingQuestions","currentPayload","setCurrentPayload","apiBaseURL","initialMessages","sender","text","addLineBreaks","replace","askNextQuestion","length","nextQuestion","shift","prev","handleUserMessage","resume","trim","userMessage","endpoint","payload","user_input","some","phrase","toLowerCase","includes","userInputParts","split","startingCity","indexOf","destinationCity","daysMatch","match","days","parseInt","starting_city","destination_city","numRecommendations","category","city","num_recommendations","response","fetch","method","headers","body","JSON","stringify","data","json","botResponse","result","error","console","handleKeyDown","e","key","newIndex","chatContainer","document","getElementById","scrollTop","scrollHeight","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","map","msg","index","type","placeholder","value","onChange","target","onKeyDown","onFocus","onClick"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Voyaige/proj/front/src/components/ChatbotPage/MiloChatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport \"./MiloChatbot.css\";\r\n\r\nconst MiloChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [welcomeVisible, setWelcomeVisible] = useState(true);\r\n  const [history, setHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [pendingQuestions, setPendingQuestions] = useState([]);\r\n  const [currentPayload, setCurrentPayload] = useState({});\r\n\r\n  const apiBaseURL = \"http://127.0.0.1:5001/\";\r\n\r\n  useEffect(() => {\r\n    const initialMessages = [\r\n      { sender: \"bot\", text: \"Hi, I'm Milo, your personal travel assistant! Let's start planning your trip.\" },\r\n    ];\r\n    setMessages(initialMessages);\r\n  }, []);\r\n\r\n  const addLineBreaks = (text) => {\r\n    return text.replace(/\\n/g, \"\\n\");\r\n  };\r\n\r\n  const askNextQuestion = () => {\r\n    if (pendingQuestions.length > 0) {\r\n      const nextQuestion = pendingQuestions.shift();\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: nextQuestion }]);\r\n      setIsTyping(false);\r\n    } else {\r\n      handleUserMessage(true); // Resume API call with current payload\r\n    }\r\n  };\r\n\r\n  const handleUserMessage = async (resume = false) => {\r\n    if (!resume && !input.trim()) return;\r\n\r\n    const userMessage = resume ? \"\" : input.trim();\r\n    if (!resume) {\r\n      setMessages((prev) => [...prev, { sender: \"user\", text: userMessage }]);\r\n      setHistory([userMessage, ...history]);\r\n      setInput(\"\");\r\n      setWelcomeVisible(false);\r\n    }\r\n\r\n    let endpoint = \"/MiloChatbot\";\r\n    let payload = { user_input: userMessage };\r\n\r\n    if (resume) {\r\n      payload = currentPayload;\r\n    } else if (\r\n      [\"generate itinerary\", \"plan a trip\", \"form a plan\", \"create a plan\", \"create a trip\"].some((phrase) =>\r\n        userMessage.toLowerCase().includes(phrase)\r\n      )\r\n    ) {\r\n      const userInputParts = userMessage.split(\" \");\r\n      const startingCity = userInputParts.includes(\"from\")\r\n        ? userInputParts[userInputParts.indexOf(\"from\") + 1]\r\n        : \"Islamabad\";\r\n      const destinationCity = userInputParts.includes(\"to\")\r\n        ? userInputParts[userInputParts.indexOf(\"to\") + 1]\r\n        : \"Lahore\";\r\n      const daysMatch = userMessage.match(/(\\d+)\\s+days/);\r\n      const days = daysMatch ? parseInt(daysMatch[1], 10) : 3;\r\n\r\n      endpoint = \"/generate-itinerary\";\r\n      payload = {\r\n        starting_city: startingCity,\r\n        destination_city: destinationCity,\r\n        days,\r\n      };\r\n\r\n      setPendingQuestions([\"What is your mode of transport (bus, train, or car)?\"]);\r\n      setCurrentPayload(payload);\r\n      askNextQuestion();\r\n      return;\r\n    } else if (\r\n      [\r\n        \"tell me about\",\r\n        \"give details on\",\r\n        \"what is\",\r\n        \"where is\",\r\n        \"give info on\",\r\n        \"give information on\",\r\n        \"provide details on\",\r\n        \"provide information on\",\r\n      ].some((phrase) => userMessage.toLowerCase().includes(phrase))\r\n    ) {\r\n      endpoint = \"/retrieve-details\";\r\n    } else if (\r\n      [\"top\", \"best\"].some((phrase) => userMessage.toLowerCase().includes(phrase))\r\n    ) {\r\n      const match = userMessage.match(/top\\s+(\\d+)?\\s*(hotels|restaurants|attractions|airbnbs?)\\s+in\\s+([\\w\\s]+)/i);\r\n      if (match) {\r\n        const numRecommendations = parseInt(match[1], 10) || 5;\r\n        const category = match[2].toLowerCase();\r\n        const city = match[3].trim().toLowerCase();\r\n\r\n        endpoint = \"/retrieve-top-items\";\r\n        payload = {\r\n          user_input: userMessage,\r\n          num_recommendations: numRecommendations,\r\n          category,\r\n          city,\r\n        };\r\n      } else {\r\n        setMessages((prev) => [...prev, { sender: \"milo\", text: \"Please specify what type of top information you need (e.g., 'top 5 hotels in Lahore').\" }]);\r\n        setIsTyping(false);\r\n        return;\r\n      }\r\n    } else if (userMessage.toLowerCase().includes(\"compare\")) {\r\n      endpoint = \"/compare-two-options\";\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${apiBaseURL}${endpoint}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await response.json();\r\n\r\n      let botResponse;\r\n\r\n      if (endpoint === \"/retrieve-details\" && data.result) {\r\n        botResponse = data.result;\r\n      } else if (endpoint === \"/retrieve-top-items\" && data.result) {\r\n        botResponse = data.result;\r\n      } else if (endpoint === \"/generate-itinerary\" && data.response) {\r\n        botResponse = addLineBreaks(data.response);\r\n      } else {\r\n        botResponse = \"I'm here to assist you!\";\r\n      }\r\n\r\n      setMessages((prev) => [...prev, { sender: \"milo\", text: botResponse }]);\r\n    } catch (error) {\r\n      console.error(\"Error communicating with backend:\", error);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"milo\", text: \"Sorry, something went wrong. Please try again later.\" },\r\n      ]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleUserMessage();\r\n    } else if (e.key === \"ArrowUp\") {\r\n      if (historyIndex < history.length - 1) {\r\n        const newIndex = historyIndex + 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      }\r\n    } else if (e.key === \"ArrowDown\") {\r\n      if (historyIndex > 0) {\r\n        const newIndex = historyIndex - 1;\r\n        setInput(history[newIndex]);\r\n        setHistoryIndex(newIndex);\r\n      } else {\r\n        setInput(\"\");\r\n        setHistoryIndex(-1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const chatContainer = document.getElementById(\"chat-container\");\r\n    if (chatContainer) {\r\n      chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <Navbar />\r\n      {welcomeVisible && (\r\n        <div className=\"welcome-message\">\r\n          <p>Welcome to a chat with Milo, your personal smart AI trip planner.</p>\r\n          <p>Click on the input bar to start the chat.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div id=\"chat-container\" className=\"chat-container\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\r\n            <span>{msg.sender === \"user\" ? `You: ${msg.text}` : `Milo: ${msg.text}`}</span>\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"chat-bubble milo\">\r\n            <span>Milo is typing...</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          onFocus={() => setWelcomeVisible(false)}\r\n        />\r\n        <button onClick={handleUserMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiloChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}