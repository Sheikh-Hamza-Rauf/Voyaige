{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\Voyaige\\\\Voyaige\\\\proj\\\\front\\\\src\\\\components\\\\Booking\\\\BookingOptions.js\";\n// import React, { useState, useEffect } from \"react\";\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\n// import Navbar from \"../NavBar/Navbar\";\n// import transportImg from \"./images/transport.png\";\n// import hotelImg from \"./images/hotel.jpg\";\n// import airbnbImg from \"./images/airbnb.jpg\";\n// import \"./BookingOptions.css\";\n// import { FaEdit } from \"react-icons/fa\";\n\n// const BookingOptions = () => {\n//   // State for selected hotel and transport (load from localStorage)\n//   const [selectedHotel, setSelectedHotel] = useState(\n//     JSON.parse(localStorage.getItem(\"selectedHotel\")) || null\n//   );\n//   const [selectedTransport, setSelectedTransport] = useState(\n//     JSON.parse(localStorage.getItem(\"selectedTransport\")) || null\n//   );\n\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const { tripDetails, dayIndex, dayData } = location.state || {};\n\n//   // Handle editing the hotel selection\n//   const handleEditHotel = () => {\n//     navigate(\"/BookHotel\");\n//   };\n\n//   // Confirm Booking and Send Data Back to UserCustomization\n//   const handleConfirmBooking = () => {\n//     const updatedDayData = {\n//       ...dayData,\n//       transport: selectedTransport,\n//       accommodation: selectedHotel,\n//       cost: calculateTotalPrice(),\n//     };\n\n//     const bookingData = {\n//       selectedHotel,\n//       selectedTransport,\n//       totalPrice: calculateTotalPrice(),\n//       tripDetails,\n//       dayIndex,\n//       updatedDayData,\n//     };\n\n//     // Navigate back to UserCustomization with all booking data\n//     navigate(\"/UserCustomization\", { state: { bookingData } });\n//   };\n\n//   // Update localStorage whenever hotel or transport is selected\n//   useEffect(() => {\n//     if (selectedHotel) {\n//       localStorage.setItem(\"selectedHotel\", JSON.stringify(selectedHotel));\n//     }\n//     if (selectedTransport) {\n//       localStorage.setItem(\"selectedTransport\", JSON.stringify(selectedTransport));\n//     }\n//   }, [selectedHotel, selectedTransport]);\n\n//   // Calculate total price\n//   const calculateTotalPrice = () => {\n//     let totalPrice = 0;\n//     if (selectedHotel?.price) totalPrice += parseFloat(selectedHotel.price) || 0;\n//     if (selectedTransport?.price) totalPrice += parseFloat(selectedTransport.price) || 0;\n//     return totalPrice;\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <Navbar />\n\n//       {/* Back Arrow Icon */}\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/UserCustomization\")}>\n//         ←\n//       </div>\n\n//       {/* Centered Heading */}\n//       <div className=\"center-heading\">\n//       </div>\n\n//       {/* Booking Options */}\n//       <div className=\"booking-options\">\n//         <div className=\"option-card\">\n//           <h3>1. Customize Transport</h3>\n//           <img src={transportImg} alt=\"Transport\" />\n//           {selectedTransport ? (\n//             <div className=\"booked-transport\">\n//               <p><strong>Transport Selected:</strong> {selectedTransport.name || selectedTransport.car_name || selectedTransport.bus_name || selectedTransport.train_name}</p>\n//               <p>Departure: {selectedTransport.departure_time || \"N/A\"}</p>\n//               <p>Price: {selectedTransport.price ? `${selectedTransport.price} PKR` : \"Price Not Available\"}</p>\n//               <button className=\"edit-btn\" onClick={() => navigate(\"/BookTransport\")}>\n//                 <FaEdit /> Edit\n//               </button>\n//             </div>\n//           ) : (\n//             <Link to=\"/BookTransport\" className=\"explore-btn\">\n//               Explore\n//             </Link>\n//           )}\n//         </div>\n\n//         <div className=\"option-card\">\n//           <h3>2. Book a Hotel</h3>\n//           <img src={hotelImg} alt=\"Hotel\" />\n//           {selectedHotel ? (\n//             <div className=\"booked-hotel\">\n//               <p><strong>Hotel Booked:</strong> {selectedHotel.name}</p>\n//               <p>Rating: {selectedHotel.rating} / 5</p>\n//               <p>Price: {selectedHotel.price} Rs per night</p>\n//               <p>Status: <span style={{ color: \"green\" }}>✔</span> Booked</p>\n//               <button className=\"edit-btn\" onClick={handleEditHotel}>\n//                 <FaEdit /> Edit\n//               </button>\n//             </div>\n//           ) : (\n//             <Link to=\"/BookHotel\" className=\"explore-btn\">\n//               Explore\n//             </Link>\n//           )}\n//         </div>\n\n//         <div className=\"option-card\">\n//           <h3>3. Book an Airbnb</h3>\n//           <img src={airbnbImg} alt=\"Airbnb\" />\n//           <Link to=\"/BookAirbnb\" className=\"explore-btn\">\n//             Explore\n//           </Link>\n//         </div>\n//       </div>\n\n//       {/* Confirm Button */}\n//       <div className=\"confirm-btn-container\">\n//         <button className=\"confirm-btn\" onClick={handleConfirmBooking}>\n//           Confirm: {calculateTotalPrice()} PKR ➔\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookingOptions;\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport Navbar from \"../NavBar/Navbar\";\nimport transportImg from \"./images/transport.png\";\nimport hotelImg from \"./images/hotel.jpg\";\nimport airbnbImg from \"./images/airbnb.jpg\";\nimport \"./BookingOptions.css\";\nimport { FaEdit } from \"react-icons/fa\";\nconst BookingOptions = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    customizationData,\n    currentDetails\n  } = location.state || {};\n\n  // Create a unique trip ID based on trip details to use as storage key\n  // This ensures different trips have separate storage\n  const getTripStorageKey = () => {\n    if (!customizationData) return null;\n    const {\n      startingPoint,\n      destination,\n      startDate,\n      endDate,\n      guests\n    } = customizationData;\n    if (!startingPoint || !destination || !startDate || !endDate) return null;\n    return `trip_${startingPoint}_${destination}_${startDate}_${endDate}_${guests}`;\n  };\n  const tripStorageKey = getTripStorageKey();\n\n  // Initialize state with data from location state or trip-specific localStorage\n  const [selectedHotel, setSelectedHotel] = useState(() => {\n    // First try to get from currentDetails passed in navigation\n    if (currentDetails && currentDetails.hotel) {\n      return currentDetails.hotel;\n    }\n\n    // If not found and we have a valid tripStorageKey, try to get from localStorage\n    if (tripStorageKey) {\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n      if (savedTripDetails) {\n        try {\n          const parsedDetails = JSON.parse(savedTripDetails);\n          return parsedDetails.hotel || null;\n        } catch (error) {\n          console.error(\"Error parsing trip details from localStorage:\", error);\n          return null;\n        }\n      }\n    }\n    return null;\n  });\n  const [selectedTransport, setSelectedTransport] = useState(() => {\n    // First try to get from currentDetails passed in navigation\n    if (currentDetails && currentDetails.transport) {\n      return currentDetails.transport;\n    }\n\n    // If not found and we have a valid tripStorageKey, try to get from localStorage\n    if (tripStorageKey) {\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n      if (savedTripDetails) {\n        try {\n          const parsedDetails = JSON.parse(savedTripDetails);\n          return parsedDetails.transport || null;\n        } catch (error) {\n          console.error(\"Error parsing trip details from localStorage:\", error);\n          return null;\n        }\n      }\n    }\n    return null;\n  });\n\n  // Calculate total price\n  const calculateTotalPrice = () => {\n    let totalPrice = 0;\n    if (selectedHotel === null || selectedHotel === void 0 ? void 0 : selectedHotel.price) totalPrice += parseFloat(selectedHotel.price) || 0;\n    if (selectedTransport === null || selectedTransport === void 0 ? void 0 : selectedTransport.price) totalPrice += parseFloat(selectedTransport.price) || 0;\n    return totalPrice;\n  };\n\n  // Handle editing the hotel selection\n  const handleEditHotel = () => {\n    // Save current trip key to localStorage so hotel booking page knows which trip we're working with\n    if (tripStorageKey) {\n      localStorage.setItem('currentTripKey', tripStorageKey);\n    }\n    navigate(\"/BookHotel\", {\n      state: {\n        customizationData,\n        returnToOptions: true\n      }\n    });\n  };\n\n  // Handle editing the transport selection\n  const handleEditTransport = () => {\n    // Save current trip key to localStorage so transport booking page knows which trip we're working with\n    if (tripStorageKey) {\n      localStorage.setItem('currentTripKey', tripStorageKey);\n    }\n    navigate(\"/BookTransport\", {\n      state: {\n        customizationData,\n        returnToOptions: true\n      }\n    });\n  };\n\n  // When a user returns from BookHotel or BookTransport pages, update local state\n  useEffect(() => {\n    if (tripStorageKey) {\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n      if (savedTripDetails) {\n        try {\n          const parsedDetails = JSON.parse(savedTripDetails);\n          // Only update if the data exists to avoid overwriting with null\n          if (parsedDetails.hotel) setSelectedHotel(parsedDetails.hotel);\n          if (parsedDetails.transport) setSelectedTransport(parsedDetails.transport);\n        } catch (error) {\n          console.error(\"Error parsing trip details from localStorage:\", error);\n        }\n      }\n    }\n  }, [tripStorageKey]);\n\n  // Save selections to trip-specific localStorage\n  useEffect(() => {\n    if (tripStorageKey) {\n      // Get existing trip details first\n      let tripDetails = {\n        hotel: null,\n        transport: null\n      };\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\n      if (savedTripDetails) {\n        try {\n          tripDetails = JSON.parse(savedTripDetails);\n        } catch (error) {\n          console.error(\"Error parsing trip details:\", error);\n        }\n      }\n\n      // Update with new selections\n      const updatedDetails = {\n        ...tripDetails,\n        hotel: selectedHotel,\n        transport: selectedTransport\n      };\n\n      // Save back to localStorage\n      localStorage.setItem(`tripDetails_${tripStorageKey}`, JSON.stringify(updatedDetails));\n    }\n  }, [selectedHotel, selectedTransport, tripStorageKey]);\n\n  // Confirm Booking and Send Data Back to UserCustomization\n  const handleConfirmBooking = () => {\n    // Create booking data to pass back to UserCustomization\n    const bookingData = {\n      selectedHotel,\n      selectedTransport,\n      totalPrice: calculateTotalPrice()\n    };\n\n    // Navigate back to UserCustomization with all booking data\n    navigate(\"/UserCustomization\", {\n      state: {\n        customizationData,\n        bookingData\n      }\n    });\n  };\n\n  // If we don't have customization data, redirect to the home page\n  useEffect(() => {\n    if (!customizationData && !tripStorageKey) {\n      navigate(\"/\");\n    }\n  }, [customizationData, tripStorageKey, navigate]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back-arrow\",\n    onClick: () => navigate(\"/UserCustomization\", {\n      state: {\n        customizationData\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  }, \"\\u2190\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }\n  }, \"Booking Options\"), tripStorageKey && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"trip-id-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, \"Trip from \", (customizationData === null || customizationData === void 0 ? void 0 : customizationData.startingPoint) || \"\", \" to \", (customizationData === null || customizationData === void 0 ? void 0 : customizationData.destination) || \"\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"booking-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }, \"1. Customize Transport\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: transportImg,\n    alt: \"Transport\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }), selectedTransport ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"booked-transport\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 18\n    }\n  }, \"Transport Selected:\"), \" \", selectedTransport.name || selectedTransport.car_name || selectedTransport.bus_name || selectedTransport.train_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, \"Type: \", selectedTransport.type || \"N/A\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, \"Departure: \", selectedTransport.departure_time || \"N/A\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, \"Price: \", selectedTransport.price ? `${selectedTransport.price} PKR` : \"Price Not Available\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit-btn\",\n    onClick: handleEditTransport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FaEdit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }), \" Edit\")) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/BookTransport\",\n    state: {\n      customizationData,\n      returnToOptions: true\n    },\n    className: \"explore-btn\",\n    onClick: () => {\n      if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, \"Explore\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 11\n    }\n  }, \"2. Book a Hotel\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: hotelImg,\n    alt: \"Hotel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }), selectedHotel ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"booked-hotel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 18\n    }\n  }, \"Hotel Booked:\"), \" \", selectedHotel.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 15\n    }\n  }, \"Rating: \", selectedHotel.rating, \" / 5\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }, \"Price: \", selectedHotel.price, \" PKR per night\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }, \"Status: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 26\n    }\n  }, \"\\u2714\"), \" Selected\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit-btn\",\n    onClick: handleEditHotel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FaEdit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }), \" Edit\")) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/BookHotel\",\n    state: {\n      customizationData,\n      returnToOptions: true\n    },\n    className: \"explore-btn\",\n    onClick: () => {\n      if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }\n  }, \"Explore\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }, \"3. Book an Airbnb\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: airbnbImg,\n    alt: \"Airbnb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/BookAirbnb\",\n    state: {\n      customizationData,\n      returnToOptions: true\n    },\n    className: \"explore-btn\",\n    onClick: () => {\n      if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 11\n    }\n  }, \"Explore\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confirm-btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-btn\",\n    onClick: handleConfirmBooking,\n    disabled: !selectedHotel && !selectedTransport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  }, \"Confirm: \", calculateTotalPrice().toLocaleString(), \" PKR \\u2794\")), !selectedHotel && !selectedTransport && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"selection-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }\n  }, \"Please select at least one option before confirming.\"));\n};\nexport default BookingOptions;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","Navbar","transportImg","hotelImg","airbnbImg","FaEdit","BookingOptions","navigate","location","customizationData","currentDetails","state","getTripStorageKey","startingPoint","destination","startDate","endDate","guests","tripStorageKey","selectedHotel","setSelectedHotel","hotel","savedTripDetails","localStorage","getItem","parsedDetails","JSON","parse","error","console","selectedTransport","setSelectedTransport","transport","calculateTotalPrice","totalPrice","price","parseFloat","handleEditHotel","setItem","returnToOptions","handleEditTransport","tripDetails","updatedDetails","stringify","handleConfirmBooking","bookingData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","name","car_name","bus_name","train_name","type","departure_time","to","rating","style","color","disabled","toLocaleString"],"sources":["F:/Web/Voyaige/Voyaige/proj/front/src/components/Booking/BookingOptions.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n// import Navbar from \"../NavBar/Navbar\";\r\n// import transportImg from \"./images/transport.png\";\r\n// import hotelImg from \"./images/hotel.jpg\";\r\n// import airbnbImg from \"./images/airbnb.jpg\";\r\n// import \"./BookingOptions.css\";\r\n// import { FaEdit } from \"react-icons/fa\";\r\n\r\n// const BookingOptions = () => {\r\n//   // State for selected hotel and transport (load from localStorage)\r\n//   const [selectedHotel, setSelectedHotel] = useState(\r\n//     JSON.parse(localStorage.getItem(\"selectedHotel\")) || null\r\n//   );\r\n//   const [selectedTransport, setSelectedTransport] = useState(\r\n//     JSON.parse(localStorage.getItem(\"selectedTransport\")) || null\r\n//   );\r\n\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n//   const { tripDetails, dayIndex, dayData } = location.state || {};\r\n\r\n//   // Handle editing the hotel selection\r\n//   const handleEditHotel = () => {\r\n//     navigate(\"/BookHotel\");\r\n//   };\r\n\r\n//   // Confirm Booking and Send Data Back to UserCustomization\r\n//   const handleConfirmBooking = () => {\r\n//     const updatedDayData = {\r\n//       ...dayData,\r\n//       transport: selectedTransport,\r\n//       accommodation: selectedHotel,\r\n//       cost: calculateTotalPrice(),\r\n//     };\r\n\r\n//     const bookingData = {\r\n//       selectedHotel,\r\n//       selectedTransport,\r\n//       totalPrice: calculateTotalPrice(),\r\n//       tripDetails,\r\n//       dayIndex,\r\n//       updatedDayData,\r\n//     };\r\n\r\n//     // Navigate back to UserCustomization with all booking data\r\n//     navigate(\"/UserCustomization\", { state: { bookingData } });\r\n//   };\r\n\r\n//   // Update localStorage whenever hotel or transport is selected\r\n//   useEffect(() => {\r\n//     if (selectedHotel) {\r\n//       localStorage.setItem(\"selectedHotel\", JSON.stringify(selectedHotel));\r\n//     }\r\n//     if (selectedTransport) {\r\n//       localStorage.setItem(\"selectedTransport\", JSON.stringify(selectedTransport));\r\n//     }\r\n//   }, [selectedHotel, selectedTransport]);\r\n\r\n//   // Calculate total price\r\n//   const calculateTotalPrice = () => {\r\n//     let totalPrice = 0;\r\n//     if (selectedHotel?.price) totalPrice += parseFloat(selectedHotel.price) || 0;\r\n//     if (selectedTransport?.price) totalPrice += parseFloat(selectedTransport.price) || 0;\r\n//     return totalPrice;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <Navbar />\r\n\r\n//       {/* Back Arrow Icon */}\r\n//       <div className=\"back-arrow\" onClick={() => navigate(\"/UserCustomization\")}>\r\n//         ←\r\n//       </div>\r\n\r\n//       {/* Centered Heading */}\r\n//       <div className=\"center-heading\">\r\n//       </div>\r\n\r\n//       {/* Booking Options */}\r\n//       <div className=\"booking-options\">\r\n//         <div className=\"option-card\">\r\n//           <h3>1. Customize Transport</h3>\r\n//           <img src={transportImg} alt=\"Transport\" />\r\n//           {selectedTransport ? (\r\n//             <div className=\"booked-transport\">\r\n//               <p><strong>Transport Selected:</strong> {selectedTransport.name || selectedTransport.car_name || selectedTransport.bus_name || selectedTransport.train_name}</p>\r\n//               <p>Departure: {selectedTransport.departure_time || \"N/A\"}</p>\r\n//               <p>Price: {selectedTransport.price ? `${selectedTransport.price} PKR` : \"Price Not Available\"}</p>\r\n//               <button className=\"edit-btn\" onClick={() => navigate(\"/BookTransport\")}>\r\n//                 <FaEdit /> Edit\r\n//               </button>\r\n//             </div>\r\n//           ) : (\r\n//             <Link to=\"/BookTransport\" className=\"explore-btn\">\r\n//               Explore\r\n//             </Link>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"option-card\">\r\n//           <h3>2. Book a Hotel</h3>\r\n//           <img src={hotelImg} alt=\"Hotel\" />\r\n//           {selectedHotel ? (\r\n//             <div className=\"booked-hotel\">\r\n//               <p><strong>Hotel Booked:</strong> {selectedHotel.name}</p>\r\n//               <p>Rating: {selectedHotel.rating} / 5</p>\r\n//               <p>Price: {selectedHotel.price} Rs per night</p>\r\n//               <p>Status: <span style={{ color: \"green\" }}>✔</span> Booked</p>\r\n//               <button className=\"edit-btn\" onClick={handleEditHotel}>\r\n//                 <FaEdit /> Edit\r\n//               </button>\r\n//             </div>\r\n//           ) : (\r\n//             <Link to=\"/BookHotel\" className=\"explore-btn\">\r\n//               Explore\r\n//             </Link>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"option-card\">\r\n//           <h3>3. Book an Airbnb</h3>\r\n//           <img src={airbnbImg} alt=\"Airbnb\" />\r\n//           <Link to=\"/BookAirbnb\" className=\"explore-btn\">\r\n//             Explore\r\n//           </Link>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Confirm Button */}\r\n//       <div className=\"confirm-btn-container\">\r\n//         <button className=\"confirm-btn\" onClick={handleConfirmBooking}>\r\n//           Confirm: {calculateTotalPrice()} PKR ➔\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingOptions;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport transportImg from \"./images/transport.png\";\r\nimport hotelImg from \"./images/hotel.jpg\";\r\nimport airbnbImg from \"./images/airbnb.jpg\";\r\nimport \"./BookingOptions.css\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nconst BookingOptions = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { customizationData, currentDetails } = location.state || {};\r\n\r\n  // Create a unique trip ID based on trip details to use as storage key\r\n  // This ensures different trips have separate storage\r\n  const getTripStorageKey = () => {\r\n    if (!customizationData) return null;\r\n    \r\n    const { startingPoint, destination, startDate, endDate, guests } = customizationData;\r\n    if (!startingPoint || !destination || !startDate || !endDate) return null;\r\n    \r\n    return `trip_${startingPoint}_${destination}_${startDate}_${endDate}_${guests}`;\r\n  };\r\n\r\n  const tripStorageKey = getTripStorageKey();\r\n  \r\n  // Initialize state with data from location state or trip-specific localStorage\r\n  const [selectedHotel, setSelectedHotel] = useState(() => {\r\n    // First try to get from currentDetails passed in navigation\r\n    if (currentDetails && currentDetails.hotel) {\r\n      return currentDetails.hotel;\r\n    }\r\n    \r\n    // If not found and we have a valid tripStorageKey, try to get from localStorage\r\n    if (tripStorageKey) {\r\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n      if (savedTripDetails) {\r\n        try {\r\n          const parsedDetails = JSON.parse(savedTripDetails);\r\n          return parsedDetails.hotel || null;\r\n        } catch (error) {\r\n          console.error(\"Error parsing trip details from localStorage:\", error);\r\n          return null;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  });\r\n  \r\n  const [selectedTransport, setSelectedTransport] = useState(() => {\r\n    // First try to get from currentDetails passed in navigation\r\n    if (currentDetails && currentDetails.transport) {\r\n      return currentDetails.transport;\r\n    }\r\n    \r\n    // If not found and we have a valid tripStorageKey, try to get from localStorage\r\n    if (tripStorageKey) {\r\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n      if (savedTripDetails) {\r\n        try {\r\n          const parsedDetails = JSON.parse(savedTripDetails);\r\n          return parsedDetails.transport || null;\r\n        } catch (error) {\r\n          console.error(\"Error parsing trip details from localStorage:\", error);\r\n          return null;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  });\r\n\r\n  // Calculate total price\r\n  const calculateTotalPrice = () => {\r\n    let totalPrice = 0;\r\n    if (selectedHotel?.price) totalPrice += parseFloat(selectedHotel.price) || 0;\r\n    if (selectedTransport?.price) totalPrice += parseFloat(selectedTransport.price) || 0;\r\n    return totalPrice;\r\n  };\r\n\r\n  // Handle editing the hotel selection\r\n  const handleEditHotel = () => {\r\n    // Save current trip key to localStorage so hotel booking page knows which trip we're working with\r\n    if (tripStorageKey) {\r\n      localStorage.setItem('currentTripKey', tripStorageKey);\r\n    }\r\n    navigate(\"/BookHotel\", { \r\n      state: { \r\n        customizationData,\r\n        returnToOptions: true\r\n      } \r\n    });\r\n  };\r\n\r\n  // Handle editing the transport selection\r\n  const handleEditTransport = () => {\r\n    // Save current trip key to localStorage so transport booking page knows which trip we're working with\r\n    if (tripStorageKey) {\r\n      localStorage.setItem('currentTripKey', tripStorageKey);\r\n    }\r\n    navigate(\"/BookTransport\", { \r\n      state: { \r\n        customizationData,\r\n        returnToOptions: true\r\n      } \r\n    });\r\n  };\r\n\r\n  // When a user returns from BookHotel or BookTransport pages, update local state\r\n  useEffect(() => {\r\n    if (tripStorageKey) {\r\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n      if (savedTripDetails) {\r\n        try {\r\n          const parsedDetails = JSON.parse(savedTripDetails);\r\n          // Only update if the data exists to avoid overwriting with null\r\n          if (parsedDetails.hotel) setSelectedHotel(parsedDetails.hotel);\r\n          if (parsedDetails.transport) setSelectedTransport(parsedDetails.transport);\r\n        } catch (error) {\r\n          console.error(\"Error parsing trip details from localStorage:\", error);\r\n        }\r\n      }\r\n    }\r\n  }, [tripStorageKey]);\r\n\r\n  // Save selections to trip-specific localStorage\r\n  useEffect(() => {\r\n    if (tripStorageKey) {\r\n      // Get existing trip details first\r\n      let tripDetails = { hotel: null, transport: null };\r\n      const savedTripDetails = localStorage.getItem(`tripDetails_${tripStorageKey}`);\r\n      if (savedTripDetails) {\r\n        try {\r\n          tripDetails = JSON.parse(savedTripDetails);\r\n        } catch (error) {\r\n          console.error(\"Error parsing trip details:\", error);\r\n        }\r\n      }\r\n      \r\n      // Update with new selections\r\n      const updatedDetails = {\r\n        ...tripDetails,\r\n        hotel: selectedHotel,\r\n        transport: selectedTransport\r\n      };\r\n      \r\n      // Save back to localStorage\r\n      localStorage.setItem(`tripDetails_${tripStorageKey}`, JSON.stringify(updatedDetails));\r\n    }\r\n  }, [selectedHotel, selectedTransport, tripStorageKey]);\r\n\r\n  // Confirm Booking and Send Data Back to UserCustomization\r\n  const handleConfirmBooking = () => {\r\n    // Create booking data to pass back to UserCustomization\r\n    const bookingData = {\r\n      selectedHotel,\r\n      selectedTransport,\r\n      totalPrice: calculateTotalPrice()\r\n    };\r\n\r\n    // Navigate back to UserCustomization with all booking data\r\n    navigate(\"/UserCustomization\", { \r\n      state: { \r\n        customizationData, \r\n        bookingData \r\n      } \r\n    });\r\n  };\r\n  \r\n  // If we don't have customization data, redirect to the home page\r\n  useEffect(() => {\r\n    if (!customizationData && !tripStorageKey) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [customizationData, tripStorageKey, navigate]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n\r\n      {/* Back Arrow Icon */}\r\n      <div className=\"back-arrow\" onClick={() => navigate(\"/UserCustomization\", { state: { customizationData } })}>\r\n        ←\r\n      </div>\r\n\r\n      {/* Centered Heading */}\r\n      <div className=\"center-heading\">\r\n        <h2>Booking Options</h2>\r\n        {tripStorageKey && (\r\n          <p className=\"trip-id-info\">\r\n            Trip from {customizationData?.startingPoint || \"\"} to {customizationData?.destination || \"\"}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Booking Options */}\r\n      <div className=\"booking-options\">\r\n        <div className=\"option-card\">\r\n          <h3>1. Customize Transport</h3>\r\n          <img src={transportImg} alt=\"Transport\" />\r\n          {selectedTransport ? (\r\n            <div className=\"booked-transport\">\r\n              <p><strong>Transport Selected:</strong> {selectedTransport.name || selectedTransport.car_name || selectedTransport.bus_name || selectedTransport.train_name}</p>\r\n              <p>Type: {selectedTransport.type || \"N/A\"}</p>\r\n              <p>Departure: {selectedTransport.departure_time || \"N/A\"}</p>\r\n              <p>Price: {selectedTransport.price ? `${selectedTransport.price} PKR` : \"Price Not Available\"}</p>\r\n              <button className=\"edit-btn\" onClick={handleEditTransport}>\r\n                <FaEdit /> Edit\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <Link \r\n              to=\"/BookTransport\" \r\n              state={{ customizationData, returnToOptions: true }}\r\n              className=\"explore-btn\"\r\n              onClick={() => {\r\n                if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\r\n              }}\r\n            >\r\n              Explore\r\n            </Link>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"option-card\">\r\n          <h3>2. Book a Hotel</h3>\r\n          <img src={hotelImg} alt=\"Hotel\" />\r\n          {selectedHotel ? (\r\n            <div className=\"booked-hotel\">\r\n              <p><strong>Hotel Booked:</strong> {selectedHotel.name}</p>\r\n              <p>Rating: {selectedHotel.rating} / 5</p>\r\n              <p>Price: {selectedHotel.price} PKR per night</p>\r\n              <p>Status: <span style={{ color: \"green\" }}>✔</span> Selected</p>\r\n              <button className=\"edit-btn\" onClick={handleEditHotel}>\r\n                <FaEdit /> Edit\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <Link \r\n              to=\"/BookHotel\" \r\n              state={{ customizationData, returnToOptions: true }}\r\n              className=\"explore-btn\"\r\n              onClick={() => {\r\n                if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\r\n              }}\r\n            >\r\n              Explore\r\n            </Link>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"option-card\">\r\n          <h3>3. Book an Airbnb</h3>\r\n          <img src={airbnbImg} alt=\"Airbnb\" />\r\n          <Link \r\n            to=\"/BookAirbnb\" \r\n            state={{ customizationData, returnToOptions: true }}\r\n            className=\"explore-btn\" \r\n            onClick={() => {\r\n              if (tripStorageKey) localStorage.setItem('currentTripKey', tripStorageKey);\r\n            }}\r\n          >\r\n            Explore\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Confirm Button */}\r\n      <div className=\"confirm-btn-container\">\r\n        <button \r\n          className=\"confirm-btn\" \r\n          onClick={handleConfirmBooking}\r\n          disabled={!selectedHotel && !selectedTransport}\r\n        >\r\n          Confirm: {calculateTotalPrice().toLocaleString()} PKR ➔\r\n        </button>\r\n      </div>\r\n      \r\n      {(!selectedHotel && !selectedTransport) && (\r\n        <p className=\"selection-note\">Please select at least one option before confirming.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingOptions;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAO,sBAAsB;AAC7B,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES,iBAAiB;IAAEC;EAAe,CAAC,GAAGF,QAAQ,CAACG,KAAK,IAAI,CAAC,CAAC;;EAElE;EACA;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACH,iBAAiB,EAAE,OAAO,IAAI;IAEnC,MAAM;MAAEI,aAAa;MAA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","ignoreList":[]},"metadata":{},"sourceType":"module"}